/* eslint-disable */
import { TypedDocumentNode as DocumentNode } from "@graphql-typed-document-node/core";
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = {
  [K in keyof T]: T[K];
};
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & {
  [SubKey in K]?: Maybe<T[SubKey]>;
};
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & {
  [SubKey in K]: Maybe<T[SubKey]>;
};
export type MakeEmpty<
  T extends { [key: string]: unknown },
  K extends keyof T,
> = { [_ in K]?: never };
export type Incremental<T> =
  | T
  | {
      [P in keyof T]?: P extends " $fragmentName" | "__typename" ? T[P] : never;
    };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: { input: string; output: string };
  String: { input: string; output: string };
  Boolean: { input: boolean; output: boolean };
  Int: { input: number; output: number };
  Float: { input: number; output: number };
  Bool: { input: any; output: any };
  Date: { input: any; output: any };
  DateTime: { input: any; output: any };
  /** The `JSON` scalar type represents JSON values as specified by [ECMA-404](https://ecma-international.org/publications-and-standards/standards/ecma-404/). */
  JSON: { input: any; output: any };
};

export type BannerItemElement = IData &
  _IComponent &
  _IContent & {
    __typename?: "BannerItemElement";
    Alt?: Maybe<Scalars["String"]["output"]>;
    BackgroundLink?: Maybe<ContentUrl>;
    ButtonLink?: Maybe<ContentUrl>;
    ButtonText?: Maybe<Scalars["String"]["output"]>;
    CssClass?: Maybe<Scalars["String"]["output"]>;
    HeadingText?: Maybe<Scalars["String"]["output"]>;
    ImageDesktop?: Maybe<ContentReference>;
    ImageMobile?: Maybe<ContentReference>;
    IsFullWidthImage?: Maybe<Scalars["Boolean"]["output"]>;
    Loading?: Maybe<Scalars["String"]["output"]>;
    OverlayColor?: Maybe<Scalars["String"]["output"]>;
    OverlayOpacity?: Maybe<Scalars["Float"]["output"]>;
    RichText?: Maybe<RichText>;
    SubHeading?: Maybe<Scalars["String"]["output"]>;
    /** @deprecated Use `_link` field instead */
    _children?: Maybe<QueryRef>;
    _deleted?: Maybe<Scalars["Bool"]["output"]>;
    _fulltext?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
    _id?: Maybe<Scalars["String"]["output"]>;
    _link?: Maybe<QueryRef>;
    _metadata?: Maybe<IContentMetadata>;
    _modified?: Maybe<Scalars["Date"]["output"]>;
    _score?: Maybe<Scalars["Float"]["output"]>;
  };

export type BannerItemElement_fulltextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type BannerItemElement_linkArgs = {
  type?: InputMaybe<LinkTypes>;
};

export type BannerItemElementAutocomplete = {
  __typename?: "BannerItemElementAutocomplete";
  BackgroundLink?: Maybe<ContentUrlAutocomplete>;
  ButtonLink?: Maybe<ContentUrlAutocomplete>;
  ImageDesktop?: Maybe<ContentReferenceAutocomplete>;
  ImageMobile?: Maybe<ContentReferenceAutocomplete>;
  RichText?: Maybe<RichTextAutocomplete>;
  _metadata?: Maybe<IContentMetadataAutocomplete>;
};

export type BannerItemElementFacet = {
  __typename?: "BannerItemElementFacet";
  BackgroundLink?: Maybe<ContentUrlFacet>;
  ButtonLink?: Maybe<ContentUrlFacet>;
  ImageDesktop?: Maybe<ContentReferenceFacet>;
  ImageMobile?: Maybe<ContentReferenceFacet>;
  RichText?: Maybe<RichTextFacet>;
  _metadata?: Maybe<IContentMetadataFacet>;
};

export type BannerItemElementOrderByInput = {
  BackgroundLink?: InputMaybe<ContentUrlOrderByInput>;
  ButtonLink?: InputMaybe<ContentUrlOrderByInput>;
  ImageDesktop?: InputMaybe<ContentReferenceOrderByInput>;
  ImageMobile?: InputMaybe<ContentReferenceOrderByInput>;
  RichText?: InputMaybe<RichTextOrderByInput>;
  _metadata?: InputMaybe<IContentMetadataOrderByInput>;
  _minimumScore?: InputMaybe<Scalars["Float"]["input"]>;
  _modified?: InputMaybe<OrderBy>;
  _ranking?: InputMaybe<Ranking>;
  /** The value needs to be a positive value, but cannot exceed the maximum value of an integer. In case it is exceeded, the maximum of an integer is used. In case of a negative value, semantic search will be disabled. */
  _semanticWeight?: InputMaybe<Scalars["Float"]["input"]>;
};

export type BannerItemElementOutput = {
  __typename?: "BannerItemElementOutput";
  autocomplete?: Maybe<BannerItemElementAutocomplete>;
  cursor?: Maybe<Scalars["String"]["output"]>;
  facets?: Maybe<BannerItemElementFacet>;
  item?: Maybe<BannerItemElement>;
  items?: Maybe<Array<Maybe<BannerItemElement>>>;
  total?: Maybe<Scalars["Int"]["output"]>;
};

export type BannerItemElementOutputtotalArgs = {
  all?: InputMaybe<Scalars["Boolean"]["input"]>;
};

export type BannerItemElementWhereInput = {
  BackgroundLink?: InputMaybe<ContentUrlWhereInput>;
  ButtonLink?: InputMaybe<ContentUrlWhereInput>;
  ImageDesktop?: InputMaybe<ContentReferenceWhereInput>;
  ImageMobile?: InputMaybe<ContentReferenceWhereInput>;
  RichText?: InputMaybe<RichTextWhereInput>;
  _and?: InputMaybe<Array<InputMaybe<BannerItemElementWhereInput>>>;
  _fulltext?: InputMaybe<SearchableStringFilterInput>;
  _metadata?: InputMaybe<IContentMetadataWhereInput>;
  _modified?: InputMaybe<DateFilterInput>;
  _not?: InputMaybe<Array<InputMaybe<BannerItemElementWhereInput>>>;
  _or?: InputMaybe<Array<InputMaybe<BannerItemElementWhereInput>>>;
};

export type BlankExperience = IData &
  _IContent &
  _IExperience &
  _IPage & {
    __typename?: "BlankExperience";
    CompanyAddress?: Maybe<Array<Maybe<_IContent>>>;
    Footer?: Maybe<Array<Maybe<_IContent>>>;
    Header?: Maybe<Array<Maybe<_IContent>>>;
    SeoSettings?: Maybe<PageSeoSettingsProperty>;
    /** @deprecated Use `_link` field instead */
    _children?: Maybe<QueryRef>;
    _deleted?: Maybe<Scalars["Bool"]["output"]>;
    _fulltext?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
    _id?: Maybe<Scalars["String"]["output"]>;
    _link?: Maybe<QueryRef>;
    _metadata?: Maybe<IContentMetadata>;
    _modified?: Maybe<Scalars["Date"]["output"]>;
    _score?: Maybe<Scalars["Float"]["output"]>;
    composition?: Maybe<CompositionStructureNode>;
  };

export type BlankExperience_fulltextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type BlankExperience_linkArgs = {
  type?: InputMaybe<LinkTypes>;
};

export type BlankExperienceAutocomplete = {
  __typename?: "BlankExperienceAutocomplete";
  CompanyAddress?: Maybe<_IContentAutocomplete>;
  Footer?: Maybe<_IContentAutocomplete>;
  Header?: Maybe<_IContentAutocomplete>;
  SeoSettings?: Maybe<PageSeoSettingsPropertyAutocomplete>;
  _metadata?: Maybe<IContentMetadataAutocomplete>;
  composition?: Maybe<CompositionStructureNodeAutocomplete>;
};

export type BlankExperienceFacet = {
  __typename?: "BlankExperienceFacet";
  CompanyAddress?: Maybe<_IContentFacet>;
  Footer?: Maybe<_IContentFacet>;
  Header?: Maybe<_IContentFacet>;
  SeoSettings?: Maybe<PageSeoSettingsPropertyFacet>;
  _metadata?: Maybe<IContentMetadataFacet>;
  composition?: Maybe<CompositionStructureNodeFacet>;
};

export type BlankExperienceOrderByInput = {
  CompanyAddress?: InputMaybe<_IContentOrderByInput>;
  Footer?: InputMaybe<_IContentOrderByInput>;
  Header?: InputMaybe<_IContentOrderByInput>;
  SeoSettings?: InputMaybe<PageSeoSettingsPropertyOrderByInput>;
  _metadata?: InputMaybe<IContentMetadataOrderByInput>;
  _minimumScore?: InputMaybe<Scalars["Float"]["input"]>;
  _modified?: InputMaybe<OrderBy>;
  _ranking?: InputMaybe<Ranking>;
  /** The value needs to be a positive value, but cannot exceed the maximum value of an integer. In case it is exceeded, the maximum of an integer is used. In case of a negative value, semantic search will be disabled. */
  _semanticWeight?: InputMaybe<Scalars["Float"]["input"]>;
  composition?: InputMaybe<CompositionStructureNodeOrderByInput>;
};

export type BlankExperienceOutput = {
  __typename?: "BlankExperienceOutput";
  autocomplete?: Maybe<BlankExperienceAutocomplete>;
  cursor?: Maybe<Scalars["String"]["output"]>;
  facets?: Maybe<BlankExperienceFacet>;
  item?: Maybe<BlankExperience>;
  items?: Maybe<Array<Maybe<BlankExperience>>>;
  total?: Maybe<Scalars["Int"]["output"]>;
};

export type BlankExperienceOutputtotalArgs = {
  all?: InputMaybe<Scalars["Boolean"]["input"]>;
};

export type BlankExperienceWhereInput = {
  CompanyAddress?: InputMaybe<_IContentWhereInput>;
  Footer?: InputMaybe<_IContentWhereInput>;
  Header?: InputMaybe<_IContentWhereInput>;
  SeoSettings?: InputMaybe<PageSeoSettingsPropertyWhereInput>;
  _and?: InputMaybe<Array<InputMaybe<BlankExperienceWhereInput>>>;
  _fulltext?: InputMaybe<SearchableStringFilterInput>;
  _metadata?: InputMaybe<IContentMetadataWhereInput>;
  _modified?: InputMaybe<DateFilterInput>;
  _not?: InputMaybe<Array<InputMaybe<BlankExperienceWhereInput>>>;
  _or?: InputMaybe<Array<InputMaybe<BlankExperienceWhereInput>>>;
  composition?: InputMaybe<CompositionStructureNodeWhereInput>;
};

export type BlankSection = IData &
  _IComponent &
  _IContent &
  _ISection & {
    __typename?: "BlankSection";
    /** @deprecated Use `_link` field instead */
    _children?: Maybe<QueryRef>;
    _deleted?: Maybe<Scalars["Bool"]["output"]>;
    _fulltext?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
    _id?: Maybe<Scalars["String"]["output"]>;
    _link?: Maybe<QueryRef>;
    _metadata?: Maybe<IContentMetadata>;
    _modified?: Maybe<Scalars["Date"]["output"]>;
    _score?: Maybe<Scalars["Float"]["output"]>;
    composition?: Maybe<CompositionStructureNode>;
  };

export type BlankSection_fulltextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type BlankSection_linkArgs = {
  type?: InputMaybe<LinkTypes>;
};

export type BlankSectionAutocomplete = {
  __typename?: "BlankSectionAutocomplete";
  _metadata?: Maybe<IContentMetadataAutocomplete>;
  composition?: Maybe<CompositionStructureNodeAutocomplete>;
};

export type BlankSectionFacet = {
  __typename?: "BlankSectionFacet";
  _metadata?: Maybe<IContentMetadataFacet>;
  composition?: Maybe<CompositionStructureNodeFacet>;
};

export type BlankSectionOrderByInput = {
  _metadata?: InputMaybe<IContentMetadataOrderByInput>;
  _minimumScore?: InputMaybe<Scalars["Float"]["input"]>;
  _modified?: InputMaybe<OrderBy>;
  _ranking?: InputMaybe<Ranking>;
  /** The value needs to be a positive value, but cannot exceed the maximum value of an integer. In case it is exceeded, the maximum of an integer is used. In case of a negative value, semantic search will be disabled. */
  _semanticWeight?: InputMaybe<Scalars["Float"]["input"]>;
  composition?: InputMaybe<CompositionStructureNodeOrderByInput>;
};

export type BlankSectionOutput = {
  __typename?: "BlankSectionOutput";
  autocomplete?: Maybe<BlankSectionAutocomplete>;
  cursor?: Maybe<Scalars["String"]["output"]>;
  facets?: Maybe<BlankSectionFacet>;
  item?: Maybe<BlankSection>;
  items?: Maybe<Array<Maybe<BlankSection>>>;
  total?: Maybe<Scalars["Int"]["output"]>;
};

export type BlankSectionOutputtotalArgs = {
  all?: InputMaybe<Scalars["Boolean"]["input"]>;
};

export type BlankSectionWhereInput = {
  _and?: InputMaybe<Array<InputMaybe<BlankSectionWhereInput>>>;
  _fulltext?: InputMaybe<SearchableStringFilterInput>;
  _metadata?: InputMaybe<IContentMetadataWhereInput>;
  _modified?: InputMaybe<DateFilterInput>;
  _not?: InputMaybe<Array<InputMaybe<BlankSectionWhereInput>>>;
  _or?: InputMaybe<Array<InputMaybe<BlankSectionWhereInput>>>;
  composition?: InputMaybe<CompositionStructureNodeWhereInput>;
};

export type ButtonElement = IData &
  _IComponent &
  _IContent & {
    __typename?: "ButtonElement";
    ButtonLink?: Maybe<ContentUrl>;
    ButtonText?: Maybe<Scalars["String"]["output"]>;
    /** @deprecated Use `_link` field instead */
    _children?: Maybe<QueryRef>;
    _deleted?: Maybe<Scalars["Bool"]["output"]>;
    _fulltext?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
    _id?: Maybe<Scalars["String"]["output"]>;
    _link?: Maybe<QueryRef>;
    _metadata?: Maybe<IContentMetadata>;
    _modified?: Maybe<Scalars["Date"]["output"]>;
    _score?: Maybe<Scalars["Float"]["output"]>;
    className?: Maybe<Scalars["String"]["output"]>;
  };

export type ButtonElement_fulltextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type ButtonElement_linkArgs = {
  type?: InputMaybe<LinkTypes>;
};

export type ButtonElementAutocomplete = {
  __typename?: "ButtonElementAutocomplete";
  ButtonLink?: Maybe<ContentUrlAutocomplete>;
  _metadata?: Maybe<IContentMetadataAutocomplete>;
};

export type ButtonElementFacet = {
  __typename?: "ButtonElementFacet";
  ButtonLink?: Maybe<ContentUrlFacet>;
  _metadata?: Maybe<IContentMetadataFacet>;
};

export type ButtonElementOrderByInput = {
  ButtonLink?: InputMaybe<ContentUrlOrderByInput>;
  _metadata?: InputMaybe<IContentMetadataOrderByInput>;
  _minimumScore?: InputMaybe<Scalars["Float"]["input"]>;
  _modified?: InputMaybe<OrderBy>;
  _ranking?: InputMaybe<Ranking>;
  /** The value needs to be a positive value, but cannot exceed the maximum value of an integer. In case it is exceeded, the maximum of an integer is used. In case of a negative value, semantic search will be disabled. */
  _semanticWeight?: InputMaybe<Scalars["Float"]["input"]>;
};

export type ButtonElementOutput = {
  __typename?: "ButtonElementOutput";
  autocomplete?: Maybe<ButtonElementAutocomplete>;
  cursor?: Maybe<Scalars["String"]["output"]>;
  facets?: Maybe<ButtonElementFacet>;
  item?: Maybe<ButtonElement>;
  items?: Maybe<Array<Maybe<ButtonElement>>>;
  total?: Maybe<Scalars["Int"]["output"]>;
};

export type ButtonElementOutputtotalArgs = {
  all?: InputMaybe<Scalars["Boolean"]["input"]>;
};

export type ButtonElementWhereInput = {
  ButtonLink?: InputMaybe<ContentUrlWhereInput>;
  _and?: InputMaybe<Array<InputMaybe<ButtonElementWhereInput>>>;
  _fulltext?: InputMaybe<SearchableStringFilterInput>;
  _metadata?: InputMaybe<IContentMetadataWhereInput>;
  _modified?: InputMaybe<DateFilterInput>;
  _not?: InputMaybe<Array<InputMaybe<ButtonElementWhereInput>>>;
  _or?: InputMaybe<Array<InputMaybe<ButtonElementWhereInput>>>;
};

export type CTAElement = IData &
  _IComponent &
  _IContent & {
    __typename?: "CTAElement";
    Link?: Maybe<ContentUrl>;
    Text?: Maybe<Scalars["String"]["output"]>;
    /** @deprecated Use `_link` field instead */
    _children?: Maybe<QueryRef>;
    _deleted?: Maybe<Scalars["Bool"]["output"]>;
    _fulltext?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
    _id?: Maybe<Scalars["String"]["output"]>;
    _link?: Maybe<QueryRef>;
    _metadata?: Maybe<IContentMetadata>;
    _modified?: Maybe<Scalars["Date"]["output"]>;
    _score?: Maybe<Scalars["Float"]["output"]>;
  };

export type CTAElementTextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type CTAElement_fulltextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type CTAElement_linkArgs = {
  type?: InputMaybe<LinkTypes>;
};

export type CTAElementAutocomplete = {
  __typename?: "CTAElementAutocomplete";
  Link?: Maybe<ContentUrlAutocomplete>;
  _metadata?: Maybe<IContentMetadataAutocomplete>;
};

export type CTAElementFacet = {
  __typename?: "CTAElementFacet";
  Link?: Maybe<ContentUrlFacet>;
  Text?: Maybe<Array<Maybe<StringFacet>>>;
  _metadata?: Maybe<IContentMetadataFacet>;
};

export type CTAElementFacetTextArgs = {
  filters?: InputMaybe<Array<Scalars["String"]["input"]>>;
  limit?: Scalars["Int"]["input"];
  orderBy?: InputMaybe<OrderBy>;
  orderType?: InputMaybe<OrderByFacetType>;
};

export type CTAElementOrderByInput = {
  Link?: InputMaybe<ContentUrlOrderByInput>;
  Text?: InputMaybe<OrderBy>;
  _metadata?: InputMaybe<IContentMetadataOrderByInput>;
  _minimumScore?: InputMaybe<Scalars["Float"]["input"]>;
  _modified?: InputMaybe<OrderBy>;
  _ranking?: InputMaybe<Ranking>;
  /** The value needs to be a positive value, but cannot exceed the maximum value of an integer. In case it is exceeded, the maximum of an integer is used. In case of a negative value, semantic search will be disabled. */
  _semanticWeight?: InputMaybe<Scalars["Float"]["input"]>;
};

export type CTAElementOutput = {
  __typename?: "CTAElementOutput";
  autocomplete?: Maybe<CTAElementAutocomplete>;
  cursor?: Maybe<Scalars["String"]["output"]>;
  facets?: Maybe<CTAElementFacet>;
  item?: Maybe<CTAElement>;
  items?: Maybe<Array<Maybe<CTAElement>>>;
  total?: Maybe<Scalars["Int"]["output"]>;
};

export type CTAElementOutputtotalArgs = {
  all?: InputMaybe<Scalars["Boolean"]["input"]>;
};

export type CTAElementWhereInput = {
  Link?: InputMaybe<ContentUrlWhereInput>;
  Text?: InputMaybe<SearchableStringFilterInput>;
  _and?: InputMaybe<Array<InputMaybe<CTAElementWhereInput>>>;
  _fulltext?: InputMaybe<SearchableStringFilterInput>;
  _metadata?: InputMaybe<IContentMetadataWhereInput>;
  _modified?: InputMaybe<DateFilterInput>;
  _not?: InputMaybe<Array<InputMaybe<CTAElementWhereInput>>>;
  _or?: InputMaybe<Array<InputMaybe<CTAElementWhereInput>>>;
};

export type Company = IData &
  _IComponent &
  _IContent & {
    __typename?: "Company";
    Logo?: Maybe<ContentReference>;
    Name?: Maybe<Scalars["String"]["output"]>;
    /** @deprecated Use `_link` field instead */
    _children?: Maybe<QueryRef>;
    _deleted?: Maybe<Scalars["Bool"]["output"]>;
    _fulltext?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
    _id?: Maybe<Scalars["String"]["output"]>;
    _link?: Maybe<QueryRef>;
    _metadata?: Maybe<IContentMetadata>;
    _modified?: Maybe<Scalars["Date"]["output"]>;
    _score?: Maybe<Scalars["Float"]["output"]>;
  };

export type Company_fulltextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type Company_linkArgs = {
  type?: InputMaybe<LinkTypes>;
};

export type CompanyAutocomplete = {
  __typename?: "CompanyAutocomplete";
  Logo?: Maybe<ContentReferenceAutocomplete>;
  _metadata?: Maybe<IContentMetadataAutocomplete>;
};

export type CompanyFacet = {
  __typename?: "CompanyFacet";
  Logo?: Maybe<ContentReferenceFacet>;
  _metadata?: Maybe<IContentMetadataFacet>;
};

export type CompanyOrderByInput = {
  Logo?: InputMaybe<ContentReferenceOrderByInput>;
  _metadata?: InputMaybe<IContentMetadataOrderByInput>;
  _minimumScore?: InputMaybe<Scalars["Float"]["input"]>;
  _modified?: InputMaybe<OrderBy>;
  _ranking?: InputMaybe<Ranking>;
  /** The value needs to be a positive value, but cannot exceed the maximum value of an integer. In case it is exceeded, the maximum of an integer is used. In case of a negative value, semantic search will be disabled. */
  _semanticWeight?: InputMaybe<Scalars["Float"]["input"]>;
};

export type CompanyOutput = {
  __typename?: "CompanyOutput";
  autocomplete?: Maybe<CompanyAutocomplete>;
  cursor?: Maybe<Scalars["String"]["output"]>;
  facets?: Maybe<CompanyFacet>;
  item?: Maybe<Company>;
  items?: Maybe<Array<Maybe<Company>>>;
  total?: Maybe<Scalars["Int"]["output"]>;
};

export type CompanyOutputtotalArgs = {
  all?: InputMaybe<Scalars["Boolean"]["input"]>;
};

export type CompanyWhereInput = {
  Logo?: InputMaybe<ContentReferenceWhereInput>;
  _and?: InputMaybe<Array<InputMaybe<CompanyWhereInput>>>;
  _fulltext?: InputMaybe<SearchableStringFilterInput>;
  _metadata?: InputMaybe<IContentMetadataWhereInput>;
  _modified?: InputMaybe<DateFilterInput>;
  _not?: InputMaybe<Array<InputMaybe<CompanyWhereInput>>>;
  _or?: InputMaybe<Array<InputMaybe<CompanyWhereInput>>>;
};

export type CompositionComponentNode = ICompositionComponentNode &
  ICompositionNode & {
    __typename?: "CompositionComponentNode";
    component?: Maybe<_IComponent>;
    displayName?: Maybe<Scalars["String"]["output"]>;
    displaySettings?: Maybe<Array<Maybe<CompositionDisplaySetting>>>;
    displayTemplateKey?: Maybe<Scalars["String"]["output"]>;
    key?: Maybe<Scalars["String"]["output"]>;
    layoutType?: Maybe<Scalars["String"]["output"]>;
    nodeType?: Maybe<Scalars["String"]["output"]>;
    type?: Maybe<Scalars["String"]["output"]>;
  };

export type CompositionDisplaySetting = {
  __typename?: "CompositionDisplaySetting";
  key?: Maybe<Scalars["String"]["output"]>;
  value?: Maybe<Scalars["String"]["output"]>;
};

export type CompositionDisplaySettingAutocomplete = {
  __typename?: "CompositionDisplaySettingAutocomplete";
  key?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
  value?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
};

export type CompositionDisplaySettingAutocompletekeyArgs = {
  limit?: Scalars["Int"]["input"];
  value: Scalars["String"]["input"];
};

export type CompositionDisplaySettingAutocompletevalueArgs = {
  limit?: Scalars["Int"]["input"];
  value: Scalars["String"]["input"];
};

export type CompositionDisplaySettingFacet = {
  __typename?: "CompositionDisplaySettingFacet";
  key?: Maybe<Array<Maybe<StringFacet>>>;
  value?: Maybe<Array<Maybe<StringFacet>>>;
};

export type CompositionDisplaySettingFacetkeyArgs = {
  filters?: InputMaybe<Array<Scalars["String"]["input"]>>;
  limit?: Scalars["Int"]["input"];
  orderBy?: InputMaybe<OrderBy>;
  orderType?: InputMaybe<OrderByFacetType>;
};

export type CompositionDisplaySettingFacetvalueArgs = {
  filters?: InputMaybe<Array<Scalars["String"]["input"]>>;
  limit?: Scalars["Int"]["input"];
  orderBy?: InputMaybe<OrderBy>;
  orderType?: InputMaybe<OrderByFacetType>;
};

export type CompositionDisplaySettingOrderByInput = {
  key?: InputMaybe<OrderBy>;
  value?: InputMaybe<OrderBy>;
};

export type CompositionDisplaySettingWhereInput = {
  key?: InputMaybe<StringFilterInput>;
  value?: InputMaybe<StringFilterInput>;
};

export type CompositionNode = ICompositionNode & {
  __typename?: "CompositionNode";
  displayName?: Maybe<Scalars["String"]["output"]>;
  displaySettings?: Maybe<Array<Maybe<CompositionDisplaySetting>>>;
  displayTemplateKey?: Maybe<Scalars["String"]["output"]>;
  key?: Maybe<Scalars["String"]["output"]>;
  layoutType?: Maybe<Scalars["String"]["output"]>;
  nodeType?: Maybe<Scalars["String"]["output"]>;
  type?: Maybe<Scalars["String"]["output"]>;
};

export type CompositionStructureNode = ICompositionNode &
  ICompositionStructureNode & {
    __typename?: "CompositionStructureNode";
    component?: Maybe<_IComponent>;
    displayName?: Maybe<Scalars["String"]["output"]>;
    displaySettings?: Maybe<Array<Maybe<CompositionDisplaySetting>>>;
    displayTemplateKey?: Maybe<Scalars["String"]["output"]>;
    key?: Maybe<Scalars["String"]["output"]>;
    layoutType?: Maybe<Scalars["String"]["output"]>;
    nodeType?: Maybe<Scalars["String"]["output"]>;
    nodes?: Maybe<Array<Maybe<ICompositionNode>>>;
    type?: Maybe<Scalars["String"]["output"]>;
  };

export type CompositionStructureNodeAutocomplete = {
  __typename?: "CompositionStructureNodeAutocomplete";
  displayName?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
  displaySettings?: Maybe<CompositionDisplaySettingAutocomplete>;
  displayTemplateKey?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
  key?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
  layoutType?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
  nodeType?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
  nodes?: Maybe<ICompositionNodeAutocomplete>;
  type?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
};

export type CompositionStructureNodeAutocompletedisplayNameArgs = {
  limit?: Scalars["Int"]["input"];
  value: Scalars["String"]["input"];
};

export type CompositionStructureNodeAutocompletedisplayTemplateKeyArgs = {
  limit?: Scalars["Int"]["input"];
  value: Scalars["String"]["input"];
};

export type CompositionStructureNodeAutocompletekeyArgs = {
  limit?: Scalars["Int"]["input"];
  value: Scalars["String"]["input"];
};

export type CompositionStructureNodeAutocompletelayoutTypeArgs = {
  limit?: Scalars["Int"]["input"];
  value: Scalars["String"]["input"];
};

export type CompositionStructureNodeAutocompletenodeTypeArgs = {
  limit?: Scalars["Int"]["input"];
  value: Scalars["String"]["input"];
};

export type CompositionStructureNodeAutocompletetypeArgs = {
  limit?: Scalars["Int"]["input"];
  value: Scalars["String"]["input"];
};

export type CompositionStructureNodeFacet = {
  __typename?: "CompositionStructureNodeFacet";
  component?: Maybe<_IComponentFacet>;
  displayName?: Maybe<Array<Maybe<StringFacet>>>;
  displaySettings?: Maybe<CompositionDisplaySettingFacet>;
  displayTemplateKey?: Maybe<Array<Maybe<StringFacet>>>;
  key?: Maybe<Array<Maybe<StringFacet>>>;
  layoutType?: Maybe<Array<Maybe<StringFacet>>>;
  nodeType?: Maybe<Array<Maybe<StringFacet>>>;
  nodes?: Maybe<ICompositionNodeFacet>;
  type?: Maybe<Array<Maybe<StringFacet>>>;
};

export type CompositionStructureNodeFacetdisplayNameArgs = {
  filters?: InputMaybe<Array<Scalars["String"]["input"]>>;
  limit?: Scalars["Int"]["input"];
  orderBy?: InputMaybe<OrderBy>;
  orderType?: InputMaybe<OrderByFacetType>;
};

export type CompositionStructureNodeFacetdisplayTemplateKeyArgs = {
  filters?: InputMaybe<Array<Scalars["String"]["input"]>>;
  limit?: Scalars["Int"]["input"];
  orderBy?: InputMaybe<OrderBy>;
  orderType?: InputMaybe<OrderByFacetType>;
};

export type CompositionStructureNodeFacetkeyArgs = {
  filters?: InputMaybe<Array<Scalars["String"]["input"]>>;
  limit?: Scalars["Int"]["input"];
  orderBy?: InputMaybe<OrderBy>;
  orderType?: InputMaybe<OrderByFacetType>;
};

export type CompositionStructureNodeFacetlayoutTypeArgs = {
  filters?: InputMaybe<Array<Scalars["String"]["input"]>>;
  limit?: Scalars["Int"]["input"];
  orderBy?: InputMaybe<OrderBy>;
  orderType?: InputMaybe<OrderByFacetType>;
};

export type CompositionStructureNodeFacetnodeTypeArgs = {
  filters?: InputMaybe<Array<Scalars["String"]["input"]>>;
  limit?: Scalars["Int"]["input"];
  orderBy?: InputMaybe<OrderBy>;
  orderType?: InputMaybe<OrderByFacetType>;
};

export type CompositionStructureNodeFacettypeArgs = {
  filters?: InputMaybe<Array<Scalars["String"]["input"]>>;
  limit?: Scalars["Int"]["input"];
  orderBy?: InputMaybe<OrderBy>;
  orderType?: InputMaybe<OrderByFacetType>;
};

export type CompositionStructureNodeOrderByInput = {
  component?: InputMaybe<_IComponentOrderByInput>;
  displayName?: InputMaybe<OrderBy>;
  displaySettings?: InputMaybe<CompositionDisplaySettingOrderByInput>;
  displayTemplateKey?: InputMaybe<OrderBy>;
  key?: InputMaybe<OrderBy>;
  layoutType?: InputMaybe<OrderBy>;
  nodeType?: InputMaybe<OrderBy>;
  nodes?: InputMaybe<ICompositionNodeOrderByInput>;
  type?: InputMaybe<OrderBy>;
};

export type CompositionStructureNodeWhereInput = {
  component?: InputMaybe<_IComponentWhereInput>;
  displayName?: InputMaybe<StringFilterInput>;
  displaySettings?: InputMaybe<CompositionDisplaySettingWhereInput>;
  displayTemplateKey?: InputMaybe<StringFilterInput>;
  key?: InputMaybe<StringFilterInput>;
  layoutType?: InputMaybe<StringFilterInput>;
  nodeType?: InputMaybe<StringFilterInput>;
  nodes?: InputMaybe<ICompositionNodeWhereInput>;
  type?: InputMaybe<StringFilterInput>;
};

export type ContainerElement = IData &
  _IComponent &
  _IContent & {
    __typename?: "ContainerElement";
    Items?: Maybe<Array<Maybe<ContentReference>>>;
    TypeOfItems?: Maybe<Scalars["String"]["output"]>;
    /** @deprecated Use `_link` field instead */
    _children?: Maybe<QueryRef>;
    _deleted?: Maybe<Scalars["Bool"]["output"]>;
    _fulltext?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
    _id?: Maybe<Scalars["String"]["output"]>;
    _link?: Maybe<QueryRef>;
    _metadata?: Maybe<IContentMetadata>;
    _modified?: Maybe<Scalars["Date"]["output"]>;
    _score?: Maybe<Scalars["Float"]["output"]>;
  };

export type ContainerElement_fulltextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type ContainerElement_linkArgs = {
  type?: InputMaybe<LinkTypes>;
};

export type ContainerElementAutocomplete = {
  __typename?: "ContainerElementAutocomplete";
  Items?: Maybe<ContentReferenceAutocomplete>;
  _metadata?: Maybe<IContentMetadataAutocomplete>;
};

export type ContainerElementFacet = {
  __typename?: "ContainerElementFacet";
  Items?: Maybe<ContentReferenceFacet>;
  _metadata?: Maybe<IContentMetadataFacet>;
};

export type ContainerElementOrderByInput = {
  Items?: InputMaybe<ContentReferenceOrderByInput>;
  _metadata?: InputMaybe<IContentMetadataOrderByInput>;
  _minimumScore?: InputMaybe<Scalars["Float"]["input"]>;
  _modified?: InputMaybe<OrderBy>;
  _ranking?: InputMaybe<Ranking>;
  /** The value needs to be a positive value, but cannot exceed the maximum value of an integer. In case it is exceeded, the maximum of an integer is used. In case of a negative value, semantic search will be disabled. */
  _semanticWeight?: InputMaybe<Scalars["Float"]["input"]>;
};

export type ContainerElementOutput = {
  __typename?: "ContainerElementOutput";
  autocomplete?: Maybe<ContainerElementAutocomplete>;
  cursor?: Maybe<Scalars["String"]["output"]>;
  facets?: Maybe<ContainerElementFacet>;
  item?: Maybe<ContainerElement>;
  items?: Maybe<Array<Maybe<ContainerElement>>>;
  total?: Maybe<Scalars["Int"]["output"]>;
};

export type ContainerElementOutputtotalArgs = {
  all?: InputMaybe<Scalars["Boolean"]["input"]>;
};

export type ContainerElementWhereInput = {
  Items?: InputMaybe<ContentReferenceWhereInput>;
  _and?: InputMaybe<Array<InputMaybe<ContainerElementWhereInput>>>;
  _fulltext?: InputMaybe<SearchableStringFilterInput>;
  _metadata?: InputMaybe<IContentMetadataWhereInput>;
  _modified?: InputMaybe<DateFilterInput>;
  _not?: InputMaybe<Array<InputMaybe<ContainerElementWhereInput>>>;
  _or?: InputMaybe<Array<InputMaybe<ContainerElementWhereInput>>>;
};

export type ContentMetadata = IContentMetadata & {
  __typename?: "ContentMetadata";
  changeset?: Maybe<Scalars["String"]["output"]>;
  created?: Maybe<Scalars["DateTime"]["output"]>;
  displayName?: Maybe<Scalars["String"]["output"]>;
  fallbackForLocale?: Maybe<Scalars["String"]["output"]>;
  key?: Maybe<Scalars["String"]["output"]>;
  lastModified?: Maybe<Scalars["DateTime"]["output"]>;
  locale?: Maybe<Scalars["String"]["output"]>;
  published?: Maybe<Scalars["DateTime"]["output"]>;
  sortOrder?: Maybe<Scalars["Int"]["output"]>;
  status?: Maybe<Scalars["String"]["output"]>;
  types?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
  url?: Maybe<ContentUrl>;
  variation?: Maybe<Scalars["String"]["output"]>;
  version?: Maybe<Scalars["String"]["output"]>;
};

export type ContentMetadatadisplayNameArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type ContentReference = {
  __typename?: "ContentReference";
  /**
   * `reference`
   * |          |        |      |
   * | -------: | ------ | :--- |
   * | **type** | &nbsp; | `Data` |
   * | **id**   | &nbsp; | `_id` |
   *
   */
  item?: Maybe<IData>;
  key?: Maybe<Scalars["String"]["output"]>;
  url?: Maybe<ContentUrl>;
};

export type ContentReferenceAutocomplete = {
  __typename?: "ContentReferenceAutocomplete";
  key?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
  url?: Maybe<ContentUrlAutocomplete>;
};

export type ContentReferenceAutocompletekeyArgs = {
  limit?: Scalars["Int"]["input"];
  value: Scalars["String"]["input"];
};

export type ContentReferenceFacet = {
  __typename?: "ContentReferenceFacet";
  key?: Maybe<Array<Maybe<StringFacet>>>;
  url?: Maybe<ContentUrlFacet>;
};

export type ContentReferenceFacetkeyArgs = {
  filters?: InputMaybe<Array<Scalars["String"]["input"]>>;
  limit?: Scalars["Int"]["input"];
  orderBy?: InputMaybe<OrderBy>;
  orderType?: InputMaybe<OrderByFacetType>;
};

export type ContentReferenceOrderByInput = {
  key?: InputMaybe<OrderBy>;
  url?: InputMaybe<ContentUrlOrderByInput>;
};

export type ContentReferenceWhereInput = {
  key?: InputMaybe<StringFilterInput>;
  url?: InputMaybe<ContentUrlWhereInput>;
};

export type ContentTextElement = IData &
  _IComponent &
  _IContent & {
    __typename?: "ContentTextElement";
    HeadingText?: Maybe<Scalars["String"]["output"]>;
    Paragraph?: Maybe<RichText>;
    /** @deprecated Use `_link` field instead */
    _children?: Maybe<QueryRef>;
    _deleted?: Maybe<Scalars["Bool"]["output"]>;
    _fulltext?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
    _id?: Maybe<Scalars["String"]["output"]>;
    _link?: Maybe<QueryRef>;
    _metadata?: Maybe<IContentMetadata>;
    _modified?: Maybe<Scalars["Date"]["output"]>;
    _score?: Maybe<Scalars["Float"]["output"]>;
  };

export type ContentTextElement_fulltextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type ContentTextElement_linkArgs = {
  type?: InputMaybe<LinkTypes>;
};

export type ContentTextElementAutocomplete = {
  __typename?: "ContentTextElementAutocomplete";
  Paragraph?: Maybe<RichTextAutocomplete>;
  _metadata?: Maybe<IContentMetadataAutocomplete>;
};

export type ContentTextElementFacet = {
  __typename?: "ContentTextElementFacet";
  Paragraph?: Maybe<RichTextFacet>;
  _metadata?: Maybe<IContentMetadataFacet>;
};

export type ContentTextElementOrderByInput = {
  Paragraph?: InputMaybe<RichTextOrderByInput>;
  _metadata?: InputMaybe<IContentMetadataOrderByInput>;
  _minimumScore?: InputMaybe<Scalars["Float"]["input"]>;
  _modified?: InputMaybe<OrderBy>;
  _ranking?: InputMaybe<Ranking>;
  /** The value needs to be a positive value, but cannot exceed the maximum value of an integer. In case it is exceeded, the maximum of an integer is used. In case of a negative value, semantic search will be disabled. */
  _semanticWeight?: InputMaybe<Scalars["Float"]["input"]>;
};

export type ContentTextElementOutput = {
  __typename?: "ContentTextElementOutput";
  autocomplete?: Maybe<ContentTextElementAutocomplete>;
  cursor?: Maybe<Scalars["String"]["output"]>;
  facets?: Maybe<ContentTextElementFacet>;
  item?: Maybe<ContentTextElement>;
  items?: Maybe<Array<Maybe<ContentTextElement>>>;
  total?: Maybe<Scalars["Int"]["output"]>;
};

export type ContentTextElementOutputtotalArgs = {
  all?: InputMaybe<Scalars["Boolean"]["input"]>;
};

export type ContentTextElementWhereInput = {
  Paragraph?: InputMaybe<RichTextWhereInput>;
  _and?: InputMaybe<Array<InputMaybe<ContentTextElementWhereInput>>>;
  _fulltext?: InputMaybe<SearchableStringFilterInput>;
  _metadata?: InputMaybe<IContentMetadataWhereInput>;
  _modified?: InputMaybe<DateFilterInput>;
  _not?: InputMaybe<Array<InputMaybe<ContentTextElementWhereInput>>>;
  _or?: InputMaybe<Array<InputMaybe<ContentTextElementWhereInput>>>;
};

export type ContentUrl = {
  __typename?: "ContentUrl";
  base?: Maybe<Scalars["String"]["output"]>;
  default?: Maybe<Scalars["String"]["output"]>;
  graph?: Maybe<Scalars["String"]["output"]>;
  hierarchical?: Maybe<Scalars["String"]["output"]>;
  internal?: Maybe<Scalars["String"]["output"]>;
  type?: Maybe<Scalars["String"]["output"]>;
};

export type ContentUrlAutocomplete = {
  __typename?: "ContentUrlAutocomplete";
  base?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
  default?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
  graph?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
  hierarchical?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
  internal?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
  type?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
};

export type ContentUrlAutocompletebaseArgs = {
  limit?: Scalars["Int"]["input"];
  value: Scalars["String"]["input"];
};

export type ContentUrlAutocompletedefaultArgs = {
  limit?: Scalars["Int"]["input"];
  value: Scalars["String"]["input"];
};

export type ContentUrlAutocompletegraphArgs = {
  limit?: Scalars["Int"]["input"];
  value: Scalars["String"]["input"];
};

export type ContentUrlAutocompletehierarchicalArgs = {
  limit?: Scalars["Int"]["input"];
  value: Scalars["String"]["input"];
};

export type ContentUrlAutocompleteinternalArgs = {
  limit?: Scalars["Int"]["input"];
  value: Scalars["String"]["input"];
};

export type ContentUrlAutocompletetypeArgs = {
  limit?: Scalars["Int"]["input"];
  value: Scalars["String"]["input"];
};

export type ContentUrlFacet = {
  __typename?: "ContentUrlFacet";
  base?: Maybe<Array<Maybe<StringFacet>>>;
  default?: Maybe<Array<Maybe<StringFacet>>>;
  graph?: Maybe<Array<Maybe<StringFacet>>>;
  hierarchical?: Maybe<Array<Maybe<StringFacet>>>;
  internal?: Maybe<Array<Maybe<StringFacet>>>;
  type?: Maybe<Array<Maybe<StringFacet>>>;
};

export type ContentUrlFacetbaseArgs = {
  filters?: InputMaybe<Array<Scalars["String"]["input"]>>;
  limit?: Scalars["Int"]["input"];
  orderBy?: InputMaybe<OrderBy>;
  orderType?: InputMaybe<OrderByFacetType>;
};

export type ContentUrlFacetdefaultArgs = {
  filters?: InputMaybe<Array<Scalars["String"]["input"]>>;
  limit?: Scalars["Int"]["input"];
  orderBy?: InputMaybe<OrderBy>;
  orderType?: InputMaybe<OrderByFacetType>;
};

export type ContentUrlFacetgraphArgs = {
  filters?: InputMaybe<Array<Scalars["String"]["input"]>>;
  limit?: Scalars["Int"]["input"];
  orderBy?: InputMaybe<OrderBy>;
  orderType?: InputMaybe<OrderByFacetType>;
};

export type ContentUrlFacethierarchicalArgs = {
  filters?: InputMaybe<Array<Scalars["String"]["input"]>>;
  limit?: Scalars["Int"]["input"];
  orderBy?: InputMaybe<OrderBy>;
  orderType?: InputMaybe<OrderByFacetType>;
};

export type ContentUrlFacetinternalArgs = {
  filters?: InputMaybe<Array<Scalars["String"]["input"]>>;
  limit?: Scalars["Int"]["input"];
  orderBy?: InputMaybe<OrderBy>;
  orderType?: InputMaybe<OrderByFacetType>;
};

export type ContentUrlFacettypeArgs = {
  filters?: InputMaybe<Array<Scalars["String"]["input"]>>;
  limit?: Scalars["Int"]["input"];
  orderBy?: InputMaybe<OrderBy>;
  orderType?: InputMaybe<OrderByFacetType>;
};

export type ContentUrlOrderByInput = {
  base?: InputMaybe<OrderBy>;
  default?: InputMaybe<OrderBy>;
  graph?: InputMaybe<OrderBy>;
  hierarchical?: InputMaybe<OrderBy>;
  internal?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
};

export type ContentUrlWhereInput = {
  base?: InputMaybe<StringFilterInput>;
  default?: InputMaybe<StringFilterInput>;
  graph?: InputMaybe<StringFilterInput>;
  hierarchical?: InputMaybe<StringFilterInput>;
  internal?: InputMaybe<StringFilterInput>;
  type?: InputMaybe<StringFilterInput>;
};

export type Data = IData & {
  __typename?: "Data";
  /** @deprecated Use `_link` field instead */
  _children?: Maybe<QueryRef>;
  _deleted?: Maybe<Scalars["Bool"]["output"]>;
  _fulltext?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
  _id?: Maybe<Scalars["String"]["output"]>;
  _link?: Maybe<QueryRef>;
  _modified?: Maybe<Scalars["Date"]["output"]>;
  _score?: Maybe<Scalars["Float"]["output"]>;
};

export type Data_fulltextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type Data_linkArgs = {
  type?: InputMaybe<LinkTypes>;
};

export type DataOrderByInput = {
  _minimumScore?: InputMaybe<Scalars["Float"]["input"]>;
  _modified?: InputMaybe<OrderBy>;
  _ranking?: InputMaybe<Ranking>;
  /** The value needs to be a positive value, but cannot exceed the maximum value of an integer. In case it is exceeded, the maximum of an integer is used. In case of a negative value, semantic search will be disabled. */
  _semanticWeight?: InputMaybe<Scalars["Float"]["input"]>;
};

export type DataOutput = {
  __typename?: "DataOutput";
  cursor?: Maybe<Scalars["String"]["output"]>;
  item?: Maybe<IData>;
  items?: Maybe<Array<Maybe<IData>>>;
  total?: Maybe<Scalars["Int"]["output"]>;
};

export type DataOutputtotalArgs = {
  all?: InputMaybe<Scalars["Boolean"]["input"]>;
};

export type DataWhereInput = {
  _and?: InputMaybe<Array<InputMaybe<DataWhereInput>>>;
  _fulltext?: InputMaybe<SearchableStringFilterInput>;
  _modified?: InputMaybe<DateFilterInput>;
  _not?: InputMaybe<Array<InputMaybe<DataWhereInput>>>;
  _or?: InputMaybe<Array<InputMaybe<DataWhereInput>>>;
};

export type DateFacet = {
  __typename?: "DateFacet";
  count?: Maybe<Scalars["Int"]["output"]>;
  name?: Maybe<Scalars["String"]["output"]>;
};

export enum DateFacetUnit {
  /** Defined as 24 hours (86,400,000 milliseconds). All days begin at the earliest possible time, which is usually 00:00:00 (midnight). */
  DAY = "DAY",
  /** Defined as 60 minutes each (3,600,000 milliseconds). All hours begin at 00 minutes and 00 seconds. */
  HOUR = "HOUR",
  /** Defined as 1000 milliseconds each. */
  MINUTE = "MINUTE",
}

export type DateFilterInput = {
  /** `boost` influences the weight of a field by boosting a match with a number (default: 1) — counts more towards the eventual relevance score which can be projected with `_score` — at query time. Note that `boost` cannot be a negative number. */
  boost?: InputMaybe<Scalars["Int"]["input"]>;
  /** `decay` influences the weight of the score with a decay function. For example, results that have a more recent datetime will be ranked higher. The `origin` will be `now()` in case not specified. The `scale` is by default 10. The `rate` must be in the range `[0..1]`. */
  decay?: InputMaybe<Decay>;
  /** `eq` matches on an exact value, but the value is case-insensitive. */
  eq?: InputMaybe<Scalars["Date"]["input"]>;
  /** `exist` matches results that have this field. */
  exist?: InputMaybe<Scalars["Boolean"]["input"]>;
  /** `gt` retrieves results with matches that have a value which is `greater than` it. */
  gt?: InputMaybe<Scalars["Date"]["input"]>;
  /** `gte` retrieves results with matches that have a value which is `greater than or equal to` it. */
  gte?: InputMaybe<Scalars["Date"]["input"]>;
  /** `lt` retrieves results with matches that have a value which is `lower than` it. */
  lt?: InputMaybe<Scalars["Date"]["input"]>;
  /** `lte` retrieves results with matches that have a value which is `lower than or equal to` it. */
  lte?: InputMaybe<Scalars["Date"]["input"]>;
  /** `not_eq` retrieves results not matching with an exact (but case-insensitive) value. */
  notEq?: InputMaybe<Scalars["Date"]["input"]>;
};

/** Decay influences the weight of the score based on field values with a decay function */
export type Decay = {
  origin?: InputMaybe<Scalars["Date"]["input"]>;
  rate?: InputMaybe<Scalars["Float"]["input"]>;
  scale?: InputMaybe<Scalars["Int"]["input"]>;
};

export type DefaultVideo = IData &
  _IContent &
  _IMedia &
  _IVideo & {
    __typename?: "DefaultVideo";
    /** @deprecated Use `_link` field instead */
    _children?: Maybe<QueryRef>;
    _deleted?: Maybe<Scalars["Bool"]["output"]>;
    _fulltext?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
    _id?: Maybe<Scalars["String"]["output"]>;
    _link?: Maybe<QueryRef>;
    _metadata?: Maybe<IContentMetadata>;
    _modified?: Maybe<Scalars["Date"]["output"]>;
    _score?: Maybe<Scalars["Float"]["output"]>;
    placeholder?: Maybe<ContentReference>;
    title?: Maybe<Scalars["String"]["output"]>;
    video?: Maybe<ContentReference>;
  };

export type DefaultVideo_fulltextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type DefaultVideo_linkArgs = {
  type?: InputMaybe<LinkTypes>;
};

export type DefaultVideoAutocomplete = {
  __typename?: "DefaultVideoAutocomplete";
  _metadata?: Maybe<IContentMetadataAutocomplete>;
  placeholder?: Maybe<ContentReferenceAutocomplete>;
  video?: Maybe<ContentReferenceAutocomplete>;
};

export type DefaultVideoFacet = {
  __typename?: "DefaultVideoFacet";
  _metadata?: Maybe<IContentMetadataFacet>;
  placeholder?: Maybe<ContentReferenceFacet>;
  video?: Maybe<ContentReferenceFacet>;
};

export type DefaultVideoOrderByInput = {
  _metadata?: InputMaybe<IContentMetadataOrderByInput>;
  _minimumScore?: InputMaybe<Scalars["Float"]["input"]>;
  _modified?: InputMaybe<OrderBy>;
  _ranking?: InputMaybe<Ranking>;
  /** The value needs to be a positive value, but cannot exceed the maximum value of an integer. In case it is exceeded, the maximum of an integer is used. In case of a negative value, semantic search will be disabled. */
  _semanticWeight?: InputMaybe<Scalars["Float"]["input"]>;
  placeholder?: InputMaybe<ContentReferenceOrderByInput>;
  video?: InputMaybe<ContentReferenceOrderByInput>;
};

export type DefaultVideoOutput = {
  __typename?: "DefaultVideoOutput";
  autocomplete?: Maybe<DefaultVideoAutocomplete>;
  cursor?: Maybe<Scalars["String"]["output"]>;
  facets?: Maybe<DefaultVideoFacet>;
  item?: Maybe<DefaultVideo>;
  items?: Maybe<Array<Maybe<DefaultVideo>>>;
  total?: Maybe<Scalars["Int"]["output"]>;
};

export type DefaultVideoOutputtotalArgs = {
  all?: InputMaybe<Scalars["Boolean"]["input"]>;
};

export type DefaultVideoWhereInput = {
  _and?: InputMaybe<Array<InputMaybe<DefaultVideoWhereInput>>>;
  _fulltext?: InputMaybe<SearchableStringFilterInput>;
  _metadata?: InputMaybe<IContentMetadataWhereInput>;
  _modified?: InputMaybe<DateFilterInput>;
  _not?: InputMaybe<Array<InputMaybe<DefaultVideoWhereInput>>>;
  _or?: InputMaybe<Array<InputMaybe<DefaultVideoWhereInput>>>;
  placeholder?: InputMaybe<ContentReferenceWhereInput>;
  video?: InputMaybe<ContentReferenceWhereInput>;
};

export type Dictionary = IData &
  _IComponent &
  _IContent & {
    __typename?: "Dictionary";
    DictionaryItems?: Maybe<Array<Maybe<DictionaryItemProperty>>>;
    DictionaryKey?: Maybe<Scalars["String"]["output"]>;
    /** @deprecated Use `_link` field instead */
    _children?: Maybe<QueryRef>;
    _deleted?: Maybe<Scalars["Bool"]["output"]>;
    _fulltext?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
    _id?: Maybe<Scalars["String"]["output"]>;
    _link?: Maybe<QueryRef>;
    _metadata?: Maybe<IContentMetadata>;
    _modified?: Maybe<Scalars["Date"]["output"]>;
    _score?: Maybe<Scalars["Float"]["output"]>;
  };

export type DictionaryDictionaryKeyArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type Dictionary_fulltextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type Dictionary_linkArgs = {
  type?: InputMaybe<LinkTypes>;
};

export type DictionaryAutocomplete = {
  __typename?: "DictionaryAutocomplete";
  _metadata?: Maybe<IContentMetadataAutocomplete>;
};

export type DictionaryFacet = {
  __typename?: "DictionaryFacet";
  DictionaryItems?: Maybe<Array<Maybe<StringFacet>>>;
  DictionaryKey?: Maybe<Array<Maybe<StringFacet>>>;
  _metadata?: Maybe<IContentMetadataFacet>;
};

export type DictionaryFacetDictionaryItemsArgs = {
  filters?: InputMaybe<Array<Scalars["String"]["input"]>>;
  limit?: Scalars["Int"]["input"];
  orderBy?: InputMaybe<OrderBy>;
  orderType?: InputMaybe<OrderByFacetType>;
};

export type DictionaryFacetDictionaryKeyArgs = {
  filters?: InputMaybe<Array<Scalars["String"]["input"]>>;
  limit?: Scalars["Int"]["input"];
  orderBy?: InputMaybe<OrderBy>;
  orderType?: InputMaybe<OrderByFacetType>;
};

export type DictionaryItem = IData &
  _IComponent &
  _IContent & {
    __typename?: "DictionaryItem";
    DictionaryItemKey?: Maybe<Scalars["String"]["output"]>;
    DictionaryItemValue?: Maybe<Scalars["String"]["output"]>;
    /** @deprecated Use `_link` field instead */
    _children?: Maybe<QueryRef>;
    _deleted?: Maybe<Scalars["Bool"]["output"]>;
    _fulltext?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
    _id?: Maybe<Scalars["String"]["output"]>;
    _link?: Maybe<QueryRef>;
    _metadata?: Maybe<IContentMetadata>;
    _modified?: Maybe<Scalars["Date"]["output"]>;
    _score?: Maybe<Scalars["Float"]["output"]>;
  };

export type DictionaryItem_fulltextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type DictionaryItem_linkArgs = {
  type?: InputMaybe<LinkTypes>;
};

export type DictionaryItemAutocomplete = {
  __typename?: "DictionaryItemAutocomplete";
  _metadata?: Maybe<IContentMetadataAutocomplete>;
};

export type DictionaryItemFacet = {
  __typename?: "DictionaryItemFacet";
  _metadata?: Maybe<IContentMetadataFacet>;
};

export type DictionaryItemOrderByInput = {
  _metadata?: InputMaybe<IContentMetadataOrderByInput>;
  _minimumScore?: InputMaybe<Scalars["Float"]["input"]>;
  _modified?: InputMaybe<OrderBy>;
  _ranking?: InputMaybe<Ranking>;
  /** The value needs to be a positive value, but cannot exceed the maximum value of an integer. In case it is exceeded, the maximum of an integer is used. In case of a negative value, semantic search will be disabled. */
  _semanticWeight?: InputMaybe<Scalars["Float"]["input"]>;
};

export type DictionaryItemOutput = {
  __typename?: "DictionaryItemOutput";
  autocomplete?: Maybe<DictionaryItemAutocomplete>;
  cursor?: Maybe<Scalars["String"]["output"]>;
  facets?: Maybe<DictionaryItemFacet>;
  item?: Maybe<DictionaryItem>;
  items?: Maybe<Array<Maybe<DictionaryItem>>>;
  total?: Maybe<Scalars["Int"]["output"]>;
};

export type DictionaryItemOutputtotalArgs = {
  all?: InputMaybe<Scalars["Boolean"]["input"]>;
};

export type DictionaryItemProperty = {
  __typename?: "DictionaryItemProperty";
  DictionaryItemKey?: Maybe<Scalars["String"]["output"]>;
  DictionaryItemValue?: Maybe<Scalars["String"]["output"]>;
};

export type DictionaryItemWhereInput = {
  _and?: InputMaybe<Array<InputMaybe<DictionaryItemWhereInput>>>;
  _fulltext?: InputMaybe<SearchableStringFilterInput>;
  _metadata?: InputMaybe<IContentMetadataWhereInput>;
  _modified?: InputMaybe<DateFilterInput>;
  _not?: InputMaybe<Array<InputMaybe<DictionaryItemWhereInput>>>;
  _or?: InputMaybe<Array<InputMaybe<DictionaryItemWhereInput>>>;
};

export type DictionaryOrderByInput = {
  DictionaryItems?: InputMaybe<OrderBy>;
  DictionaryKey?: InputMaybe<OrderBy>;
  _metadata?: InputMaybe<IContentMetadataOrderByInput>;
  _minimumScore?: InputMaybe<Scalars["Float"]["input"]>;
  _modified?: InputMaybe<OrderBy>;
  _ranking?: InputMaybe<Ranking>;
  /** The value needs to be a positive value, but cannot exceed the maximum value of an integer. In case it is exceeded, the maximum of an integer is used. In case of a negative value, semantic search will be disabled. */
  _semanticWeight?: InputMaybe<Scalars["Float"]["input"]>;
};

export type DictionaryOutput = {
  __typename?: "DictionaryOutput";
  autocomplete?: Maybe<DictionaryAutocomplete>;
  cursor?: Maybe<Scalars["String"]["output"]>;
  facets?: Maybe<DictionaryFacet>;
  item?: Maybe<Dictionary>;
  items?: Maybe<Array<Maybe<Dictionary>>>;
  total?: Maybe<Scalars["Int"]["output"]>;
};

export type DictionaryOutputtotalArgs = {
  all?: InputMaybe<Scalars["Boolean"]["input"]>;
};

export type DictionaryWhereInput = {
  DictionaryItems?: InputMaybe<StringFilterInput>;
  DictionaryKey?: InputMaybe<SearchableStringFilterInput>;
  _and?: InputMaybe<Array<InputMaybe<DictionaryWhereInput>>>;
  _fulltext?: InputMaybe<SearchableStringFilterInput>;
  _metadata?: InputMaybe<IContentMetadataWhereInput>;
  _modified?: InputMaybe<DateFilterInput>;
  _not?: InputMaybe<Array<InputMaybe<DictionaryWhereInput>>>;
  _or?: InputMaybe<Array<InputMaybe<DictionaryWhereInput>>>;
};

export type ExpandableText = IData &
  _IComponent &
  _IContent & {
    __typename?: "ExpandableText";
    ContentText?: Maybe<RichText>;
    MobileThreshold?: Maybe<Scalars["Int"]["output"]>;
    ReadMoreText?: Maybe<Scalars["String"]["output"]>;
    ShowLessText?: Maybe<Scalars["String"]["output"]>;
    Threshold?: Maybe<Scalars["Int"]["output"]>;
    /** @deprecated Use `_link` field instead */
    _children?: Maybe<QueryRef>;
    _deleted?: Maybe<Scalars["Bool"]["output"]>;
    _fulltext?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
    _id?: Maybe<Scalars["String"]["output"]>;
    _link?: Maybe<QueryRef>;
    _metadata?: Maybe<IContentMetadata>;
    _modified?: Maybe<Scalars["Date"]["output"]>;
    _score?: Maybe<Scalars["Float"]["output"]>;
  };

export type ExpandableText_fulltextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type ExpandableText_linkArgs = {
  type?: InputMaybe<LinkTypes>;
};

export type ExpandableTextAutocomplete = {
  __typename?: "ExpandableTextAutocomplete";
  ContentText?: Maybe<RichTextAutocomplete>;
  _metadata?: Maybe<IContentMetadataAutocomplete>;
};

export type ExpandableTextFacet = {
  __typename?: "ExpandableTextFacet";
  ContentText?: Maybe<RichTextFacet>;
  _metadata?: Maybe<IContentMetadataFacet>;
};

export type ExpandableTextOrderByInput = {
  ContentText?: InputMaybe<RichTextOrderByInput>;
  _metadata?: InputMaybe<IContentMetadataOrderByInput>;
  _minimumScore?: InputMaybe<Scalars["Float"]["input"]>;
  _modified?: InputMaybe<OrderBy>;
  _ranking?: InputMaybe<Ranking>;
  /** The value needs to be a positive value, but cannot exceed the maximum value of an integer. In case it is exceeded, the maximum of an integer is used. In case of a negative value, semantic search will be disabled. */
  _semanticWeight?: InputMaybe<Scalars["Float"]["input"]>;
};

export type ExpandableTextOutput = {
  __typename?: "ExpandableTextOutput";
  autocomplete?: Maybe<ExpandableTextAutocomplete>;
  cursor?: Maybe<Scalars["String"]["output"]>;
  facets?: Maybe<ExpandableTextFacet>;
  item?: Maybe<ExpandableText>;
  items?: Maybe<Array<Maybe<ExpandableText>>>;
  total?: Maybe<Scalars["Int"]["output"]>;
};

export type ExpandableTextOutputtotalArgs = {
  all?: InputMaybe<Scalars["Boolean"]["input"]>;
};

export type ExpandableTextWhereInput = {
  ContentText?: InputMaybe<RichTextWhereInput>;
  _and?: InputMaybe<Array<InputMaybe<ExpandableTextWhereInput>>>;
  _fulltext?: InputMaybe<SearchableStringFilterInput>;
  _metadata?: InputMaybe<IContentMetadataWhereInput>;
  _modified?: InputMaybe<DateFilterInput>;
  _not?: InputMaybe<Array<InputMaybe<ExpandableTextWhereInput>>>;
  _or?: InputMaybe<Array<InputMaybe<ExpandableTextWhereInput>>>;
};

export type FAQsSection = IData &
  _IComponent &
  _IContent & {
    __typename?: "FAQsSection";
    HeadingText?: Maybe<Scalars["String"]["output"]>;
    ListItem?: Maybe<Array<Maybe<_IContent>>>;
    /** @deprecated Use `_link` field instead */
    _children?: Maybe<QueryRef>;
    _deleted?: Maybe<Scalars["Bool"]["output"]>;
    _fulltext?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
    _id?: Maybe<Scalars["String"]["output"]>;
    _link?: Maybe<QueryRef>;
    _metadata?: Maybe<IContentMetadata>;
    _modified?: Maybe<Scalars["Date"]["output"]>;
    _score?: Maybe<Scalars["Float"]["output"]>;
    allowMultiple?: Maybe<Scalars["Boolean"]["output"]>;
  };

export type FAQsSection_fulltextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type FAQsSection_linkArgs = {
  type?: InputMaybe<LinkTypes>;
};

export type FAQsSectionAutocomplete = {
  __typename?: "FAQsSectionAutocomplete";
  ListItem?: Maybe<_IContentAutocomplete>;
  _metadata?: Maybe<IContentMetadataAutocomplete>;
};

export type FAQsSectionFacet = {
  __typename?: "FAQsSectionFacet";
  ListItem?: Maybe<_IContentFacet>;
  _metadata?: Maybe<IContentMetadataFacet>;
};

export type FAQsSectionOrderByInput = {
  ListItem?: InputMaybe<_IContentOrderByInput>;
  _metadata?: InputMaybe<IContentMetadataOrderByInput>;
  _minimumScore?: InputMaybe<Scalars["Float"]["input"]>;
  _modified?: InputMaybe<OrderBy>;
  _ranking?: InputMaybe<Ranking>;
  /** The value needs to be a positive value, but cannot exceed the maximum value of an integer. In case it is exceeded, the maximum of an integer is used. In case of a negative value, semantic search will be disabled. */
  _semanticWeight?: InputMaybe<Scalars["Float"]["input"]>;
};

export type FAQsSectionOutput = {
  __typename?: "FAQsSectionOutput";
  autocomplete?: Maybe<FAQsSectionAutocomplete>;
  cursor?: Maybe<Scalars["String"]["output"]>;
  facets?: Maybe<FAQsSectionFacet>;
  item?: Maybe<FAQsSection>;
  items?: Maybe<Array<Maybe<FAQsSection>>>;
  total?: Maybe<Scalars["Int"]["output"]>;
};

export type FAQsSectionOutputtotalArgs = {
  all?: InputMaybe<Scalars["Boolean"]["input"]>;
};

export type FAQsSectionWhereInput = {
  ListItem?: InputMaybe<_IContentWhereInput>;
  _and?: InputMaybe<Array<InputMaybe<FAQsSectionWhereInput>>>;
  _fulltext?: InputMaybe<SearchableStringFilterInput>;
  _metadata?: InputMaybe<IContentMetadataWhereInput>;
  _modified?: InputMaybe<DateFilterInput>;
  _not?: InputMaybe<Array<InputMaybe<FAQsSectionWhereInput>>>;
  _or?: InputMaybe<Array<InputMaybe<FAQsSectionWhereInput>>>;
};

export enum FactorModifier {
  /** Add 1 to the field value and take the natural logarithm */
  LOG = "LOG",
  /** Do not apply any multiplier to the field value */
  NONE = "NONE",
  /** Reciprocate the field value, same as 1/x where x is the field's value */
  RECIPROCAL = "RECIPROCAL",
  /** Take the square root of the field value */
  SQRT = "SQRT",
  /** Square the field value (multiply it by itself) */
  SQUARE = "SQUARE",
}

export type GenericMedia = IData &
  _IContent &
  _IMedia & {
    __typename?: "GenericMedia";
    /** @deprecated Use `_link` field instead */
    _children?: Maybe<QueryRef>;
    _deleted?: Maybe<Scalars["Bool"]["output"]>;
    _fulltext?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
    _id?: Maybe<Scalars["String"]["output"]>;
    _link?: Maybe<QueryRef>;
    _metadata?: Maybe<IContentMetadata>;
    _modified?: Maybe<Scalars["Date"]["output"]>;
    _score?: Maybe<Scalars["Float"]["output"]>;
  };

export type GenericMedia_fulltextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type GenericMedia_linkArgs = {
  type?: InputMaybe<LinkTypes>;
};

export type GenericMediaAutocomplete = {
  __typename?: "GenericMediaAutocomplete";
  _metadata?: Maybe<IContentMetadataAutocomplete>;
};

export type GenericMediaFacet = {
  __typename?: "GenericMediaFacet";
  _metadata?: Maybe<IContentMetadataFacet>;
};

export type GenericMediaOrderByInput = {
  _metadata?: InputMaybe<IContentMetadataOrderByInput>;
  _minimumScore?: InputMaybe<Scalars["Float"]["input"]>;
  _modified?: InputMaybe<OrderBy>;
  _ranking?: InputMaybe<Ranking>;
  /** The value needs to be a positive value, but cannot exceed the maximum value of an integer. In case it is exceeded, the maximum of an integer is used. In case of a negative value, semantic search will be disabled. */
  _semanticWeight?: InputMaybe<Scalars["Float"]["input"]>;
};

export type GenericMediaOutput = {
  __typename?: "GenericMediaOutput";
  autocomplete?: Maybe<GenericMediaAutocomplete>;
  cursor?: Maybe<Scalars["String"]["output"]>;
  facets?: Maybe<GenericMediaFacet>;
  item?: Maybe<GenericMedia>;
  items?: Maybe<Array<Maybe<GenericMedia>>>;
  total?: Maybe<Scalars["Int"]["output"]>;
};

export type GenericMediaOutputtotalArgs = {
  all?: InputMaybe<Scalars["Boolean"]["input"]>;
};

export type GenericMediaWhereInput = {
  _and?: InputMaybe<Array<InputMaybe<GenericMediaWhereInput>>>;
  _fulltext?: InputMaybe<SearchableStringFilterInput>;
  _metadata?: InputMaybe<IContentMetadataWhereInput>;
  _modified?: InputMaybe<DateFilterInput>;
  _not?: InputMaybe<Array<InputMaybe<GenericMediaWhereInput>>>;
  _or?: InputMaybe<Array<InputMaybe<GenericMediaWhereInput>>>;
};

export type HeadingElement = IData &
  _IComponent &
  _IContent & {
    __typename?: "HeadingElement";
    HeadingText?: Maybe<Scalars["String"]["output"]>;
    /** @deprecated Use `_link` field instead */
    _children?: Maybe<QueryRef>;
    _deleted?: Maybe<Scalars["Bool"]["output"]>;
    _fulltext?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
    _id?: Maybe<Scalars["String"]["output"]>;
    _link?: Maybe<QueryRef>;
    _metadata?: Maybe<IContentMetadata>;
    _modified?: Maybe<Scalars["Date"]["output"]>;
    _score?: Maybe<Scalars["Float"]["output"]>;
  };

export type HeadingElement_fulltextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type HeadingElement_linkArgs = {
  type?: InputMaybe<LinkTypes>;
};

export type HeadingElementAutocomplete = {
  __typename?: "HeadingElementAutocomplete";
  _metadata?: Maybe<IContentMetadataAutocomplete>;
};

export type HeadingElementFacet = {
  __typename?: "HeadingElementFacet";
  _metadata?: Maybe<IContentMetadataFacet>;
};

export type HeadingElementOrderByInput = {
  _metadata?: InputMaybe<IContentMetadataOrderByInput>;
  _minimumScore?: InputMaybe<Scalars["Float"]["input"]>;
  _modified?: InputMaybe<OrderBy>;
  _ranking?: InputMaybe<Ranking>;
  /** The value needs to be a positive value, but cannot exceed the maximum value of an integer. In case it is exceeded, the maximum of an integer is used. In case of a negative value, semantic search will be disabled. */
  _semanticWeight?: InputMaybe<Scalars["Float"]["input"]>;
};

export type HeadingElementOutput = {
  __typename?: "HeadingElementOutput";
  autocomplete?: Maybe<HeadingElementAutocomplete>;
  cursor?: Maybe<Scalars["String"]["output"]>;
  facets?: Maybe<HeadingElementFacet>;
  item?: Maybe<HeadingElement>;
  items?: Maybe<Array<Maybe<HeadingElement>>>;
  total?: Maybe<Scalars["Int"]["output"]>;
};

export type HeadingElementOutputtotalArgs = {
  all?: InputMaybe<Scalars["Boolean"]["input"]>;
};

export type HeadingElementWhereInput = {
  _and?: InputMaybe<Array<InputMaybe<HeadingElementWhereInput>>>;
  _fulltext?: InputMaybe<SearchableStringFilterInput>;
  _metadata?: InputMaybe<IContentMetadataWhereInput>;
  _modified?: InputMaybe<DateFilterInput>;
  _not?: InputMaybe<Array<InputMaybe<HeadingElementWhereInput>>>;
  _or?: InputMaybe<Array<InputMaybe<HeadingElementWhereInput>>>;
};

/** Options for highlighting */
export type HighlightOptions = {
  enabled?: InputMaybe<Scalars["Boolean"]["input"]>;
  endToken?: InputMaybe<Scalars["String"]["input"]>;
  startToken?: InputMaybe<Scalars["String"]["input"]>;
};

export type ICompositionComponentNode = {
  component?: Maybe<_IComponent>;
  displayName?: Maybe<Scalars["String"]["output"]>;
  displaySettings?: Maybe<Array<Maybe<CompositionDisplaySetting>>>;
  displayTemplateKey?: Maybe<Scalars["String"]["output"]>;
  key?: Maybe<Scalars["String"]["output"]>;
  layoutType?: Maybe<Scalars["String"]["output"]>;
  nodeType?: Maybe<Scalars["String"]["output"]>;
  type?: Maybe<Scalars["String"]["output"]>;
};

export type ICompositionNode = {
  displayName?: Maybe<Scalars["String"]["output"]>;
  displaySettings?: Maybe<Array<Maybe<CompositionDisplaySetting>>>;
  displayTemplateKey?: Maybe<Scalars["String"]["output"]>;
  key?: Maybe<Scalars["String"]["output"]>;
  layoutType?: Maybe<Scalars["String"]["output"]>;
  nodeType?: Maybe<Scalars["String"]["output"]>;
  type?: Maybe<Scalars["String"]["output"]>;
};

export type ICompositionNodeAutocomplete = {
  __typename?: "ICompositionNodeAutocomplete";
  displayName?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
  displaySettings?: Maybe<CompositionDisplaySettingAutocomplete>;
  displayTemplateKey?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
  key?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
  layoutType?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
  nodeType?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
  type?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
};

export type ICompositionNodeAutocompletedisplayNameArgs = {
  limit?: Scalars["Int"]["input"];
  value: Scalars["String"]["input"];
};

export type ICompositionNodeAutocompletedisplayTemplateKeyArgs = {
  limit?: Scalars["Int"]["input"];
  value: Scalars["String"]["input"];
};

export type ICompositionNodeAutocompletekeyArgs = {
  limit?: Scalars["Int"]["input"];
  value: Scalars["String"]["input"];
};

export type ICompositionNodeAutocompletelayoutTypeArgs = {
  limit?: Scalars["Int"]["input"];
  value: Scalars["String"]["input"];
};

export type ICompositionNodeAutocompletenodeTypeArgs = {
  limit?: Scalars["Int"]["input"];
  value: Scalars["String"]["input"];
};

export type ICompositionNodeAutocompletetypeArgs = {
  limit?: Scalars["Int"]["input"];
  value: Scalars["String"]["input"];
};

export type ICompositionNodeFacet = {
  __typename?: "ICompositionNodeFacet";
  displayName?: Maybe<Array<Maybe<StringFacet>>>;
  displaySettings?: Maybe<CompositionDisplaySettingFacet>;
  displayTemplateKey?: Maybe<Array<Maybe<StringFacet>>>;
  key?: Maybe<Array<Maybe<StringFacet>>>;
  layoutType?: Maybe<Array<Maybe<StringFacet>>>;
  nodeType?: Maybe<Array<Maybe<StringFacet>>>;
  type?: Maybe<Array<Maybe<StringFacet>>>;
};

export type ICompositionNodeFacetdisplayNameArgs = {
  filters?: InputMaybe<Array<Scalars["String"]["input"]>>;
  limit?: Scalars["Int"]["input"];
  orderBy?: InputMaybe<OrderBy>;
  orderType?: InputMaybe<OrderByFacetType>;
};

export type ICompositionNodeFacetdisplayTemplateKeyArgs = {
  filters?: InputMaybe<Array<Scalars["String"]["input"]>>;
  limit?: Scalars["Int"]["input"];
  orderBy?: InputMaybe<OrderBy>;
  orderType?: InputMaybe<OrderByFacetType>;
};

export type ICompositionNodeFacetkeyArgs = {
  filters?: InputMaybe<Array<Scalars["String"]["input"]>>;
  limit?: Scalars["Int"]["input"];
  orderBy?: InputMaybe<OrderBy>;
  orderType?: InputMaybe<OrderByFacetType>;
};

export type ICompositionNodeFacetlayoutTypeArgs = {
  filters?: InputMaybe<Array<Scalars["String"]["input"]>>;
  limit?: Scalars["Int"]["input"];
  orderBy?: InputMaybe<OrderBy>;
  orderType?: InputMaybe<OrderByFacetType>;
};

export type ICompositionNodeFacetnodeTypeArgs = {
  filters?: InputMaybe<Array<Scalars["String"]["input"]>>;
  limit?: Scalars["Int"]["input"];
  orderBy?: InputMaybe<OrderBy>;
  orderType?: InputMaybe<OrderByFacetType>;
};

export type ICompositionNodeFacettypeArgs = {
  filters?: InputMaybe<Array<Scalars["String"]["input"]>>;
  limit?: Scalars["Int"]["input"];
  orderBy?: InputMaybe<OrderBy>;
  orderType?: InputMaybe<OrderByFacetType>;
};

export type ICompositionNodeOrderByInput = {
  displayName?: InputMaybe<OrderBy>;
  displaySettings?: InputMaybe<CompositionDisplaySettingOrderByInput>;
  displayTemplateKey?: InputMaybe<OrderBy>;
  key?: InputMaybe<OrderBy>;
  layoutType?: InputMaybe<OrderBy>;
  nodeType?: InputMaybe<OrderBy>;
  type?: InputMaybe<OrderBy>;
};

export type ICompositionNodeWhereInput = {
  displayName?: InputMaybe<StringFilterInput>;
  displaySettings?: InputMaybe<CompositionDisplaySettingWhereInput>;
  displayTemplateKey?: InputMaybe<StringFilterInput>;
  key?: InputMaybe<StringFilterInput>;
  layoutType?: InputMaybe<StringFilterInput>;
  nodeType?: InputMaybe<StringFilterInput>;
  type?: InputMaybe<StringFilterInput>;
};

export type ICompositionStructureNode = {
  component?: Maybe<_IComponent>;
  displayName?: Maybe<Scalars["String"]["output"]>;
  displaySettings?: Maybe<Array<Maybe<CompositionDisplaySetting>>>;
  displayTemplateKey?: Maybe<Scalars["String"]["output"]>;
  key?: Maybe<Scalars["String"]["output"]>;
  layoutType?: Maybe<Scalars["String"]["output"]>;
  nodeType?: Maybe<Scalars["String"]["output"]>;
  nodes?: Maybe<Array<Maybe<ICompositionNode>>>;
  type?: Maybe<Scalars["String"]["output"]>;
};

export type IContentMetadata = {
  changeset?: Maybe<Scalars["String"]["output"]>;
  created?: Maybe<Scalars["DateTime"]["output"]>;
  displayName?: Maybe<Scalars["String"]["output"]>;
  fallbackForLocale?: Maybe<Scalars["String"]["output"]>;
  key?: Maybe<Scalars["String"]["output"]>;
  lastModified?: Maybe<Scalars["DateTime"]["output"]>;
  locale?: Maybe<Scalars["String"]["output"]>;
  published?: Maybe<Scalars["DateTime"]["output"]>;
  sortOrder?: Maybe<Scalars["Int"]["output"]>;
  status?: Maybe<Scalars["String"]["output"]>;
  types?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
  url?: Maybe<ContentUrl>;
  variation?: Maybe<Scalars["String"]["output"]>;
  version?: Maybe<Scalars["String"]["output"]>;
};

export type IContentMetadatadisplayNameArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type IContentMetadataAutocomplete = {
  __typename?: "IContentMetadataAutocomplete";
  changeset?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
  fallbackForLocale?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
  key?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
  locale?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
  status?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
  types?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
  url?: Maybe<ContentUrlAutocomplete>;
  variation?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
  version?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
};

export type IContentMetadataAutocompletechangesetArgs = {
  limit?: Scalars["Int"]["input"];
  value: Scalars["String"]["input"];
};

export type IContentMetadataAutocompletefallbackForLocaleArgs = {
  limit?: Scalars["Int"]["input"];
  value: Scalars["String"]["input"];
};

export type IContentMetadataAutocompletekeyArgs = {
  limit?: Scalars["Int"]["input"];
  value: Scalars["String"]["input"];
};

export type IContentMetadataAutocompletelocaleArgs = {
  limit?: Scalars["Int"]["input"];
  value: Scalars["String"]["input"];
};

export type IContentMetadataAutocompletestatusArgs = {
  limit?: Scalars["Int"]["input"];
  value: Scalars["String"]["input"];
};

export type IContentMetadataAutocompletetypesArgs = {
  limit?: Scalars["Int"]["input"];
  value: Scalars["String"]["input"];
};

export type IContentMetadataAutocompletevariationArgs = {
  limit?: Scalars["Int"]["input"];
  value: Scalars["String"]["input"];
};

export type IContentMetadataAutocompleteversionArgs = {
  limit?: Scalars["Int"]["input"];
  value: Scalars["String"]["input"];
};

export type IContentMetadataFacet = {
  __typename?: "IContentMetadataFacet";
  changeset?: Maybe<Array<Maybe<StringFacet>>>;
  created?: Maybe<Array<Maybe<DateFacet>>>;
  displayName?: Maybe<Array<Maybe<StringFacet>>>;
  fallbackForLocale?: Maybe<Array<Maybe<StringFacet>>>;
  key?: Maybe<Array<Maybe<StringFacet>>>;
  lastModified?: Maybe<Array<Maybe<DateFacet>>>;
  locale?: Maybe<Array<Maybe<StringFacet>>>;
  published?: Maybe<Array<Maybe<DateFacet>>>;
  sortOrder?: Maybe<Array<Maybe<NumberFacet>>>;
  status?: Maybe<Array<Maybe<StringFacet>>>;
  types?: Maybe<Array<Maybe<StringFacet>>>;
  url?: Maybe<ContentUrlFacet>;
  variation?: Maybe<Array<Maybe<StringFacet>>>;
  version?: Maybe<Array<Maybe<StringFacet>>>;
};

export type IContentMetadataFacetchangesetArgs = {
  filters?: InputMaybe<Array<Scalars["String"]["input"]>>;
  limit?: Scalars["Int"]["input"];
  orderBy?: InputMaybe<OrderBy>;
  orderType?: InputMaybe<OrderByFacetType>;
};

export type IContentMetadataFacetcreatedArgs = {
  unit?: InputMaybe<DateFacetUnit>;
  value?: InputMaybe<Scalars["Int"]["input"]>;
};

export type IContentMetadataFacetdisplayNameArgs = {
  filters?: InputMaybe<Array<Scalars["String"]["input"]>>;
  limit?: Scalars["Int"]["input"];
  orderBy?: InputMaybe<OrderBy>;
  orderType?: InputMaybe<OrderByFacetType>;
};

export type IContentMetadataFacetfallbackForLocaleArgs = {
  filters?: InputMaybe<Array<Scalars["String"]["input"]>>;
  limit?: Scalars["Int"]["input"];
  orderBy?: InputMaybe<OrderBy>;
  orderType?: InputMaybe<OrderByFacetType>;
};

export type IContentMetadataFacetkeyArgs = {
  filters?: InputMaybe<Array<Scalars["String"]["input"]>>;
  limit?: Scalars["Int"]["input"];
  orderBy?: InputMaybe<OrderBy>;
  orderType?: InputMaybe<OrderByFacetType>;
};

export type IContentMetadataFacetlastModifiedArgs = {
  unit?: InputMaybe<DateFacetUnit>;
  value?: InputMaybe<Scalars["Int"]["input"]>;
};

export type IContentMetadataFacetlocaleArgs = {
  filters?: InputMaybe<Array<Scalars["String"]["input"]>>;
  limit?: Scalars["Int"]["input"];
  orderBy?: InputMaybe<OrderBy>;
  orderType?: InputMaybe<OrderByFacetType>;
};

export type IContentMetadataFacetpublishedArgs = {
  unit?: InputMaybe<DateFacetUnit>;
  value?: InputMaybe<Scalars["Int"]["input"]>;
};

export type IContentMetadataFacetsortOrderArgs = {
  filters?: InputMaybe<Array<Scalars["String"]["input"]>>;
  limit?: InputMaybe<Scalars["Int"]["input"]>;
  orderBy?: InputMaybe<OrderBy>;
  orderType?: InputMaybe<OrderByFacetType>;
  ranges?: InputMaybe<Array<InputMaybe<RangeFacetsInput>>>;
};

export type IContentMetadataFacetstatusArgs = {
  filters?: InputMaybe<Array<Scalars["String"]["input"]>>;
  limit?: Scalars["Int"]["input"];
  orderBy?: InputMaybe<OrderBy>;
  orderType?: InputMaybe<OrderByFacetType>;
};

export type IContentMetadataFacettypesArgs = {
  filters?: InputMaybe<Array<Scalars["String"]["input"]>>;
  limit?: Scalars["Int"]["input"];
  orderBy?: InputMaybe<OrderBy>;
  orderType?: InputMaybe<OrderByFacetType>;
};

export type IContentMetadataFacetvariationArgs = {
  filters?: InputMaybe<Array<Scalars["String"]["input"]>>;
  limit?: Scalars["Int"]["input"];
  orderBy?: InputMaybe<OrderBy>;
  orderType?: InputMaybe<OrderByFacetType>;
};

export type IContentMetadataFacetversionArgs = {
  filters?: InputMaybe<Array<Scalars["String"]["input"]>>;
  limit?: Scalars["Int"]["input"];
  orderBy?: InputMaybe<OrderBy>;
  orderType?: InputMaybe<OrderByFacetType>;
};

export type IContentMetadataOrderByInput = {
  changeset?: InputMaybe<OrderBy>;
  created?: InputMaybe<OrderBy>;
  displayName?: InputMaybe<OrderBy>;
  fallbackForLocale?: InputMaybe<OrderBy>;
  key?: InputMaybe<OrderBy>;
  lastModified?: InputMaybe<OrderBy>;
  locale?: InputMaybe<OrderBy>;
  published?: InputMaybe<OrderBy>;
  sortOrder?: InputMaybe<OrderBy>;
  status?: InputMaybe<OrderBy>;
  types?: InputMaybe<OrderBy>;
  url?: InputMaybe<ContentUrlOrderByInput>;
  variation?: InputMaybe<OrderBy>;
  version?: InputMaybe<OrderBy>;
};

export type IContentMetadataWhereInput = {
  changeset?: InputMaybe<StringFilterInput>;
  created?: InputMaybe<DateFilterInput>;
  displayName?: InputMaybe<SearchableStringFilterInput>;
  fallbackForLocale?: InputMaybe<StringFilterInput>;
  key?: InputMaybe<StringFilterInput>;
  lastModified?: InputMaybe<DateFilterInput>;
  locale?: InputMaybe<StringFilterInput>;
  published?: InputMaybe<DateFilterInput>;
  sortOrder?: InputMaybe<IntFilterInput>;
  status?: InputMaybe<StringFilterInput>;
  types?: InputMaybe<StringFilterInput>;
  url?: InputMaybe<ContentUrlWhereInput>;
  variation?: InputMaybe<StringFilterInput>;
  version?: InputMaybe<StringFilterInput>;
};

export type IData = {
  /** @deprecated Use `_link` field instead */
  _children?: Maybe<QueryRef>;
  _deleted?: Maybe<Scalars["Bool"]["output"]>;
  _fulltext?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
  _id?: Maybe<Scalars["String"]["output"]>;
  _link?: Maybe<QueryRef>;
  _modified?: Maybe<Scalars["Date"]["output"]>;
  _score?: Maybe<Scalars["Float"]["output"]>;
};

export type IData_fulltextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type IData_linkArgs = {
  type?: InputMaybe<LinkTypes>;
};

export type IInstanceMetadata = {
  changeset?: Maybe<Scalars["String"]["output"]>;
  container?: Maybe<Scalars["String"]["output"]>;
  created?: Maybe<Scalars["DateTime"]["output"]>;
  createdBy?: Maybe<Scalars["String"]["output"]>;
  displayName?: Maybe<Scalars["String"]["output"]>;
  expired?: Maybe<Scalars["DateTime"]["output"]>;
  fallbackForLocale?: Maybe<Scalars["String"]["output"]>;
  key?: Maybe<Scalars["String"]["output"]>;
  lastModified?: Maybe<Scalars["DateTime"]["output"]>;
  lastModifiedBy?: Maybe<Scalars["String"]["output"]>;
  locale?: Maybe<Scalars["String"]["output"]>;
  locales?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
  owner?: Maybe<Scalars["String"]["output"]>;
  path?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
  published?: Maybe<Scalars["DateTime"]["output"]>;
  routeSegment?: Maybe<Scalars["String"]["output"]>;
  sortOrder?: Maybe<Scalars["Int"]["output"]>;
  status?: Maybe<Scalars["String"]["output"]>;
  types?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
  url?: Maybe<ContentUrl>;
  variation?: Maybe<Scalars["String"]["output"]>;
  version?: Maybe<Scalars["String"]["output"]>;
};

export type IInstanceMetadatadisplayNameArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type IItemMetadata = {
  changeset?: Maybe<Scalars["String"]["output"]>;
  created?: Maybe<Scalars["DateTime"]["output"]>;
  displayName?: Maybe<Scalars["String"]["output"]>;
  displayOption?: Maybe<Scalars["String"]["output"]>;
  fallbackForLocale?: Maybe<Scalars["String"]["output"]>;
  key?: Maybe<Scalars["String"]["output"]>;
  lastModified?: Maybe<Scalars["DateTime"]["output"]>;
  locale?: Maybe<Scalars["String"]["output"]>;
  published?: Maybe<Scalars["DateTime"]["output"]>;
  sortOrder?: Maybe<Scalars["Int"]["output"]>;
  status?: Maybe<Scalars["String"]["output"]>;
  types?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
  url?: Maybe<ContentUrl>;
  variation?: Maybe<Scalars["String"]["output"]>;
  version?: Maybe<Scalars["String"]["output"]>;
};

export type IItemMetadatadisplayNameArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type IMediaMetadata = {
  changeset?: Maybe<Scalars["String"]["output"]>;
  container?: Maybe<Scalars["String"]["output"]>;
  content?: Maybe<Scalars["String"]["output"]>;
  created?: Maybe<Scalars["DateTime"]["output"]>;
  createdBy?: Maybe<Scalars["String"]["output"]>;
  displayName?: Maybe<Scalars["String"]["output"]>;
  expired?: Maybe<Scalars["DateTime"]["output"]>;
  fallbackForLocale?: Maybe<Scalars["String"]["output"]>;
  key?: Maybe<Scalars["String"]["output"]>;
  lastModified?: Maybe<Scalars["DateTime"]["output"]>;
  lastModifiedBy?: Maybe<Scalars["String"]["output"]>;
  locale?: Maybe<Scalars["String"]["output"]>;
  locales?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
  mimeType?: Maybe<Scalars["String"]["output"]>;
  owner?: Maybe<Scalars["String"]["output"]>;
  path?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
  published?: Maybe<Scalars["DateTime"]["output"]>;
  routeSegment?: Maybe<Scalars["String"]["output"]>;
  sortOrder?: Maybe<Scalars["Int"]["output"]>;
  status?: Maybe<Scalars["String"]["output"]>;
  thumbnail?: Maybe<Scalars["String"]["output"]>;
  types?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
  url?: Maybe<ContentUrl>;
  variation?: Maybe<Scalars["String"]["output"]>;
  version?: Maybe<Scalars["String"]["output"]>;
};

export type IMediaMetadatacontentArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type IMediaMetadatadisplayNameArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type Image = IData &
  _IContent &
  _IImage &
  _IMedia & {
    __typename?: "Image";
    /** @deprecated Use `_link` field instead */
    _children?: Maybe<QueryRef>;
    _deleted?: Maybe<Scalars["Bool"]["output"]>;
    _fulltext?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
    _id?: Maybe<Scalars["String"]["output"]>;
    _link?: Maybe<QueryRef>;
    _metadata?: Maybe<IContentMetadata>;
    _modified?: Maybe<Scalars["Date"]["output"]>;
    _score?: Maybe<Scalars["Float"]["output"]>;
  };

export type Image_fulltextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type Image_linkArgs = {
  type?: InputMaybe<LinkTypes>;
};

export type ImageAutocomplete = {
  __typename?: "ImageAutocomplete";
  _metadata?: Maybe<IContentMetadataAutocomplete>;
};

export type ImageBackground = IData &
  _IComponent &
  _IContent & {
    __typename?: "ImageBackground";
    Alt?: Maybe<Scalars["String"]["output"]>;
    ImageDesktop?: Maybe<ContentReference>;
    ImageMobile?: Maybe<ContentReference>;
    IsFullIWidthImage?: Maybe<Scalars["Boolean"]["output"]>;
    Loading?: Maybe<Scalars["String"]["output"]>;
    /** @deprecated Use `_link` field instead */
    _children?: Maybe<QueryRef>;
    _deleted?: Maybe<Scalars["Bool"]["output"]>;
    _fulltext?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
    _id?: Maybe<Scalars["String"]["output"]>;
    _link?: Maybe<QueryRef>;
    _metadata?: Maybe<IContentMetadata>;
    _modified?: Maybe<Scalars["Date"]["output"]>;
    _score?: Maybe<Scalars["Float"]["output"]>;
  };

export type ImageBackground_fulltextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type ImageBackground_linkArgs = {
  type?: InputMaybe<LinkTypes>;
};

export type ImageBackgroundAutocomplete = {
  __typename?: "ImageBackgroundAutocomplete";
  ImageDesktop?: Maybe<ContentReferenceAutocomplete>;
  ImageMobile?: Maybe<ContentReferenceAutocomplete>;
  _metadata?: Maybe<IContentMetadataAutocomplete>;
};

export type ImageBackgroundFacet = {
  __typename?: "ImageBackgroundFacet";
  ImageDesktop?: Maybe<ContentReferenceFacet>;
  ImageMobile?: Maybe<ContentReferenceFacet>;
  _metadata?: Maybe<IContentMetadataFacet>;
};

export type ImageBackgroundOrderByInput = {
  ImageDesktop?: InputMaybe<ContentReferenceOrderByInput>;
  ImageMobile?: InputMaybe<ContentReferenceOrderByInput>;
  _metadata?: InputMaybe<IContentMetadataOrderByInput>;
  _minimumScore?: InputMaybe<Scalars["Float"]["input"]>;
  _modified?: InputMaybe<OrderBy>;
  _ranking?: InputMaybe<Ranking>;
  /** The value needs to be a positive value, but cannot exceed the maximum value of an integer. In case it is exceeded, the maximum of an integer is used. In case of a negative value, semantic search will be disabled. */
  _semanticWeight?: InputMaybe<Scalars["Float"]["input"]>;
};

export type ImageBackgroundOutput = {
  __typename?: "ImageBackgroundOutput";
  autocomplete?: Maybe<ImageBackgroundAutocomplete>;
  cursor?: Maybe<Scalars["String"]["output"]>;
  facets?: Maybe<ImageBackgroundFacet>;
  item?: Maybe<ImageBackground>;
  items?: Maybe<Array<Maybe<ImageBackground>>>;
  total?: Maybe<Scalars["Int"]["output"]>;
};

export type ImageBackgroundOutputtotalArgs = {
  all?: InputMaybe<Scalars["Boolean"]["input"]>;
};

export type ImageBackgroundWhereInput = {
  ImageDesktop?: InputMaybe<ContentReferenceWhereInput>;
  ImageMobile?: InputMaybe<ContentReferenceWhereInput>;
  _and?: InputMaybe<Array<InputMaybe<ImageBackgroundWhereInput>>>;
  _fulltext?: InputMaybe<SearchableStringFilterInput>;
  _metadata?: InputMaybe<IContentMetadataWhereInput>;
  _modified?: InputMaybe<DateFilterInput>;
  _not?: InputMaybe<Array<InputMaybe<ImageBackgroundWhereInput>>>;
  _or?: InputMaybe<Array<InputMaybe<ImageBackgroundWhereInput>>>;
};

export type ImageFacet = {
  __typename?: "ImageFacet";
  _metadata?: Maybe<IContentMetadataFacet>;
};

export type ImageItemElement = IData &
  _IComponent &
  _IContent & {
    __typename?: "ImageItemElement";
    Alt?: Maybe<Scalars["String"]["output"]>;
    ImageDesktop?: Maybe<ContentReference>;
    ImageMobile?: Maybe<ContentReference>;
    IsBackground?: Maybe<Scalars["Boolean"]["output"]>;
    IsFullWidthImage?: Maybe<Scalars["Boolean"]["output"]>;
    Loading?: Maybe<Scalars["String"]["output"]>;
    OverlayColor?: Maybe<Scalars["String"]["output"]>;
    OverlayOpacity?: Maybe<Scalars["Float"]["output"]>;
    /** @deprecated Use `_link` field instead */
    _children?: Maybe<QueryRef>;
    _deleted?: Maybe<Scalars["Bool"]["output"]>;
    _fulltext?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
    _id?: Maybe<Scalars["String"]["output"]>;
    _link?: Maybe<QueryRef>;
    _metadata?: Maybe<IContentMetadata>;
    _modified?: Maybe<Scalars["Date"]["output"]>;
    _score?: Maybe<Scalars["Float"]["output"]>;
  };

export type ImageItemElement_fulltextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type ImageItemElement_linkArgs = {
  type?: InputMaybe<LinkTypes>;
};

export type ImageItemElementAutocomplete = {
  __typename?: "ImageItemElementAutocomplete";
  ImageDesktop?: Maybe<ContentReferenceAutocomplete>;
  ImageMobile?: Maybe<ContentReferenceAutocomplete>;
  _metadata?: Maybe<IContentMetadataAutocomplete>;
};

export type ImageItemElementFacet = {
  __typename?: "ImageItemElementFacet";
  ImageDesktop?: Maybe<ContentReferenceFacet>;
  ImageMobile?: Maybe<ContentReferenceFacet>;
  _metadata?: Maybe<IContentMetadataFacet>;
};

export type ImageItemElementOrderByInput = {
  ImageDesktop?: InputMaybe<ContentReferenceOrderByInput>;
  ImageMobile?: InputMaybe<ContentReferenceOrderByInput>;
  _metadata?: InputMaybe<IContentMetadataOrderByInput>;
  _minimumScore?: InputMaybe<Scalars["Float"]["input"]>;
  _modified?: InputMaybe<OrderBy>;
  _ranking?: InputMaybe<Ranking>;
  /** The value needs to be a positive value, but cannot exceed the maximum value of an integer. In case it is exceeded, the maximum of an integer is used. In case of a negative value, semantic search will be disabled. */
  _semanticWeight?: InputMaybe<Scalars["Float"]["input"]>;
};

export type ImageItemElementOutput = {
  __typename?: "ImageItemElementOutput";
  autocomplete?: Maybe<ImageItemElementAutocomplete>;
  cursor?: Maybe<Scalars["String"]["output"]>;
  facets?: Maybe<ImageItemElementFacet>;
  item?: Maybe<ImageItemElement>;
  items?: Maybe<Array<Maybe<ImageItemElement>>>;
  total?: Maybe<Scalars["Int"]["output"]>;
};

export type ImageItemElementOutputtotalArgs = {
  all?: InputMaybe<Scalars["Boolean"]["input"]>;
};

export type ImageItemElementProperty = {
  __typename?: "ImageItemElementProperty";
  Alt?: Maybe<Scalars["String"]["output"]>;
  ImageDesktop?: Maybe<ContentReference>;
  ImageMobile?: Maybe<ContentReference>;
  IsBackground?: Maybe<Scalars["Boolean"]["output"]>;
  IsFullWidthImage?: Maybe<Scalars["Boolean"]["output"]>;
  Loading?: Maybe<Scalars["String"]["output"]>;
  OverlayColor?: Maybe<Scalars["String"]["output"]>;
  OverlayOpacity?: Maybe<Scalars["Float"]["output"]>;
};

export type ImageItemElementPropertyAutocomplete = {
  __typename?: "ImageItemElementPropertyAutocomplete";
  ImageDesktop?: Maybe<ContentReferenceAutocomplete>;
  ImageMobile?: Maybe<ContentReferenceAutocomplete>;
};

export type ImageItemElementPropertyFacet = {
  __typename?: "ImageItemElementPropertyFacet";
  ImageDesktop?: Maybe<ContentReferenceFacet>;
  ImageMobile?: Maybe<ContentReferenceFacet>;
};

export type ImageItemElementPropertyOrderByInput = {
  ImageDesktop?: InputMaybe<ContentReferenceOrderByInput>;
  ImageMobile?: InputMaybe<ContentReferenceOrderByInput>;
};

export type ImageItemElementPropertyWhereInput = {
  ImageDesktop?: InputMaybe<ContentReferenceWhereInput>;
  ImageMobile?: InputMaybe<ContentReferenceWhereInput>;
};

export type ImageItemElementWhereInput = {
  ImageDesktop?: InputMaybe<ContentReferenceWhereInput>;
  ImageMobile?: InputMaybe<ContentReferenceWhereInput>;
  _and?: InputMaybe<Array<InputMaybe<ImageItemElementWhereInput>>>;
  _fulltext?: InputMaybe<SearchableStringFilterInput>;
  _metadata?: InputMaybe<IContentMetadataWhereInput>;
  _modified?: InputMaybe<DateFilterInput>;
  _not?: InputMaybe<Array<InputMaybe<ImageItemElementWhereInput>>>;
  _or?: InputMaybe<Array<InputMaybe<ImageItemElementWhereInput>>>;
};

export type ImageMedia = IData &
  _IContent &
  _IImage &
  _IMedia & {
    __typename?: "ImageMedia";
    /** @deprecated Use `_link` field instead */
    _children?: Maybe<QueryRef>;
    _deleted?: Maybe<Scalars["Bool"]["output"]>;
    _fulltext?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
    _id?: Maybe<Scalars["String"]["output"]>;
    _link?: Maybe<QueryRef>;
    _metadata?: Maybe<IContentMetadata>;
    _modified?: Maybe<Scalars["Date"]["output"]>;
    _score?: Maybe<Scalars["Float"]["output"]>;
  };

export type ImageMedia_fulltextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type ImageMedia_linkArgs = {
  type?: InputMaybe<LinkTypes>;
};

export type ImageMediaAutocomplete = {
  __typename?: "ImageMediaAutocomplete";
  _metadata?: Maybe<IContentMetadataAutocomplete>;
};

export type ImageMediaFacet = {
  __typename?: "ImageMediaFacet";
  _metadata?: Maybe<IContentMetadataFacet>;
};

export type ImageMediaOrderByInput = {
  _metadata?: InputMaybe<IContentMetadataOrderByInput>;
  _minimumScore?: InputMaybe<Scalars["Float"]["input"]>;
  _modified?: InputMaybe<OrderBy>;
  _ranking?: InputMaybe<Ranking>;
  /** The value needs to be a positive value, but cannot exceed the maximum value of an integer. In case it is exceeded, the maximum of an integer is used. In case of a negative value, semantic search will be disabled. */
  _semanticWeight?: InputMaybe<Scalars["Float"]["input"]>;
};

export type ImageMediaOutput = {
  __typename?: "ImageMediaOutput";
  autocomplete?: Maybe<ImageMediaAutocomplete>;
  cursor?: Maybe<Scalars["String"]["output"]>;
  facets?: Maybe<ImageMediaFacet>;
  item?: Maybe<ImageMedia>;
  items?: Maybe<Array<Maybe<ImageMedia>>>;
  total?: Maybe<Scalars["Int"]["output"]>;
};

export type ImageMediaOutputtotalArgs = {
  all?: InputMaybe<Scalars["Boolean"]["input"]>;
};

export type ImageMediaWhereInput = {
  _and?: InputMaybe<Array<InputMaybe<ImageMediaWhereInput>>>;
  _fulltext?: InputMaybe<SearchableStringFilterInput>;
  _metadata?: InputMaybe<IContentMetadataWhereInput>;
  _modified?: InputMaybe<DateFilterInput>;
  _not?: InputMaybe<Array<InputMaybe<ImageMediaWhereInput>>>;
  _or?: InputMaybe<Array<InputMaybe<ImageMediaWhereInput>>>;
};

export type ImageOrderByInput = {
  _metadata?: InputMaybe<IContentMetadataOrderByInput>;
  _minimumScore?: InputMaybe<Scalars["Float"]["input"]>;
  _modified?: InputMaybe<OrderBy>;
  _ranking?: InputMaybe<Ranking>;
  /** The value needs to be a positive value, but cannot exceed the maximum value of an integer. In case it is exceeded, the maximum of an integer is used. In case of a negative value, semantic search will be disabled. */
  _semanticWeight?: InputMaybe<Scalars["Float"]["input"]>;
};

export type ImageOutput = {
  __typename?: "ImageOutput";
  autocomplete?: Maybe<ImageAutocomplete>;
  cursor?: Maybe<Scalars["String"]["output"]>;
  facets?: Maybe<ImageFacet>;
  item?: Maybe<Image>;
  items?: Maybe<Array<Maybe<Image>>>;
  total?: Maybe<Scalars["Int"]["output"]>;
};

export type ImageOutputtotalArgs = {
  all?: InputMaybe<Scalars["Boolean"]["input"]>;
};

export type ImageTextItemElement = IData &
  _IComponent &
  _IContent & {
    __typename?: "ImageTextItemElement";
    Alt?: Maybe<Scalars["String"]["output"]>;
    BackgroundLink?: Maybe<ContentUrl>;
    ButtonLink?: Maybe<ContentUrl>;
    ButtonText?: Maybe<Scalars["String"]["output"]>;
    ContentImagePosition?: Maybe<Scalars["String"]["output"]>;
    CssClass?: Maybe<Scalars["String"]["output"]>;
    Heading?: Maybe<RichText>;
    Image?: Maybe<ContentReference>;
    ImageMobile?: Maybe<ContentReference>;
    IsFullWidthImage?: Maybe<Scalars["Boolean"]["output"]>;
    Loading?: Maybe<Scalars["String"]["output"]>;
    RichText?: Maybe<RichText>;
    /** @deprecated Use `_link` field instead */
    _children?: Maybe<QueryRef>;
    _deleted?: Maybe<Scalars["Bool"]["output"]>;
    _fulltext?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
    _id?: Maybe<Scalars["String"]["output"]>;
    _link?: Maybe<QueryRef>;
    _metadata?: Maybe<IContentMetadata>;
    _modified?: Maybe<Scalars["Date"]["output"]>;
    _score?: Maybe<Scalars["Float"]["output"]>;
  };

export type ImageTextItemElement_fulltextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type ImageTextItemElement_linkArgs = {
  type?: InputMaybe<LinkTypes>;
};

export type ImageTextItemElementAutocomplete = {
  __typename?: "ImageTextItemElementAutocomplete";
  BackgroundLink?: Maybe<ContentUrlAutocomplete>;
  ButtonLink?: Maybe<ContentUrlAutocomplete>;
  Heading?: Maybe<RichTextAutocomplete>;
  Image?: Maybe<ContentReferenceAutocomplete>;
  ImageMobile?: Maybe<ContentReferenceAutocomplete>;
  RichText?: Maybe<RichTextAutocomplete>;
  _metadata?: Maybe<IContentMetadataAutocomplete>;
};

export type ImageTextItemElementFacet = {
  __typename?: "ImageTextItemElementFacet";
  BackgroundLink?: Maybe<ContentUrlFacet>;
  ButtonLink?: Maybe<ContentUrlFacet>;
  Heading?: Maybe<RichTextFacet>;
  Image?: Maybe<ContentReferenceFacet>;
  ImageMobile?: Maybe<ContentReferenceFacet>;
  RichText?: Maybe<RichTextFacet>;
  _metadata?: Maybe<IContentMetadataFacet>;
};

export type ImageTextItemElementOrderByInput = {
  BackgroundLink?: InputMaybe<ContentUrlOrderByInput>;
  ButtonLink?: InputMaybe<ContentUrlOrderByInput>;
  Heading?: InputMaybe<RichTextOrderByInput>;
  Image?: InputMaybe<ContentReferenceOrderByInput>;
  ImageMobile?: InputMaybe<ContentReferenceOrderByInput>;
  RichText?: InputMaybe<RichTextOrderByInput>;
  _metadata?: InputMaybe<IContentMetadataOrderByInput>;
  _minimumScore?: InputMaybe<Scalars["Float"]["input"]>;
  _modified?: InputMaybe<OrderBy>;
  _ranking?: InputMaybe<Ranking>;
  /** The value needs to be a positive value, but cannot exceed the maximum value of an integer. In case it is exceeded, the maximum of an integer is used. In case of a negative value, semantic search will be disabled. */
  _semanticWeight?: InputMaybe<Scalars["Float"]["input"]>;
};

export type ImageTextItemElementOutput = {
  __typename?: "ImageTextItemElementOutput";
  autocomplete?: Maybe<ImageTextItemElementAutocomplete>;
  cursor?: Maybe<Scalars["String"]["output"]>;
  facets?: Maybe<ImageTextItemElementFacet>;
  item?: Maybe<ImageTextItemElement>;
  items?: Maybe<Array<Maybe<ImageTextItemElement>>>;
  total?: Maybe<Scalars["Int"]["output"]>;
};

export type ImageTextItemElementOutputtotalArgs = {
  all?: InputMaybe<Scalars["Boolean"]["input"]>;
};

export type ImageTextItemElementWhereInput = {
  BackgroundLink?: InputMaybe<ContentUrlWhereInput>;
  ButtonLink?: InputMaybe<ContentUrlWhereInput>;
  Heading?: InputMaybe<RichTextWhereInput>;
  Image?: InputMaybe<ContentReferenceWhereInput>;
  ImageMobile?: InputMaybe<ContentReferenceWhereInput>;
  RichText?: InputMaybe<RichTextWhereInput>;
  _and?: InputMaybe<Array<InputMaybe<ImageTextItemElementWhereInput>>>;
  _fulltext?: InputMaybe<SearchableStringFilterInput>;
  _metadata?: InputMaybe<IContentMetadataWhereInput>;
  _modified?: InputMaybe<DateFilterInput>;
  _not?: InputMaybe<Array<InputMaybe<ImageTextItemElementWhereInput>>>;
  _or?: InputMaybe<Array<InputMaybe<ImageTextItemElementWhereInput>>>;
};

export type ImageWhereInput = {
  _and?: InputMaybe<Array<InputMaybe<ImageWhereInput>>>;
  _fulltext?: InputMaybe<SearchableStringFilterInput>;
  _metadata?: InputMaybe<IContentMetadataWhereInput>;
  _modified?: InputMaybe<DateFilterInput>;
  _not?: InputMaybe<Array<InputMaybe<ImageWhereInput>>>;
  _or?: InputMaybe<Array<InputMaybe<ImageWhereInput>>>;
};

export type InstanceMetadata = IContentMetadata &
  IInstanceMetadata & {
    __typename?: "InstanceMetadata";
    changeset?: Maybe<Scalars["String"]["output"]>;
    container?: Maybe<Scalars["String"]["output"]>;
    created?: Maybe<Scalars["DateTime"]["output"]>;
    createdBy?: Maybe<Scalars["String"]["output"]>;
    displayName?: Maybe<Scalars["String"]["output"]>;
    expired?: Maybe<Scalars["DateTime"]["output"]>;
    fallbackForLocale?: Maybe<Scalars["String"]["output"]>;
    key?: Maybe<Scalars["String"]["output"]>;
    lastModified?: Maybe<Scalars["DateTime"]["output"]>;
    lastModifiedBy?: Maybe<Scalars["String"]["output"]>;
    locale?: Maybe<Scalars["String"]["output"]>;
    locales?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
    owner?: Maybe<Scalars["String"]["output"]>;
    path?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
    published?: Maybe<Scalars["DateTime"]["output"]>;
    routeSegment?: Maybe<Scalars["String"]["output"]>;
    sortOrder?: Maybe<Scalars["Int"]["output"]>;
    status?: Maybe<Scalars["String"]["output"]>;
    types?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
    url?: Maybe<ContentUrl>;
    variation?: Maybe<Scalars["String"]["output"]>;
    version?: Maybe<Scalars["String"]["output"]>;
  };

export type InstanceMetadatadisplayNameArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type IntFilterInput = {
  /** `boost` influences the weight of a field by boosting a match with a number (default: 1) — counts more towards the eventual relevance score which can be projected with `_score` — at query time. Note that `boost` cannot be a negative number. */
  boost?: InputMaybe<Scalars["Int"]["input"]>;
  /** `eq` matches on an exact value, but the value is case-insensitive. */
  eq?: InputMaybe<Scalars["Int"]["input"]>;
  /** `exist` matches results that have this field. */
  exist?: InputMaybe<Scalars["Boolean"]["input"]>;
  /** `Factor` allows you to use a number value in a field to influence the `_score` directly. If used on a multi-valued field, then only the lowest value of the field is used in calculations. Default for `value` is `1`. Default for `modifier` is `NONE`. */
  factor?: InputMaybe<NumberFactor>;
  /** `gt` retrieves results with matches that have a value which is `greater than` it. */
  gt?: InputMaybe<Scalars["Int"]["input"]>;
  /** `gte` retrieves results with matches that have a value which is `greater than or equal to` it. */
  gte?: InputMaybe<Scalars["Int"]["input"]>;
  /** `in` matches with 1 or more exact values in a list. Example: `in: ["word1", "word2", "this is a phrase"]` */
  in?: InputMaybe<Array<InputMaybe<Scalars["Int"]["input"]>>>;
  /** `lt` retrieves results with matches that have a value which is `lower than` it. */
  lt?: InputMaybe<Scalars["Int"]["input"]>;
  /** `lte` retrieves results with matches that have a value which is `lower than or equal to` it. */
  lte?: InputMaybe<Scalars["Int"]["input"]>;
  /** `not_eq` retrieves results not matching with an exact (but case-insensitive) value. */
  notEq?: InputMaybe<Scalars["Int"]["input"]>;
  /** `not_in` returns results that do not match with 1 or more exact values in a list. Example: `not_in: ["word1", "word2", "this is a phrase"]` */
  notIn?: InputMaybe<Array<InputMaybe<Scalars["Int"]["input"]>>>;
};

export type ItemMetadata = IContentMetadata &
  IItemMetadata & {
    __typename?: "ItemMetadata";
    changeset?: Maybe<Scalars["String"]["output"]>;
    created?: Maybe<Scalars["DateTime"]["output"]>;
    displayName?: Maybe<Scalars["String"]["output"]>;
    displayOption?: Maybe<Scalars["String"]["output"]>;
    fallbackForLocale?: Maybe<Scalars["String"]["output"]>;
    key?: Maybe<Scalars["String"]["output"]>;
    lastModified?: Maybe<Scalars["DateTime"]["output"]>;
    locale?: Maybe<Scalars["String"]["output"]>;
    published?: Maybe<Scalars["DateTime"]["output"]>;
    sortOrder?: Maybe<Scalars["Int"]["output"]>;
    status?: Maybe<Scalars["String"]["output"]>;
    types?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
    url?: Maybe<ContentUrl>;
    variation?: Maybe<Scalars["String"]["output"]>;
    version?: Maybe<Scalars["String"]["output"]>;
  };

export type ItemMetadatadisplayNameArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type LandingPage = IData &
  _IContent &
  _IPage & {
    __typename?: "LandingPage";
    MainContentArea?: Maybe<Array<Maybe<_IContent>>>;
    SeoSettings?: Maybe<PageSeoSettingsProperty>;
    /** @deprecated Use `_link` field instead */
    _children?: Maybe<QueryRef>;
    _deleted?: Maybe<Scalars["Bool"]["output"]>;
    _fulltext?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
    _id?: Maybe<Scalars["String"]["output"]>;
    _link?: Maybe<QueryRef>;
    _metadata?: Maybe<IContentMetadata>;
    _modified?: Maybe<Scalars["Date"]["output"]>;
    _score?: Maybe<Scalars["Float"]["output"]>;
  };

export type LandingPage_fulltextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type LandingPage_linkArgs = {
  type?: InputMaybe<LinkTypes>;
};

export type LandingPageAutocomplete = {
  __typename?: "LandingPageAutocomplete";
  MainContentArea?: Maybe<_IContentAutocomplete>;
  SeoSettings?: Maybe<PageSeoSettingsPropertyAutocomplete>;
  _metadata?: Maybe<IContentMetadataAutocomplete>;
};

export type LandingPageFacet = {
  __typename?: "LandingPageFacet";
  MainContentArea?: Maybe<_IContentFacet>;
  SeoSettings?: Maybe<PageSeoSettingsPropertyFacet>;
  _metadata?: Maybe<IContentMetadataFacet>;
};

export type LandingPageOrderByInput = {
  MainContentArea?: InputMaybe<_IContentOrderByInput>;
  SeoSettings?: InputMaybe<PageSeoSettingsPropertyOrderByInput>;
  _metadata?: InputMaybe<IContentMetadataOrderByInput>;
  _minimumScore?: InputMaybe<Scalars["Float"]["input"]>;
  _modified?: InputMaybe<OrderBy>;
  _ranking?: InputMaybe<Ranking>;
  /** The value needs to be a positive value, but cannot exceed the maximum value of an integer. In case it is exceeded, the maximum of an integer is used. In case of a negative value, semantic search will be disabled. */
  _semanticWeight?: InputMaybe<Scalars["Float"]["input"]>;
};

export type LandingPageOutput = {
  __typename?: "LandingPageOutput";
  autocomplete?: Maybe<LandingPageAutocomplete>;
  cursor?: Maybe<Scalars["String"]["output"]>;
  facets?: Maybe<LandingPageFacet>;
  item?: Maybe<LandingPage>;
  items?: Maybe<Array<Maybe<LandingPage>>>;
  total?: Maybe<Scalars["Int"]["output"]>;
};

export type LandingPageOutputtotalArgs = {
  all?: InputMaybe<Scalars["Boolean"]["input"]>;
};

export type LandingPageWhereInput = {
  MainContentArea?: InputMaybe<_IContentWhereInput>;
  SeoSettings?: InputMaybe<PageSeoSettingsPropertyWhereInput>;
  _and?: InputMaybe<Array<InputMaybe<LandingPageWhereInput>>>;
  _fulltext?: InputMaybe<SearchableStringFilterInput>;
  _metadata?: InputMaybe<IContentMetadataWhereInput>;
  _modified?: InputMaybe<DateFilterInput>;
  _not?: InputMaybe<Array<InputMaybe<LandingPageWhereInput>>>;
  _or?: InputMaybe<Array<InputMaybe<LandingPageWhereInput>>>;
};

export type Link = {
  __typename?: "Link";
  target?: Maybe<Scalars["String"]["output"]>;
  text?: Maybe<Scalars["String"]["output"]>;
  title?: Maybe<Scalars["String"]["output"]>;
  url?: Maybe<ContentUrl>;
};

export type LinktextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type LinkAutocomplete = {
  __typename?: "LinkAutocomplete";
  target?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
  title?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
  url?: Maybe<ContentUrlAutocomplete>;
};

export type LinkAutocompletetargetArgs = {
  limit?: Scalars["Int"]["input"];
  value: Scalars["String"]["input"];
};

export type LinkAutocompletetitleArgs = {
  limit?: Scalars["Int"]["input"];
  value: Scalars["String"]["input"];
};

export type LinkConfig = {
  from?: InputMaybe<Scalars["String"]["input"]>;
  to?: InputMaybe<Scalars["String"]["input"]>;
};

export type LinkFacet = {
  __typename?: "LinkFacet";
  target?: Maybe<Array<Maybe<StringFacet>>>;
  text?: Maybe<Array<Maybe<StringFacet>>>;
  title?: Maybe<Array<Maybe<StringFacet>>>;
  url?: Maybe<ContentUrlFacet>;
};

export type LinkFacettargetArgs = {
  filters?: InputMaybe<Array<Scalars["String"]["input"]>>;
  limit?: Scalars["Int"]["input"];
  orderBy?: InputMaybe<OrderBy>;
  orderType?: InputMaybe<OrderByFacetType>;
};

export type LinkFacettextArgs = {
  filters?: InputMaybe<Array<Scalars["String"]["input"]>>;
  limit?: Scalars["Int"]["input"];
  orderBy?: InputMaybe<OrderBy>;
  orderType?: InputMaybe<OrderByFacetType>;
};

export type LinkFacettitleArgs = {
  filters?: InputMaybe<Array<Scalars["String"]["input"]>>;
  limit?: Scalars["Int"]["input"];
  orderBy?: InputMaybe<OrderBy>;
  orderType?: InputMaybe<OrderByFacetType>;
};

export type LinkOrderByInput = {
  target?: InputMaybe<OrderBy>;
  text?: InputMaybe<OrderBy>;
  title?: InputMaybe<OrderBy>;
  url?: InputMaybe<ContentUrlOrderByInput>;
};

export enum LinkTypes {
  /**
   *
   * | *Direction* | &nbsp; | *Field*     |
   * | ----------: | ------ | :---------- |
   * | *from*      |        | `_metadata.key` |
   * | *to*        |        | `_metadata.owner`   |
   */
  ASSETS = "ASSETS",
  /**
   *
   * | *Direction* | &nbsp; | *Field*     |
   * | ----------: | ------ | :---------- |
   * | *from*      |        | `_metadata.key` |
   * | *to*        |        | `_metadata.container`   |
   */
  DEFAULT = "DEFAULT",
  /**
   *
   * | *Direction* | &nbsp; | *Field*     |
   * | ----------: | ------ | :---------- |
   * | *from*      |        | `_metadata.key` |
   * | *to*        |        | `_metadata.container`   |
   */
  ITEMS = "ITEMS",
  /**
   *
   * | *Direction* | &nbsp; | *Field*     |
   * | ----------: | ------ | :---------- |
   * | *from*      |        | `_metadata.path` |
   * | *to*        |        | `_metadata.key`   |
   */
  PATH = "PATH",
}

export type LinkWhereInput = {
  target?: InputMaybe<StringFilterInput>;
  text?: InputMaybe<SearchableStringFilterInput>;
  title?: InputMaybe<StringFilterInput>;
  url?: InputMaybe<ContentUrlWhereInput>;
};

export enum Locales {
  ALL = "ALL",
  NEUTRAL = "NEUTRAL",
  en = "en",
}

export type MediaMetadata = IContentMetadata &
  IInstanceMetadata &
  IMediaMetadata & {
    __typename?: "MediaMetadata";
    changeset?: Maybe<Scalars["String"]["output"]>;
    container?: Maybe<Scalars["String"]["output"]>;
    content?: Maybe<Scalars["String"]["output"]>;
    created?: Maybe<Scalars["DateTime"]["output"]>;
    createdBy?: Maybe<Scalars["String"]["output"]>;
    displayName?: Maybe<Scalars["String"]["output"]>;
    expired?: Maybe<Scalars["DateTime"]["output"]>;
    fallbackForLocale?: Maybe<Scalars["String"]["output"]>;
    key?: Maybe<Scalars["String"]["output"]>;
    lastModified?: Maybe<Scalars["DateTime"]["output"]>;
    lastModifiedBy?: Maybe<Scalars["String"]["output"]>;
    locale?: Maybe<Scalars["String"]["output"]>;
    locales?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
    mimeType?: Maybe<Scalars["String"]["output"]>;
    owner?: Maybe<Scalars["String"]["output"]>;
    path?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
    published?: Maybe<Scalars["DateTime"]["output"]>;
    routeSegment?: Maybe<Scalars["String"]["output"]>;
    sortOrder?: Maybe<Scalars["Int"]["output"]>;
    status?: Maybe<Scalars["String"]["output"]>;
    thumbnail?: Maybe<Scalars["String"]["output"]>;
    types?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
    url?: Maybe<ContentUrl>;
    variation?: Maybe<Scalars["String"]["output"]>;
    version?: Maybe<Scalars["String"]["output"]>;
  };

export type MediaMetadatacontentArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type MediaMetadatadisplayNameArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type MegaMenuGroupBlock = IData &
  _IComponent &
  _IContent & {
    __typename?: "MegaMenuGroupBlock";
    ExpandableMobile?: Maybe<Scalars["Boolean"]["output"]>;
    MegaMenuContentArea?: Maybe<Array<Maybe<_IContent>>>;
    MegaMenuUrl?: Maybe<ContentUrl>;
    MenuMenuHeading?: Maybe<Scalars["String"]["output"]>;
    /** @deprecated Use `_link` field instead */
    _children?: Maybe<QueryRef>;
    _deleted?: Maybe<Scalars["Bool"]["output"]>;
    _fulltext?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
    _id?: Maybe<Scalars["String"]["output"]>;
    _link?: Maybe<QueryRef>;
    _metadata?: Maybe<IContentMetadata>;
    _modified?: Maybe<Scalars["Date"]["output"]>;
    _score?: Maybe<Scalars["Float"]["output"]>;
  };

export type MegaMenuGroupBlock_fulltextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type MegaMenuGroupBlock_linkArgs = {
  type?: InputMaybe<LinkTypes>;
};

export type MegaMenuGroupBlockAutocomplete = {
  __typename?: "MegaMenuGroupBlockAutocomplete";
  MegaMenuContentArea?: Maybe<_IContentAutocomplete>;
  MegaMenuUrl?: Maybe<ContentUrlAutocomplete>;
  _metadata?: Maybe<IContentMetadataAutocomplete>;
};

export type MegaMenuGroupBlockFacet = {
  __typename?: "MegaMenuGroupBlockFacet";
  MegaMenuContentArea?: Maybe<_IContentFacet>;
  MegaMenuUrl?: Maybe<ContentUrlFacet>;
  _metadata?: Maybe<IContentMetadataFacet>;
};

export type MegaMenuGroupBlockOrderByInput = {
  MegaMenuContentArea?: InputMaybe<_IContentOrderByInput>;
  MegaMenuUrl?: InputMaybe<ContentUrlOrderByInput>;
  _metadata?: InputMaybe<IContentMetadataOrderByInput>;
  _minimumScore?: InputMaybe<Scalars["Float"]["input"]>;
  _modified?: InputMaybe<OrderBy>;
  _ranking?: InputMaybe<Ranking>;
  /** The value needs to be a positive value, but cannot exceed the maximum value of an integer. In case it is exceeded, the maximum of an integer is used. In case of a negative value, semantic search will be disabled. */
  _semanticWeight?: InputMaybe<Scalars["Float"]["input"]>;
};

export type MegaMenuGroupBlockOutput = {
  __typename?: "MegaMenuGroupBlockOutput";
  autocomplete?: Maybe<MegaMenuGroupBlockAutocomplete>;
  cursor?: Maybe<Scalars["String"]["output"]>;
  facets?: Maybe<MegaMenuGroupBlockFacet>;
  item?: Maybe<MegaMenuGroupBlock>;
  items?: Maybe<Array<Maybe<MegaMenuGroupBlock>>>;
  total?: Maybe<Scalars["Int"]["output"]>;
};

export type MegaMenuGroupBlockOutputtotalArgs = {
  all?: InputMaybe<Scalars["Boolean"]["input"]>;
};

export type MegaMenuGroupBlockWhereInput = {
  MegaMenuContentArea?: InputMaybe<_IContentWhereInput>;
  MegaMenuUrl?: InputMaybe<ContentUrlWhereInput>;
  _and?: InputMaybe<Array<InputMaybe<MegaMenuGroupBlockWhereInput>>>;
  _fulltext?: InputMaybe<SearchableStringFilterInput>;
  _metadata?: InputMaybe<IContentMetadataWhereInput>;
  _modified?: InputMaybe<DateFilterInput>;
  _not?: InputMaybe<Array<InputMaybe<MegaMenuGroupBlockWhereInput>>>;
  _or?: InputMaybe<Array<InputMaybe<MegaMenuGroupBlockWhereInput>>>;
};

export type NavigationMenuBlock = IData &
  _IComponent &
  _IContent & {
    __typename?: "NavigationMenuBlock";
    Link?: Maybe<Link>;
    MenuNavigationHeading?: Maybe<Scalars["String"]["output"]>;
    SubMenuItem?: Maybe<Array<Maybe<_IContent>>>;
    ThumbnailBanner?: Maybe<ContentReference>;
    /** @deprecated Use `_link` field instead */
    _children?: Maybe<QueryRef>;
    _deleted?: Maybe<Scalars["Bool"]["output"]>;
    _fulltext?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
    _id?: Maybe<Scalars["String"]["output"]>;
    _link?: Maybe<QueryRef>;
    _metadata?: Maybe<IContentMetadata>;
    _modified?: Maybe<Scalars["Date"]["output"]>;
    _score?: Maybe<Scalars["Float"]["output"]>;
  };

export type NavigationMenuBlock_fulltextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type NavigationMenuBlock_linkArgs = {
  type?: InputMaybe<LinkTypes>;
};

export type NavigationMenuBlockAutocomplete = {
  __typename?: "NavigationMenuBlockAutocomplete";
  Link?: Maybe<LinkAutocomplete>;
  SubMenuItem?: Maybe<_IContentAutocomplete>;
  ThumbnailBanner?: Maybe<ContentReferenceAutocomplete>;
  _metadata?: Maybe<IContentMetadataAutocomplete>;
};

export type NavigationMenuBlockFacet = {
  __typename?: "NavigationMenuBlockFacet";
  Link?: Maybe<LinkFacet>;
  SubMenuItem?: Maybe<_IContentFacet>;
  ThumbnailBanner?: Maybe<ContentReferenceFacet>;
  _metadata?: Maybe<IContentMetadataFacet>;
};

export type NavigationMenuBlockOrderByInput = {
  Link?: InputMaybe<LinkOrderByInput>;
  SubMenuItem?: InputMaybe<_IContentOrderByInput>;
  ThumbnailBanner?: InputMaybe<ContentReferenceOrderByInput>;
  _metadata?: InputMaybe<IContentMetadataOrderByInput>;
  _minimumScore?: InputMaybe<Scalars["Float"]["input"]>;
  _modified?: InputMaybe<OrderBy>;
  _ranking?: InputMaybe<Ranking>;
  /** The value needs to be a positive value, but cannot exceed the maximum value of an integer. In case it is exceeded, the maximum of an integer is used. In case of a negative value, semantic search will be disabled. */
  _semanticWeight?: InputMaybe<Scalars["Float"]["input"]>;
};

export type NavigationMenuBlockOutput = {
  __typename?: "NavigationMenuBlockOutput";
  autocomplete?: Maybe<NavigationMenuBlockAutocomplete>;
  cursor?: Maybe<Scalars["String"]["output"]>;
  facets?: Maybe<NavigationMenuBlockFacet>;
  item?: Maybe<NavigationMenuBlock>;
  items?: Maybe<Array<Maybe<NavigationMenuBlock>>>;
  total?: Maybe<Scalars["Int"]["output"]>;
};

export type NavigationMenuBlockOutputtotalArgs = {
  all?: InputMaybe<Scalars["Boolean"]["input"]>;
};

export type NavigationMenuBlockWhereInput = {
  Link?: InputMaybe<LinkWhereInput>;
  SubMenuItem?: InputMaybe<_IContentWhereInput>;
  ThumbnailBanner?: InputMaybe<ContentReferenceWhereInput>;
  _and?: InputMaybe<Array<InputMaybe<NavigationMenuBlockWhereInput>>>;
  _fulltext?: InputMaybe<SearchableStringFilterInput>;
  _metadata?: InputMaybe<IContentMetadataWhereInput>;
  _modified?: InputMaybe<DateFilterInput>;
  _not?: InputMaybe<Array<InputMaybe<NavigationMenuBlockWhereInput>>>;
  _or?: InputMaybe<Array<InputMaybe<NavigationMenuBlockWhereInput>>>;
};

export type NumberFacet = {
  __typename?: "NumberFacet";
  count?: Maybe<Scalars["Int"]["output"]>;
  name?: Maybe<Scalars["String"]["output"]>;
};

/** Factor influences the score based of number values with a factor function */
export type NumberFactor = {
  modifier?: InputMaybe<FactorModifier>;
  value?: InputMaybe<Scalars["Float"]["input"]>;
};

export type OfficeLocation = IData &
  _IComponent &
  _IContent & {
    __typename?: "OfficeLocation";
    Description?: Maybe<Scalars["String"]["output"]>;
    OfficeAddressCity?: Maybe<Scalars["String"]["output"]>;
    OfficeAddressCountry?: Maybe<Scalars["String"]["output"]>;
    OfficeAddressPostalCode?: Maybe<Scalars["String"]["output"]>;
    OfficeAddressStreet1?: Maybe<Scalars["String"]["output"]>;
    OfficeAddressStreet2?: Maybe<Scalars["String"]["output"]>;
    OfficeEmail?: Maybe<Scalars["String"]["output"]>;
    OfficePhone?: Maybe<Scalars["String"]["output"]>;
    OfficeTitle?: Maybe<Scalars["String"]["output"]>;
    State?: Maybe<Scalars["String"]["output"]>;
    /** @deprecated Use `_link` field instead */
    _children?: Maybe<QueryRef>;
    _deleted?: Maybe<Scalars["Bool"]["output"]>;
    _fulltext?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
    _id?: Maybe<Scalars["String"]["output"]>;
    _link?: Maybe<QueryRef>;
    _metadata?: Maybe<IContentMetadata>;
    _modified?: Maybe<Scalars["Date"]["output"]>;
    _score?: Maybe<Scalars["Float"]["output"]>;
  };

export type OfficeLocation_fulltextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type OfficeLocation_linkArgs = {
  type?: InputMaybe<LinkTypes>;
};

export type OfficeLocationAutocomplete = {
  __typename?: "OfficeLocationAutocomplete";
  _metadata?: Maybe<IContentMetadataAutocomplete>;
};

export type OfficeLocationFacet = {
  __typename?: "OfficeLocationFacet";
  _metadata?: Maybe<IContentMetadataFacet>;
};

export type OfficeLocationOrderByInput = {
  _metadata?: InputMaybe<IContentMetadataOrderByInput>;
  _minimumScore?: InputMaybe<Scalars["Float"]["input"]>;
  _modified?: InputMaybe<OrderBy>;
  _ranking?: InputMaybe<Ranking>;
  /** The value needs to be a positive value, but cannot exceed the maximum value of an integer. In case it is exceeded, the maximum of an integer is used. In case of a negative value, semantic search will be disabled. */
  _semanticWeight?: InputMaybe<Scalars["Float"]["input"]>;
};

export type OfficeLocationOutput = {
  __typename?: "OfficeLocationOutput";
  autocomplete?: Maybe<OfficeLocationAutocomplete>;
  cursor?: Maybe<Scalars["String"]["output"]>;
  facets?: Maybe<OfficeLocationFacet>;
  item?: Maybe<OfficeLocation>;
  items?: Maybe<Array<Maybe<OfficeLocation>>>;
  total?: Maybe<Scalars["Int"]["output"]>;
};

export type OfficeLocationOutputtotalArgs = {
  all?: InputMaybe<Scalars["Boolean"]["input"]>;
};

export type OfficeLocationWhereInput = {
  _and?: InputMaybe<Array<InputMaybe<OfficeLocationWhereInput>>>;
  _fulltext?: InputMaybe<SearchableStringFilterInput>;
  _metadata?: InputMaybe<IContentMetadataWhereInput>;
  _modified?: InputMaybe<DateFilterInput>;
  _not?: InputMaybe<Array<InputMaybe<OfficeLocationWhereInput>>>;
  _or?: InputMaybe<Array<InputMaybe<OfficeLocationWhereInput>>>;
};

export enum OrderBy {
  ASC = "ASC",
  DESC = "DESC",
}

export enum OrderByFacetType {
  COUNT = "COUNT",
  VALUE = "VALUE",
}

export type PDPCarouselElement = IData &
  _IComponent &
  _IContent & {
    __typename?: "PDPCarouselElement";
    CarouselSource?: Maybe<Scalars["String"]["output"]>;
    Heading?: Maybe<RichText>;
    PagingSize?: Maybe<Scalars["Int"]["output"]>;
    VisibleElements?: Maybe<ContentReference>;
    /** @deprecated Use `_link` field instead */
    _children?: Maybe<QueryRef>;
    _deleted?: Maybe<Scalars["Bool"]["output"]>;
    _fulltext?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
    _id?: Maybe<Scalars["String"]["output"]>;
    _link?: Maybe<QueryRef>;
    _metadata?: Maybe<IContentMetadata>;
    _modified?: Maybe<Scalars["Date"]["output"]>;
    _score?: Maybe<Scalars["Float"]["output"]>;
    productsofView?: Maybe<Scalars["Int"]["output"]>;
  };

export type PDPCarouselElement_fulltextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type PDPCarouselElement_linkArgs = {
  type?: InputMaybe<LinkTypes>;
};

export type PDPCarouselElementAutocomplete = {
  __typename?: "PDPCarouselElementAutocomplete";
  Heading?: Maybe<RichTextAutocomplete>;
  VisibleElements?: Maybe<ContentReferenceAutocomplete>;
  _metadata?: Maybe<IContentMetadataAutocomplete>;
};

export type PDPCarouselElementFacet = {
  __typename?: "PDPCarouselElementFacet";
  Heading?: Maybe<RichTextFacet>;
  VisibleElements?: Maybe<ContentReferenceFacet>;
  _metadata?: Maybe<IContentMetadataFacet>;
};

export type PDPCarouselElementOrderByInput = {
  Heading?: InputMaybe<RichTextOrderByInput>;
  VisibleElements?: InputMaybe<ContentReferenceOrderByInput>;
  _metadata?: InputMaybe<IContentMetadataOrderByInput>;
  _minimumScore?: InputMaybe<Scalars["Float"]["input"]>;
  _modified?: InputMaybe<OrderBy>;
  _ranking?: InputMaybe<Ranking>;
  /** The value needs to be a positive value, but cannot exceed the maximum value of an integer. In case it is exceeded, the maximum of an integer is used. In case of a negative value, semantic search will be disabled. */
  _semanticWeight?: InputMaybe<Scalars["Float"]["input"]>;
};

export type PDPCarouselElementOutput = {
  __typename?: "PDPCarouselElementOutput";
  autocomplete?: Maybe<PDPCarouselElementAutocomplete>;
  cursor?: Maybe<Scalars["String"]["output"]>;
  facets?: Maybe<PDPCarouselElementFacet>;
  item?: Maybe<PDPCarouselElement>;
  items?: Maybe<Array<Maybe<PDPCarouselElement>>>;
  total?: Maybe<Scalars["Int"]["output"]>;
};

export type PDPCarouselElementOutputtotalArgs = {
  all?: InputMaybe<Scalars["Boolean"]["input"]>;
};

export type PDPCarouselElementWhereInput = {
  Heading?: InputMaybe<RichTextWhereInput>;
  VisibleElements?: InputMaybe<ContentReferenceWhereInput>;
  _and?: InputMaybe<Array<InputMaybe<PDPCarouselElementWhereInput>>>;
  _fulltext?: InputMaybe<SearchableStringFilterInput>;
  _metadata?: InputMaybe<IContentMetadataWhereInput>;
  _modified?: InputMaybe<DateFilterInput>;
  _not?: InputMaybe<Array<InputMaybe<PDPCarouselElementWhereInput>>>;
  _or?: InputMaybe<Array<InputMaybe<PDPCarouselElementWhereInput>>>;
};

export type PDPGalleryElement = IData &
  _IComponent &
  _IContent & {
    __typename?: "PDPGalleryElement";
    Images?: Maybe<ContentReference>;
    ThumbnailLayout?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
    /** @deprecated Use `_link` field instead */
    _children?: Maybe<QueryRef>;
    _deleted?: Maybe<Scalars["Bool"]["output"]>;
    _fulltext?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
    _id?: Maybe<Scalars["String"]["output"]>;
    _link?: Maybe<QueryRef>;
    _metadata?: Maybe<IContentMetadata>;
    _modified?: Maybe<Scalars["Date"]["output"]>;
    _score?: Maybe<Scalars["Float"]["output"]>;
    showZoom?: Maybe<Scalars["Boolean"]["output"]>;
  };

export type PDPGalleryElement_fulltextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type PDPGalleryElement_linkArgs = {
  type?: InputMaybe<LinkTypes>;
};

export type PDPGalleryElementAutocomplete = {
  __typename?: "PDPGalleryElementAutocomplete";
  Images?: Maybe<ContentReferenceAutocomplete>;
  _metadata?: Maybe<IContentMetadataAutocomplete>;
};

export type PDPGalleryElementFacet = {
  __typename?: "PDPGalleryElementFacet";
  Images?: Maybe<ContentReferenceFacet>;
  _metadata?: Maybe<IContentMetadataFacet>;
};

export type PDPGalleryElementOrderByInput = {
  Images?: InputMaybe<ContentReferenceOrderByInput>;
  _metadata?: InputMaybe<IContentMetadataOrderByInput>;
  _minimumScore?: InputMaybe<Scalars["Float"]["input"]>;
  _modified?: InputMaybe<OrderBy>;
  _ranking?: InputMaybe<Ranking>;
  /** The value needs to be a positive value, but cannot exceed the maximum value of an integer. In case it is exceeded, the maximum of an integer is used. In case of a negative value, semantic search will be disabled. */
  _semanticWeight?: InputMaybe<Scalars["Float"]["input"]>;
};

export type PDPGalleryElementOutput = {
  __typename?: "PDPGalleryElementOutput";
  autocomplete?: Maybe<PDPGalleryElementAutocomplete>;
  cursor?: Maybe<Scalars["String"]["output"]>;
  facets?: Maybe<PDPGalleryElementFacet>;
  item?: Maybe<PDPGalleryElement>;
  items?: Maybe<Array<Maybe<PDPGalleryElement>>>;
  total?: Maybe<Scalars["Int"]["output"]>;
};

export type PDPGalleryElementOutputtotalArgs = {
  all?: InputMaybe<Scalars["Boolean"]["input"]>;
};

export type PDPGalleryElementWhereInput = {
  Images?: InputMaybe<ContentReferenceWhereInput>;
  _and?: InputMaybe<Array<InputMaybe<PDPGalleryElementWhereInput>>>;
  _fulltext?: InputMaybe<SearchableStringFilterInput>;
  _metadata?: InputMaybe<IContentMetadataWhereInput>;
  _modified?: InputMaybe<DateFilterInput>;
  _not?: InputMaybe<Array<InputMaybe<PDPGalleryElementWhereInput>>>;
  _or?: InputMaybe<Array<InputMaybe<PDPGalleryElementWhereInput>>>;
};

export type PDPHeroElement = IData &
  _IComponent &
  _IContent & {
    __typename?: "PDPHeroElement";
    Buttons?: Maybe<ContentReference>;
    MarketingContents?: Maybe<ContentReference>;
    /** @deprecated Use `_link` field instead */
    _children?: Maybe<QueryRef>;
    _deleted?: Maybe<Scalars["Bool"]["output"]>;
    _fulltext?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
    _id?: Maybe<Scalars["String"]["output"]>;
    _link?: Maybe<QueryRef>;
    _metadata?: Maybe<IContentMetadata>;
    _modified?: Maybe<Scalars["Date"]["output"]>;
    _score?: Maybe<Scalars["Float"]["output"]>;
  };

export type PDPHeroElement_fulltextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type PDPHeroElement_linkArgs = {
  type?: InputMaybe<LinkTypes>;
};

export type PDPHeroElementAutocomplete = {
  __typename?: "PDPHeroElementAutocomplete";
  Buttons?: Maybe<ContentReferenceAutocomplete>;
  MarketingContents?: Maybe<ContentReferenceAutocomplete>;
  _metadata?: Maybe<IContentMetadataAutocomplete>;
};

export type PDPHeroElementFacet = {
  __typename?: "PDPHeroElementFacet";
  Buttons?: Maybe<ContentReferenceFacet>;
  MarketingContents?: Maybe<ContentReferenceFacet>;
  _metadata?: Maybe<IContentMetadataFacet>;
};

export type PDPHeroElementOrderByInput = {
  Buttons?: InputMaybe<ContentReferenceOrderByInput>;
  MarketingContents?: InputMaybe<ContentReferenceOrderByInput>;
  _metadata?: InputMaybe<IContentMetadataOrderByInput>;
  _minimumScore?: InputMaybe<Scalars["Float"]["input"]>;
  _modified?: InputMaybe<OrderBy>;
  _ranking?: InputMaybe<Ranking>;
  /** The value needs to be a positive value, but cannot exceed the maximum value of an integer. In case it is exceeded, the maximum of an integer is used. In case of a negative value, semantic search will be disabled. */
  _semanticWeight?: InputMaybe<Scalars["Float"]["input"]>;
};

export type PDPHeroElementOutput = {
  __typename?: "PDPHeroElementOutput";
  autocomplete?: Maybe<PDPHeroElementAutocomplete>;
  cursor?: Maybe<Scalars["String"]["output"]>;
  facets?: Maybe<PDPHeroElementFacet>;
  item?: Maybe<PDPHeroElement>;
  items?: Maybe<Array<Maybe<PDPHeroElement>>>;
  total?: Maybe<Scalars["Int"]["output"]>;
};

export type PDPHeroElementOutputtotalArgs = {
  all?: InputMaybe<Scalars["Boolean"]["input"]>;
};

export type PDPHeroElementWhereInput = {
  Buttons?: InputMaybe<ContentReferenceWhereInput>;
  MarketingContents?: InputMaybe<ContentReferenceWhereInput>;
  _and?: InputMaybe<Array<InputMaybe<PDPHeroElementWhereInput>>>;
  _fulltext?: InputMaybe<SearchableStringFilterInput>;
  _metadata?: InputMaybe<IContentMetadataWhereInput>;
  _modified?: InputMaybe<DateFilterInput>;
  _not?: InputMaybe<Array<InputMaybe<PDPHeroElementWhereInput>>>;
  _or?: InputMaybe<Array<InputMaybe<PDPHeroElementWhereInput>>>;
};

export type PDPSpecificationsElement = IData &
  _IComponent &
  _IContent & {
    __typename?: "PDPSpecificationsElement";
    /** @deprecated Use `_link` field instead */
    _children?: Maybe<QueryRef>;
    _deleted?: Maybe<Scalars["Bool"]["output"]>;
    _fulltext?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
    _id?: Maybe<Scalars["String"]["output"]>;
    _link?: Maybe<QueryRef>;
    _metadata?: Maybe<IContentMetadata>;
    _modified?: Maybe<Scalars["Date"]["output"]>;
    _score?: Maybe<Scalars["Float"]["output"]>;
  };

export type PDPSpecificationsElement_fulltextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type PDPSpecificationsElement_linkArgs = {
  type?: InputMaybe<LinkTypes>;
};

export type PDPSpecificationsElementAutocomplete = {
  __typename?: "PDPSpecificationsElementAutocomplete";
  _metadata?: Maybe<IContentMetadataAutocomplete>;
};

export type PDPSpecificationsElementFacet = {
  __typename?: "PDPSpecificationsElementFacet";
  _metadata?: Maybe<IContentMetadataFacet>;
};

export type PDPSpecificationsElementOrderByInput = {
  _metadata?: InputMaybe<IContentMetadataOrderByInput>;
  _minimumScore?: InputMaybe<Scalars["Float"]["input"]>;
  _modified?: InputMaybe<OrderBy>;
  _ranking?: InputMaybe<Ranking>;
  /** The value needs to be a positive value, but cannot exceed the maximum value of an integer. In case it is exceeded, the maximum of an integer is used. In case of a negative value, semantic search will be disabled. */
  _semanticWeight?: InputMaybe<Scalars["Float"]["input"]>;
};

export type PDPSpecificationsElementOutput = {
  __typename?: "PDPSpecificationsElementOutput";
  autocomplete?: Maybe<PDPSpecificationsElementAutocomplete>;
  cursor?: Maybe<Scalars["String"]["output"]>;
  facets?: Maybe<PDPSpecificationsElementFacet>;
  item?: Maybe<PDPSpecificationsElement>;
  items?: Maybe<Array<Maybe<PDPSpecificationsElement>>>;
  total?: Maybe<Scalars["Int"]["output"]>;
};

export type PDPSpecificationsElementOutputtotalArgs = {
  all?: InputMaybe<Scalars["Boolean"]["input"]>;
};

export type PDPSpecificationsElementWhereInput = {
  _and?: InputMaybe<Array<InputMaybe<PDPSpecificationsElementWhereInput>>>;
  _fulltext?: InputMaybe<SearchableStringFilterInput>;
  _metadata?: InputMaybe<IContentMetadataWhereInput>;
  _modified?: InputMaybe<DateFilterInput>;
  _not?: InputMaybe<Array<InputMaybe<PDPSpecificationsElementWhereInput>>>;
  _or?: InputMaybe<Array<InputMaybe<PDPSpecificationsElementWhereInput>>>;
};

export type PageSeoSettings = IData &
  _IComponent &
  _IContent & {
    __typename?: "PageSeoSettings";
    MetaDescription?: Maybe<Scalars["String"]["output"]>;
    MetaKeywords?: Maybe<Scalars["String"]["output"]>;
    MetaTitle?: Maybe<Scalars["String"]["output"]>;
    ThumbnailImage?: Maybe<ContentReference>;
    /** @deprecated Use `_link` field instead */
    _children?: Maybe<QueryRef>;
    _deleted?: Maybe<Scalars["Bool"]["output"]>;
    _fulltext?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
    _id?: Maybe<Scalars["String"]["output"]>;
    _link?: Maybe<QueryRef>;
    _metadata?: Maybe<IContentMetadata>;
    _modified?: Maybe<Scalars["Date"]["output"]>;
    _score?: Maybe<Scalars["Float"]["output"]>;
  };

export type PageSeoSettings_fulltextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type PageSeoSettings_linkArgs = {
  type?: InputMaybe<LinkTypes>;
};

export type PageSeoSettingsAutocomplete = {
  __typename?: "PageSeoSettingsAutocomplete";
  ThumbnailImage?: Maybe<ContentReferenceAutocomplete>;
  _metadata?: Maybe<IContentMetadataAutocomplete>;
};

export type PageSeoSettingsFacet = {
  __typename?: "PageSeoSettingsFacet";
  ThumbnailImage?: Maybe<ContentReferenceFacet>;
  _metadata?: Maybe<IContentMetadataFacet>;
};

export type PageSeoSettingsOrderByInput = {
  ThumbnailImage?: InputMaybe<ContentReferenceOrderByInput>;
  _metadata?: InputMaybe<IContentMetadataOrderByInput>;
  _minimumScore?: InputMaybe<Scalars["Float"]["input"]>;
  _modified?: InputMaybe<OrderBy>;
  _ranking?: InputMaybe<Ranking>;
  /** The value needs to be a positive value, but cannot exceed the maximum value of an integer. In case it is exceeded, the maximum of an integer is used. In case of a negative value, semantic search will be disabled. */
  _semanticWeight?: InputMaybe<Scalars["Float"]["input"]>;
};

export type PageSeoSettingsOutput = {
  __typename?: "PageSeoSettingsOutput";
  autocomplete?: Maybe<PageSeoSettingsAutocomplete>;
  cursor?: Maybe<Scalars["String"]["output"]>;
  facets?: Maybe<PageSeoSettingsFacet>;
  item?: Maybe<PageSeoSettings>;
  items?: Maybe<Array<Maybe<PageSeoSettings>>>;
  total?: Maybe<Scalars["Int"]["output"]>;
};

export type PageSeoSettingsOutputtotalArgs = {
  all?: InputMaybe<Scalars["Boolean"]["input"]>;
};

export type PageSeoSettingsProperty = {
  __typename?: "PageSeoSettingsProperty";
  MetaDescription?: Maybe<Scalars["String"]["output"]>;
  MetaKeywords?: Maybe<Scalars["String"]["output"]>;
  MetaTitle?: Maybe<Scalars["String"]["output"]>;
  ThumbnailImage?: Maybe<ContentReference>;
};

export type PageSeoSettingsPropertyAutocomplete = {
  __typename?: "PageSeoSettingsPropertyAutocomplete";
  ThumbnailImage?: Maybe<ContentReferenceAutocomplete>;
};

export type PageSeoSettingsPropertyFacet = {
  __typename?: "PageSeoSettingsPropertyFacet";
  ThumbnailImage?: Maybe<ContentReferenceFacet>;
};

export type PageSeoSettingsPropertyOrderByInput = {
  ThumbnailImage?: InputMaybe<ContentReferenceOrderByInput>;
};

export type PageSeoSettingsPropertyWhereInput = {
  ThumbnailImage?: InputMaybe<ContentReferenceWhereInput>;
};

export type PageSeoSettingsWhereInput = {
  ThumbnailImage?: InputMaybe<ContentReferenceWhereInput>;
  _and?: InputMaybe<Array<InputMaybe<PageSeoSettingsWhereInput>>>;
  _fulltext?: InputMaybe<SearchableStringFilterInput>;
  _metadata?: InputMaybe<IContentMetadataWhereInput>;
  _modified?: InputMaybe<DateFilterInput>;
  _not?: InputMaybe<Array<InputMaybe<PageSeoSettingsWhereInput>>>;
  _or?: InputMaybe<Array<InputMaybe<PageSeoSettingsWhereInput>>>;
};

export type ParagraphElement = IData &
  _IComponent &
  _IContent & {
    __typename?: "ParagraphElement";
    /** @deprecated Use `_link` field instead */
    _children?: Maybe<QueryRef>;
    _deleted?: Maybe<Scalars["Bool"]["output"]>;
    _fulltext?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
    _id?: Maybe<Scalars["String"]["output"]>;
    _link?: Maybe<QueryRef>;
    _metadata?: Maybe<IContentMetadata>;
    _modified?: Maybe<Scalars["Date"]["output"]>;
    _score?: Maybe<Scalars["Float"]["output"]>;
    text?: Maybe<SearchableRichText>;
  };

export type ParagraphElement_fulltextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type ParagraphElement_linkArgs = {
  type?: InputMaybe<LinkTypes>;
};

export type ParagraphElementAutocomplete = {
  __typename?: "ParagraphElementAutocomplete";
  _metadata?: Maybe<IContentMetadataAutocomplete>;
};

export type ParagraphElementFacet = {
  __typename?: "ParagraphElementFacet";
  _metadata?: Maybe<IContentMetadataFacet>;
  text?: Maybe<SearchableRichTextFacet>;
};

export type ParagraphElementOrderByInput = {
  _metadata?: InputMaybe<IContentMetadataOrderByInput>;
  _minimumScore?: InputMaybe<Scalars["Float"]["input"]>;
  _modified?: InputMaybe<OrderBy>;
  _ranking?: InputMaybe<Ranking>;
  /** The value needs to be a positive value, but cannot exceed the maximum value of an integer. In case it is exceeded, the maximum of an integer is used. In case of a negative value, semantic search will be disabled. */
  _semanticWeight?: InputMaybe<Scalars["Float"]["input"]>;
  text?: InputMaybe<SearchableRichTextOrderByInput>;
};

export type ParagraphElementOutput = {
  __typename?: "ParagraphElementOutput";
  autocomplete?: Maybe<ParagraphElementAutocomplete>;
  cursor?: Maybe<Scalars["String"]["output"]>;
  facets?: Maybe<ParagraphElementFacet>;
  item?: Maybe<ParagraphElement>;
  items?: Maybe<Array<Maybe<ParagraphElement>>>;
  total?: Maybe<Scalars["Int"]["output"]>;
};

export type ParagraphElementOutputtotalArgs = {
  all?: InputMaybe<Scalars["Boolean"]["input"]>;
};

export type ParagraphElementWhereInput = {
  _and?: InputMaybe<Array<InputMaybe<ParagraphElementWhereInput>>>;
  _fulltext?: InputMaybe<SearchableStringFilterInput>;
  _metadata?: InputMaybe<IContentMetadataWhereInput>;
  _modified?: InputMaybe<DateFilterInput>;
  _not?: InputMaybe<Array<InputMaybe<ParagraphElementWhereInput>>>;
  _or?: InputMaybe<Array<InputMaybe<ParagraphElementWhereInput>>>;
  text?: InputMaybe<SearchableRichTextWhereInput>;
};

export type ProductCardElement = IData &
  _IComponent &
  _IContent & {
    __typename?: "ProductCardElement";
    CanBuy?: Maybe<Scalars["Boolean"]["output"]>;
    Image?: Maybe<ContentReference>;
    InventoryStatus?: Maybe<Scalars["String"]["output"]>;
    ProductName?: Maybe<Scalars["String"]["output"]>;
    ShortDescription?: Maybe<RichText>;
    /** @deprecated Use `_link` field instead */
    _children?: Maybe<QueryRef>;
    _deleted?: Maybe<Scalars["Bool"]["output"]>;
    _fulltext?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
    _id?: Maybe<Scalars["String"]["output"]>;
    _link?: Maybe<QueryRef>;
    _metadata?: Maybe<IContentMetadata>;
    _modified?: Maybe<Scalars["Date"]["output"]>;
    _score?: Maybe<Scalars["Float"]["output"]>;
    inventory?: Maybe<Scalars["Int"]["output"]>;
  };

export type ProductCardElementInventoryStatusArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type ProductCardElement_fulltextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type ProductCardElement_linkArgs = {
  type?: InputMaybe<LinkTypes>;
};

export type ProductCardElementAutocomplete = {
  __typename?: "ProductCardElementAutocomplete";
  Image?: Maybe<ContentReferenceAutocomplete>;
  ShortDescription?: Maybe<RichTextAutocomplete>;
  _metadata?: Maybe<IContentMetadataAutocomplete>;
};

export type ProductCardElementFacet = {
  __typename?: "ProductCardElementFacet";
  Image?: Maybe<ContentReferenceFacet>;
  InventoryStatus?: Maybe<Array<Maybe<StringFacet>>>;
  ShortDescription?: Maybe<RichTextFacet>;
  _metadata?: Maybe<IContentMetadataFacet>;
};

export type ProductCardElementFacetInventoryStatusArgs = {
  filters?: InputMaybe<Array<Scalars["String"]["input"]>>;
  limit?: Scalars["Int"]["input"];
  orderBy?: InputMaybe<OrderBy>;
  orderType?: InputMaybe<OrderByFacetType>;
};

export type ProductCardElementOrderByInput = {
  Image?: InputMaybe<ContentReferenceOrderByInput>;
  InventoryStatus?: InputMaybe<OrderBy>;
  ShortDescription?: InputMaybe<RichTextOrderByInput>;
  _metadata?: InputMaybe<IContentMetadataOrderByInput>;
  _minimumScore?: InputMaybe<Scalars["Float"]["input"]>;
  _modified?: InputMaybe<OrderBy>;
  _ranking?: InputMaybe<Ranking>;
  /** The value needs to be a positive value, but cannot exceed the maximum value of an integer. In case it is exceeded, the maximum of an integer is used. In case of a negative value, semantic search will be disabled. */
  _semanticWeight?: InputMaybe<Scalars["Float"]["input"]>;
};

export type ProductCardElementOutput = {
  __typename?: "ProductCardElementOutput";
  autocomplete?: Maybe<ProductCardElementAutocomplete>;
  cursor?: Maybe<Scalars["String"]["output"]>;
  facets?: Maybe<ProductCardElementFacet>;
  item?: Maybe<ProductCardElement>;
  items?: Maybe<Array<Maybe<ProductCardElement>>>;
  total?: Maybe<Scalars["Int"]["output"]>;
};

export type ProductCardElementOutputtotalArgs = {
  all?: InputMaybe<Scalars["Boolean"]["input"]>;
};

export type ProductCardElementWhereInput = {
  Image?: InputMaybe<ContentReferenceWhereInput>;
  InventoryStatus?: InputMaybe<SearchableStringFilterInput>;
  ShortDescription?: InputMaybe<RichTextWhereInput>;
  _and?: InputMaybe<Array<InputMaybe<ProductCardElementWhereInput>>>;
  _fulltext?: InputMaybe<SearchableStringFilterInput>;
  _metadata?: InputMaybe<IContentMetadataWhereInput>;
  _modified?: InputMaybe<DateFilterInput>;
  _not?: InputMaybe<Array<InputMaybe<ProductCardElementWhereInput>>>;
  _or?: InputMaybe<Array<InputMaybe<ProductCardElementWhereInput>>>;
};

export type ProductCardListElement = IData &
  _IComponent &
  _IContent & {
    __typename?: "ProductCardListElement";
    CategoryID?: Maybe<Scalars["String"]["output"]>;
    DefaultView?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
    EnableFilter?: Maybe<Scalars["Boolean"]["output"]>;
    EnableProductCount?: Maybe<Scalars["Boolean"]["output"]>;
    EnableSorting?: Maybe<Scalars["Boolean"]["output"]>;
    PagingSize?: Maybe<Scalars["Int"]["output"]>;
    VisibleElements?: Maybe<ContentReference>;
    /** @deprecated Use `_link` field instead */
    _children?: Maybe<QueryRef>;
    _deleted?: Maybe<Scalars["Bool"]["output"]>;
    _fulltext?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
    _id?: Maybe<Scalars["String"]["output"]>;
    _link?: Maybe<QueryRef>;
    _metadata?: Maybe<IContentMetadata>;
    _modified?: Maybe<Scalars["Date"]["output"]>;
    _score?: Maybe<Scalars["Float"]["output"]>;
  };

export type ProductCardListElement_fulltextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type ProductCardListElement_linkArgs = {
  type?: InputMaybe<LinkTypes>;
};

export type ProductCardListElementAutocomplete = {
  __typename?: "ProductCardListElementAutocomplete";
  VisibleElements?: Maybe<ContentReferenceAutocomplete>;
  _metadata?: Maybe<IContentMetadataAutocomplete>;
};

export type ProductCardListElementFacet = {
  __typename?: "ProductCardListElementFacet";
  VisibleElements?: Maybe<ContentReferenceFacet>;
  _metadata?: Maybe<IContentMetadataFacet>;
};

export type ProductCardListElementOrderByInput = {
  VisibleElements?: InputMaybe<ContentReferenceOrderByInput>;
  _metadata?: InputMaybe<IContentMetadataOrderByInput>;
  _minimumScore?: InputMaybe<Scalars["Float"]["input"]>;
  _modified?: InputMaybe<OrderBy>;
  _ranking?: InputMaybe<Ranking>;
  /** The value needs to be a positive value, but cannot exceed the maximum value of an integer. In case it is exceeded, the maximum of an integer is used. In case of a negative value, semantic search will be disabled. */
  _semanticWeight?: InputMaybe<Scalars["Float"]["input"]>;
};

export type ProductCardListElementOutput = {
  __typename?: "ProductCardListElementOutput";
  autocomplete?: Maybe<ProductCardListElementAutocomplete>;
  cursor?: Maybe<Scalars["String"]["output"]>;
  facets?: Maybe<ProductCardListElementFacet>;
  item?: Maybe<ProductCardListElement>;
  items?: Maybe<Array<Maybe<ProductCardListElement>>>;
  total?: Maybe<Scalars["Int"]["output"]>;
};

export type ProductCardListElementOutputtotalArgs = {
  all?: InputMaybe<Scalars["Boolean"]["input"]>;
};

export type ProductCardListElementWhereInput = {
  VisibleElements?: InputMaybe<ContentReferenceWhereInput>;
  _and?: InputMaybe<Array<InputMaybe<ProductCardListElementWhereInput>>>;
  _fulltext?: InputMaybe<SearchableStringFilterInput>;
  _metadata?: InputMaybe<IContentMetadataWhereInput>;
  _modified?: InputMaybe<DateFilterInput>;
  _not?: InputMaybe<Array<InputMaybe<ProductCardListElementWhereInput>>>;
  _or?: InputMaybe<Array<InputMaybe<ProductCardListElementWhereInput>>>;
};

export type ProductCardListSection = IData &
  _IComponent &
  _IContent & {
    __typename?: "ProductCardListSection";
    CategoryID?: Maybe<Scalars["String"]["output"]>;
    DefaultView?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
    EnableFilter?: Maybe<Scalars["Boolean"]["output"]>;
    EnableProductCount?: Maybe<Scalars["Boolean"]["output"]>;
    EnableSorting?: Maybe<Scalars["Boolean"]["output"]>;
    PagingSize?: Maybe<Scalars["Int"]["output"]>;
    VisibleElements?: Maybe<ContentReference>;
    /** @deprecated Use `_link` field instead */
    _children?: Maybe<QueryRef>;
    _deleted?: Maybe<Scalars["Bool"]["output"]>;
    _fulltext?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
    _id?: Maybe<Scalars["String"]["output"]>;
    _link?: Maybe<QueryRef>;
    _metadata?: Maybe<IContentMetadata>;
    _modified?: Maybe<Scalars["Date"]["output"]>;
    _score?: Maybe<Scalars["Float"]["output"]>;
  };

export type ProductCardListSection_fulltextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type ProductCardListSection_linkArgs = {
  type?: InputMaybe<LinkTypes>;
};

export type ProductCardListSectionAutocomplete = {
  __typename?: "ProductCardListSectionAutocomplete";
  VisibleElements?: Maybe<ContentReferenceAutocomplete>;
  _metadata?: Maybe<IContentMetadataAutocomplete>;
};

export type ProductCardListSectionFacet = {
  __typename?: "ProductCardListSectionFacet";
  VisibleElements?: Maybe<ContentReferenceFacet>;
  _metadata?: Maybe<IContentMetadataFacet>;
};

export type ProductCardListSectionOrderByInput = {
  VisibleElements?: InputMaybe<ContentReferenceOrderByInput>;
  _metadata?: InputMaybe<IContentMetadataOrderByInput>;
  _minimumScore?: InputMaybe<Scalars["Float"]["input"]>;
  _modified?: InputMaybe<OrderBy>;
  _ranking?: InputMaybe<Ranking>;
  /** The value needs to be a positive value, but cannot exceed the maximum value of an integer. In case it is exceeded, the maximum of an integer is used. In case of a negative value, semantic search will be disabled. */
  _semanticWeight?: InputMaybe<Scalars["Float"]["input"]>;
};

export type ProductCardListSectionOutput = {
  __typename?: "ProductCardListSectionOutput";
  autocomplete?: Maybe<ProductCardListSectionAutocomplete>;
  cursor?: Maybe<Scalars["String"]["output"]>;
  facets?: Maybe<ProductCardListSectionFacet>;
  item?: Maybe<ProductCardListSection>;
  items?: Maybe<Array<Maybe<ProductCardListSection>>>;
  total?: Maybe<Scalars["Int"]["output"]>;
};

export type ProductCardListSectionOutputtotalArgs = {
  all?: InputMaybe<Scalars["Boolean"]["input"]>;
};

export type ProductCardListSectionProperty = {
  __typename?: "ProductCardListSectionProperty";
  CategoryID?: Maybe<Scalars["String"]["output"]>;
  DefaultView?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
  EnableFilter?: Maybe<Scalars["Boolean"]["output"]>;
  EnableProductCount?: Maybe<Scalars["Boolean"]["output"]>;
  EnableSorting?: Maybe<Scalars["Boolean"]["output"]>;
  PagingSize?: Maybe<Scalars["Int"]["output"]>;
  VisibleElements?: Maybe<ContentReference>;
};

export type ProductCardListSectionPropertyAutocomplete = {
  __typename?: "ProductCardListSectionPropertyAutocomplete";
  VisibleElements?: Maybe<ContentReferenceAutocomplete>;
};

export type ProductCardListSectionPropertyFacet = {
  __typename?: "ProductCardListSectionPropertyFacet";
  VisibleElements?: Maybe<ContentReferenceFacet>;
};

export type ProductCardListSectionPropertyOrderByInput = {
  VisibleElements?: InputMaybe<ContentReferenceOrderByInput>;
};

export type ProductCardListSectionPropertyWhereInput = {
  VisibleElements?: InputMaybe<ContentReferenceWhereInput>;
};

export type ProductCardListSectionWhereInput = {
  VisibleElements?: InputMaybe<ContentReferenceWhereInput>;
  _and?: InputMaybe<Array<InputMaybe<ProductCardListSectionWhereInput>>>;
  _fulltext?: InputMaybe<SearchableStringFilterInput>;
  _metadata?: InputMaybe<IContentMetadataWhereInput>;
  _modified?: InputMaybe<DateFilterInput>;
  _not?: InputMaybe<Array<InputMaybe<ProductCardListSectionWhereInput>>>;
  _or?: InputMaybe<Array<InputMaybe<ProductCardListSectionWhereInput>>>;
};

export type ProductCarouselElement = IData &
  _IComponent &
  _IContent & {
    __typename?: "ProductCarouselElement";
    CarouselSource?: Maybe<Scalars["String"]["output"]>;
    CategoryID?: Maybe<Scalars["String"]["output"]>;
    CategoryKey?: Maybe<Scalars["String"]["output"]>;
    Heading?: Maybe<RichText>;
    PagingSize?: Maybe<Scalars["Int"]["output"]>;
    VisibleElements?: Maybe<ContentReference>;
    /** @deprecated Use `_link` field instead */
    _children?: Maybe<QueryRef>;
    _deleted?: Maybe<Scalars["Bool"]["output"]>;
    _fulltext?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
    _id?: Maybe<Scalars["String"]["output"]>;
    _link?: Maybe<QueryRef>;
    _metadata?: Maybe<IContentMetadata>;
    _modified?: Maybe<Scalars["Date"]["output"]>;
    _score?: Maybe<Scalars["Float"]["output"]>;
    productsofView?: Maybe<Scalars["Int"]["output"]>;
  };

export type ProductCarouselElement_fulltextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type ProductCarouselElement_linkArgs = {
  type?: InputMaybe<LinkTypes>;
};

export type ProductCarouselElementAutocomplete = {
  __typename?: "ProductCarouselElementAutocomplete";
  Heading?: Maybe<RichTextAutocomplete>;
  VisibleElements?: Maybe<ContentReferenceAutocomplete>;
  _metadata?: Maybe<IContentMetadataAutocomplete>;
};

export type ProductCarouselElementFacet = {
  __typename?: "ProductCarouselElementFacet";
  Heading?: Maybe<RichTextFacet>;
  VisibleElements?: Maybe<ContentReferenceFacet>;
  _metadata?: Maybe<IContentMetadataFacet>;
};

export type ProductCarouselElementOrderByInput = {
  Heading?: InputMaybe<RichTextOrderByInput>;
  VisibleElements?: InputMaybe<ContentReferenceOrderByInput>;
  _metadata?: InputMaybe<IContentMetadataOrderByInput>;
  _minimumScore?: InputMaybe<Scalars["Float"]["input"]>;
  _modified?: InputMaybe<OrderBy>;
  _ranking?: InputMaybe<Ranking>;
  /** The value needs to be a positive value, but cannot exceed the maximum value of an integer. In case it is exceeded, the maximum of an integer is used. In case of a negative value, semantic search will be disabled. */
  _semanticWeight?: InputMaybe<Scalars["Float"]["input"]>;
};

export type ProductCarouselElementOutput = {
  __typename?: "ProductCarouselElementOutput";
  autocomplete?: Maybe<ProductCarouselElementAutocomplete>;
  cursor?: Maybe<Scalars["String"]["output"]>;
  facets?: Maybe<ProductCarouselElementFacet>;
  item?: Maybe<ProductCarouselElement>;
  items?: Maybe<Array<Maybe<ProductCarouselElement>>>;
  total?: Maybe<Scalars["Int"]["output"]>;
};

export type ProductCarouselElementOutputtotalArgs = {
  all?: InputMaybe<Scalars["Boolean"]["input"]>;
};

export type ProductCarouselElementWhereInput = {
  Heading?: InputMaybe<RichTextWhereInput>;
  VisibleElements?: InputMaybe<ContentReferenceWhereInput>;
  _and?: InputMaybe<Array<InputMaybe<ProductCarouselElementWhereInput>>>;
  _fulltext?: InputMaybe<SearchableStringFilterInput>;
  _metadata?: InputMaybe<IContentMetadataWhereInput>;
  _modified?: InputMaybe<DateFilterInput>;
  _not?: InputMaybe<Array<InputMaybe<ProductCarouselElementWhereInput>>>;
  _or?: InputMaybe<Array<InputMaybe<ProductCarouselElementWhereInput>>>;
};

export type ProductCarouselSection = IData &
  _IComponent &
  _IContent & {
    __typename?: "ProductCarouselSection";
    CarouselSource?: Maybe<Scalars["String"]["output"]>;
    CategoryID?: Maybe<Scalars["String"]["output"]>;
    CategoryKey?: Maybe<Scalars["String"]["output"]>;
    Heading?: Maybe<RichText>;
    PagingSize?: Maybe<Scalars["Int"]["output"]>;
    VisibleElements?: Maybe<ContentReference>;
    /** @deprecated Use `_link` field instead */
    _children?: Maybe<QueryRef>;
    _deleted?: Maybe<Scalars["Bool"]["output"]>;
    _fulltext?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
    _id?: Maybe<Scalars["String"]["output"]>;
    _link?: Maybe<QueryRef>;
    _metadata?: Maybe<IContentMetadata>;
    _modified?: Maybe<Scalars["Date"]["output"]>;
    _score?: Maybe<Scalars["Float"]["output"]>;
    productsofView?: Maybe<Scalars["Int"]["output"]>;
  };

export type ProductCarouselSection_fulltextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type ProductCarouselSection_linkArgs = {
  type?: InputMaybe<LinkTypes>;
};

export type ProductCarouselSectionAutocomplete = {
  __typename?: "ProductCarouselSectionAutocomplete";
  Heading?: Maybe<RichTextAutocomplete>;
  VisibleElements?: Maybe<ContentReferenceAutocomplete>;
  _metadata?: Maybe<IContentMetadataAutocomplete>;
};

export type ProductCarouselSectionFacet = {
  __typename?: "ProductCarouselSectionFacet";
  Heading?: Maybe<RichTextFacet>;
  VisibleElements?: Maybe<ContentReferenceFacet>;
  _metadata?: Maybe<IContentMetadataFacet>;
};

export type ProductCarouselSectionOrderByInput = {
  Heading?: InputMaybe<RichTextOrderByInput>;
  VisibleElements?: InputMaybe<ContentReferenceOrderByInput>;
  _metadata?: InputMaybe<IContentMetadataOrderByInput>;
  _minimumScore?: InputMaybe<Scalars["Float"]["input"]>;
  _modified?: InputMaybe<OrderBy>;
  _ranking?: InputMaybe<Ranking>;
  /** The value needs to be a positive value, but cannot exceed the maximum value of an integer. In case it is exceeded, the maximum of an integer is used. In case of a negative value, semantic search will be disabled. */
  _semanticWeight?: InputMaybe<Scalars["Float"]["input"]>;
};

export type ProductCarouselSectionOutput = {
  __typename?: "ProductCarouselSectionOutput";
  autocomplete?: Maybe<ProductCarouselSectionAutocomplete>;
  cursor?: Maybe<Scalars["String"]["output"]>;
  facets?: Maybe<ProductCarouselSectionFacet>;
  item?: Maybe<ProductCarouselSection>;
  items?: Maybe<Array<Maybe<ProductCarouselSection>>>;
  total?: Maybe<Scalars["Int"]["output"]>;
};

export type ProductCarouselSectionOutputtotalArgs = {
  all?: InputMaybe<Scalars["Boolean"]["input"]>;
};

export type ProductCarouselSectionWhereInput = {
  Heading?: InputMaybe<RichTextWhereInput>;
  VisibleElements?: InputMaybe<ContentReferenceWhereInput>;
  _and?: InputMaybe<Array<InputMaybe<ProductCarouselSectionWhereInput>>>;
  _fulltext?: InputMaybe<SearchableStringFilterInput>;
  _metadata?: InputMaybe<IContentMetadataWhereInput>;
  _modified?: InputMaybe<DateFilterInput>;
  _not?: InputMaybe<Array<InputMaybe<ProductCarouselSectionWhereInput>>>;
  _or?: InputMaybe<Array<InputMaybe<ProductCarouselSectionWhereInput>>>;
};

export type ProductDetail = IData &
  _IContent &
  _IPage & {
    __typename?: "ProductDetail";
    CrossSell?: Maybe<Array<Maybe<_IContent>>>;
    Images?: Maybe<_IContent>;
    MarketingContent?: Maybe<Array<Maybe<_IContent>>>;
    ProductDocuments?: Maybe<Array<Maybe<_IContent>>>;
    ProductFeatures?: Maybe<Array<Maybe<_IContent>>>;
    ProductHero?: Maybe<Array<Maybe<_IContent>>>;
    ProductTechSpecs?: Maybe<Array<Maybe<_IContent>>>;
    ProductVariants?: Maybe<Array<Maybe<_IContent>>>;
    SeoSettings?: Maybe<PageSeoSettingsProperty>;
    /** @deprecated Use `_link` field instead */
    _children?: Maybe<QueryRef>;
    _deleted?: Maybe<Scalars["Bool"]["output"]>;
    _fulltext?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
    _id?: Maybe<Scalars["String"]["output"]>;
    _link?: Maybe<QueryRef>;
    _metadata?: Maybe<IContentMetadata>;
    _modified?: Maybe<Scalars["Date"]["output"]>;
    _score?: Maybe<Scalars["Float"]["output"]>;
  };

export type ProductDetail_fulltextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type ProductDetail_linkArgs = {
  type?: InputMaybe<LinkTypes>;
};

export type ProductDetailAutocomplete = {
  __typename?: "ProductDetailAutocomplete";
  CrossSell?: Maybe<_IContentAutocomplete>;
  Images?: Maybe<_IContentAutocomplete>;
  MarketingContent?: Maybe<_IContentAutocomplete>;
  ProductDocuments?: Maybe<_IContentAutocomplete>;
  ProductFeatures?: Maybe<_IContentAutocomplete>;
  ProductHero?: Maybe<_IContentAutocomplete>;
  ProductTechSpecs?: Maybe<_IContentAutocomplete>;
  ProductVariants?: Maybe<_IContentAutocomplete>;
  SeoSettings?: Maybe<PageSeoSettingsPropertyAutocomplete>;
  _metadata?: Maybe<IContentMetadataAutocomplete>;
};

export type ProductDetailExperience = IData &
  _IContent &
  _IExperience &
  _IPage & {
    __typename?: "ProductDetailExperience";
    SEOsettings?: Maybe<_IContent>;
    /** @deprecated Use `_link` field instead */
    _children?: Maybe<QueryRef>;
    _deleted?: Maybe<Scalars["Bool"]["output"]>;
    _fulltext?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
    _id?: Maybe<Scalars["String"]["output"]>;
    _link?: Maybe<QueryRef>;
    _metadata?: Maybe<IContentMetadata>;
    _modified?: Maybe<Scalars["Date"]["output"]>;
    _score?: Maybe<Scalars["Float"]["output"]>;
    composition?: Maybe<CompositionStructureNode>;
  };

export type ProductDetailExperience_fulltextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type ProductDetailExperience_linkArgs = {
  type?: InputMaybe<LinkTypes>;
};

export type ProductDetailExperienceAutocomplete = {
  __typename?: "ProductDetailExperienceAutocomplete";
  SEOsettings?: Maybe<_IContentAutocomplete>;
  _metadata?: Maybe<IContentMetadataAutocomplete>;
  composition?: Maybe<CompositionStructureNodeAutocomplete>;
};

export type ProductDetailExperienceFacet = {
  __typename?: "ProductDetailExperienceFacet";
  SEOsettings?: Maybe<_IContentFacet>;
  _metadata?: Maybe<IContentMetadataFacet>;
  composition?: Maybe<CompositionStructureNodeFacet>;
};

export type ProductDetailExperienceOrderByInput = {
  SEOsettings?: InputMaybe<_IContentOrderByInput>;
  _metadata?: InputMaybe<IContentMetadataOrderByInput>;
  _minimumScore?: InputMaybe<Scalars["Float"]["input"]>;
  _modified?: InputMaybe<OrderBy>;
  _ranking?: InputMaybe<Ranking>;
  /** The value needs to be a positive value, but cannot exceed the maximum value of an integer. In case it is exceeded, the maximum of an integer is used. In case of a negative value, semantic search will be disabled. */
  _semanticWeight?: InputMaybe<Scalars["Float"]["input"]>;
  composition?: InputMaybe<CompositionStructureNodeOrderByInput>;
};

export type ProductDetailExperienceOutput = {
  __typename?: "ProductDetailExperienceOutput";
  autocomplete?: Maybe<ProductDetailExperienceAutocomplete>;
  cursor?: Maybe<Scalars["String"]["output"]>;
  facets?: Maybe<ProductDetailExperienceFacet>;
  item?: Maybe<ProductDetailExperience>;
  items?: Maybe<Array<Maybe<ProductDetailExperience>>>;
  total?: Maybe<Scalars["Int"]["output"]>;
};

export type ProductDetailExperienceOutputtotalArgs = {
  all?: InputMaybe<Scalars["Boolean"]["input"]>;
};

export type ProductDetailExperienceWhereInput = {
  SEOsettings?: InputMaybe<_IContentWhereInput>;
  _and?: InputMaybe<Array<InputMaybe<ProductDetailExperienceWhereInput>>>;
  _fulltext?: InputMaybe<SearchableStringFilterInput>;
  _metadata?: InputMaybe<IContentMetadataWhereInput>;
  _modified?: InputMaybe<DateFilterInput>;
  _not?: InputMaybe<Array<InputMaybe<ProductDetailExperienceWhereInput>>>;
  _or?: InputMaybe<Array<InputMaybe<ProductDetailExperienceWhereInput>>>;
  composition?: InputMaybe<CompositionStructureNodeWhereInput>;
};

export type ProductDetailFacet = {
  __typename?: "ProductDetailFacet";
  CrossSell?: Maybe<_IContentFacet>;
  Images?: Maybe<_IContentFacet>;
  MarketingContent?: Maybe<_IContentFacet>;
  ProductDocuments?: Maybe<_IContentFacet>;
  ProductFeatures?: Maybe<_IContentFacet>;
  ProductHero?: Maybe<_IContentFacet>;
  ProductTechSpecs?: Maybe<_IContentFacet>;
  ProductVariants?: Maybe<_IContentFacet>;
  SeoSettings?: Maybe<PageSeoSettingsPropertyFacet>;
  _metadata?: Maybe<IContentMetadataFacet>;
};

export type ProductDetailOrderByInput = {
  CrossSell?: InputMaybe<_IContentOrderByInput>;
  Images?: InputMaybe<_IContentOrderByInput>;
  MarketingContent?: InputMaybe<_IContentOrderByInput>;
  ProductDocuments?: InputMaybe<_IContentOrderByInput>;
  ProductFeatures?: InputMaybe<_IContentOrderByInput>;
  ProductHero?: InputMaybe<_IContentOrderByInput>;
  ProductTechSpecs?: InputMaybe<_IContentOrderByInput>;
  ProductVariants?: InputMaybe<_IContentOrderByInput>;
  SeoSettings?: InputMaybe<PageSeoSettingsPropertyOrderByInput>;
  _metadata?: InputMaybe<IContentMetadataOrderByInput>;
  _minimumScore?: InputMaybe<Scalars["Float"]["input"]>;
  _modified?: InputMaybe<OrderBy>;
  _ranking?: InputMaybe<Ranking>;
  /** The value needs to be a positive value, but cannot exceed the maximum value of an integer. In case it is exceeded, the maximum of an integer is used. In case of a negative value, semantic search will be disabled. */
  _semanticWeight?: InputMaybe<Scalars["Float"]["input"]>;
};

export type ProductDetailOutput = {
  __typename?: "ProductDetailOutput";
  autocomplete?: Maybe<ProductDetailAutocomplete>;
  cursor?: Maybe<Scalars["String"]["output"]>;
  facets?: Maybe<ProductDetailFacet>;
  item?: Maybe<ProductDetail>;
  items?: Maybe<Array<Maybe<ProductDetail>>>;
  total?: Maybe<Scalars["Int"]["output"]>;
};

export type ProductDetailOutputtotalArgs = {
  all?: InputMaybe<Scalars["Boolean"]["input"]>;
};

export type ProductDetailWhereInput = {
  CrossSell?: InputMaybe<_IContentWhereInput>;
  Images?: InputMaybe<_IContentWhereInput>;
  MarketingContent?: InputMaybe<_IContentWhereInput>;
  ProductDocuments?: InputMaybe<_IContentWhereInput>;
  ProductFeatures?: InputMaybe<_IContentWhereInput>;
  ProductHero?: InputMaybe<_IContentWhereInput>;
  ProductTechSpecs?: InputMaybe<_IContentWhereInput>;
  ProductVariants?: InputMaybe<_IContentWhereInput>;
  SeoSettings?: InputMaybe<PageSeoSettingsPropertyWhereInput>;
  _and?: InputMaybe<Array<InputMaybe<ProductDetailWhereInput>>>;
  _fulltext?: InputMaybe<SearchableStringFilterInput>;
  _metadata?: InputMaybe<IContentMetadataWhereInput>;
  _modified?: InputMaybe<DateFilterInput>;
  _not?: InputMaybe<Array<InputMaybe<ProductDetailWhereInput>>>;
  _or?: InputMaybe<Array<InputMaybe<ProductDetailWhereInput>>>;
};

export type ProductList = IData &
  _IComponent &
  _IContent & {
    __typename?: "ProductList";
    EnableFilter?: Maybe<Scalars["Boolean"]["output"]>;
    EnableProductCount?: Maybe<Scalars["Boolean"]["output"]>;
    EnableSorting?: Maybe<Scalars["Boolean"]["output"]>;
    PageSize?: Maybe<Scalars["Int"]["output"]>;
    ProductCountLabel?: Maybe<Scalars["String"]["output"]>;
    ProductItems?: Maybe<ProductCardListSectionProperty>;
    /** @deprecated Use `_link` field instead */
    _children?: Maybe<QueryRef>;
    _deleted?: Maybe<Scalars["Bool"]["output"]>;
    _fulltext?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
    _id?: Maybe<Scalars["String"]["output"]>;
    _link?: Maybe<QueryRef>;
    _metadata?: Maybe<IContentMetadata>;
    _modified?: Maybe<Scalars["Date"]["output"]>;
    _score?: Maybe<Scalars["Float"]["output"]>;
  };

export type ProductList_fulltextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type ProductList_linkArgs = {
  type?: InputMaybe<LinkTypes>;
};

export type ProductListAutocomplete = {
  __typename?: "ProductListAutocomplete";
  ProductItems?: Maybe<ProductCardListSectionPropertyAutocomplete>;
  _metadata?: Maybe<IContentMetadataAutocomplete>;
};

export type ProductListFacet = {
  __typename?: "ProductListFacet";
  ProductItems?: Maybe<ProductCardListSectionPropertyFacet>;
  _metadata?: Maybe<IContentMetadataFacet>;
};

export type ProductListOrderByInput = {
  ProductItems?: InputMaybe<ProductCardListSectionPropertyOrderByInput>;
  _metadata?: InputMaybe<IContentMetadataOrderByInput>;
  _minimumScore?: InputMaybe<Scalars["Float"]["input"]>;
  _modified?: InputMaybe<OrderBy>;
  _ranking?: InputMaybe<Ranking>;
  /** The value needs to be a positive value, but cannot exceed the maximum value of an integer. In case it is exceeded, the maximum of an integer is used. In case of a negative value, semantic search will be disabled. */
  _semanticWeight?: InputMaybe<Scalars["Float"]["input"]>;
};

export type ProductListOutput = {
  __typename?: "ProductListOutput";
  autocomplete?: Maybe<ProductListAutocomplete>;
  cursor?: Maybe<Scalars["String"]["output"]>;
  facets?: Maybe<ProductListFacet>;
  item?: Maybe<ProductList>;
  items?: Maybe<Array<Maybe<ProductList>>>;
  total?: Maybe<Scalars["Int"]["output"]>;
};

export type ProductListOutputtotalArgs = {
  all?: InputMaybe<Scalars["Boolean"]["input"]>;
};

export type ProductListWhereInput = {
  ProductItems?: InputMaybe<ProductCardListSectionPropertyWhereInput>;
  _and?: InputMaybe<Array<InputMaybe<ProductListWhereInput>>>;
  _fulltext?: InputMaybe<SearchableStringFilterInput>;
  _metadata?: InputMaybe<IContentMetadataWhereInput>;
  _modified?: InputMaybe<DateFilterInput>;
  _not?: InputMaybe<Array<InputMaybe<ProductListWhereInput>>>;
  _or?: InputMaybe<Array<InputMaybe<ProductListWhereInput>>>;
};

export type ProductListingEPage = IData &
  _IContent &
  _IExperience &
  _IPage & {
    __typename?: "ProductListingEPage";
    FeaturedProducts?: Maybe<Array<Maybe<_IContent>>>;
    MarketingArea?: Maybe<Array<Maybe<_IContent>>>;
    ProductList?: Maybe<Array<Maybe<_IContent>>>;
    TopArea?: Maybe<Array<Maybe<_IContent>>>;
    /** @deprecated Use `_link` field instead */
    _children?: Maybe<QueryRef>;
    _deleted?: Maybe<Scalars["Bool"]["output"]>;
    _fulltext?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
    _id?: Maybe<Scalars["String"]["output"]>;
    _link?: Maybe<QueryRef>;
    _metadata?: Maybe<IContentMetadata>;
    _modified?: Maybe<Scalars["Date"]["output"]>;
    _score?: Maybe<Scalars["Float"]["output"]>;
    composition?: Maybe<CompositionStructureNode>;
  };

export type ProductListingEPage_fulltextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type ProductListingEPage_linkArgs = {
  type?: InputMaybe<LinkTypes>;
};

export type ProductListingEPageAutocomplete = {
  __typename?: "ProductListingEPageAutocomplete";
  FeaturedProducts?: Maybe<_IContentAutocomplete>;
  MarketingArea?: Maybe<_IContentAutocomplete>;
  ProductList?: Maybe<_IContentAutocomplete>;
  TopArea?: Maybe<_IContentAutocomplete>;
  _metadata?: Maybe<IContentMetadataAutocomplete>;
  composition?: Maybe<CompositionStructureNodeAutocomplete>;
};

export type ProductListingEPageFacet = {
  __typename?: "ProductListingEPageFacet";
  FeaturedProducts?: Maybe<_IContentFacet>;
  MarketingArea?: Maybe<_IContentFacet>;
  ProductList?: Maybe<_IContentFacet>;
  TopArea?: Maybe<_IContentFacet>;
  _metadata?: Maybe<IContentMetadataFacet>;
  composition?: Maybe<CompositionStructureNodeFacet>;
};

export type ProductListingEPageOrderByInput = {
  FeaturedProducts?: InputMaybe<_IContentOrderByInput>;
  MarketingArea?: InputMaybe<_IContentOrderByInput>;
  ProductList?: InputMaybe<_IContentOrderByInput>;
  TopArea?: InputMaybe<_IContentOrderByInput>;
  _metadata?: InputMaybe<IContentMetadataOrderByInput>;
  _minimumScore?: InputMaybe<Scalars["Float"]["input"]>;
  _modified?: InputMaybe<OrderBy>;
  _ranking?: InputMaybe<Ranking>;
  /** The value needs to be a positive value, but cannot exceed the maximum value of an integer. In case it is exceeded, the maximum of an integer is used. In case of a negative value, semantic search will be disabled. */
  _semanticWeight?: InputMaybe<Scalars["Float"]["input"]>;
  composition?: InputMaybe<CompositionStructureNodeOrderByInput>;
};

export type ProductListingEPageOutput = {
  __typename?: "ProductListingEPageOutput";
  autocomplete?: Maybe<ProductListingEPageAutocomplete>;
  cursor?: Maybe<Scalars["String"]["output"]>;
  facets?: Maybe<ProductListingEPageFacet>;
  item?: Maybe<ProductListingEPage>;
  items?: Maybe<Array<Maybe<ProductListingEPage>>>;
  total?: Maybe<Scalars["Int"]["output"]>;
};

export type ProductListingEPageOutputtotalArgs = {
  all?: InputMaybe<Scalars["Boolean"]["input"]>;
};

export type ProductListingEPageWhereInput = {
  FeaturedProducts?: InputMaybe<_IContentWhereInput>;
  MarketingArea?: InputMaybe<_IContentWhereInput>;
  ProductList?: InputMaybe<_IContentWhereInput>;
  TopArea?: InputMaybe<_IContentWhereInput>;
  _and?: InputMaybe<Array<InputMaybe<ProductListingEPageWhereInput>>>;
  _fulltext?: InputMaybe<SearchableStringFilterInput>;
  _metadata?: InputMaybe<IContentMetadataWhereInput>;
  _modified?: InputMaybe<DateFilterInput>;
  _not?: InputMaybe<Array<InputMaybe<ProductListingEPageWhereInput>>>;
  _or?: InputMaybe<Array<InputMaybe<ProductListingEPageWhereInput>>>;
  composition?: InputMaybe<CompositionStructureNodeWhereInput>;
};

export type ProductVisibleElements = IData &
  _IComponent &
  _IContent & {
    __typename?: "ProductVisibleElements";
    ListElements?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
    /** @deprecated Use `_link` field instead */
    _children?: Maybe<QueryRef>;
    _deleted?: Maybe<Scalars["Bool"]["output"]>;
    _fulltext?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
    _id?: Maybe<Scalars["String"]["output"]>;
    _link?: Maybe<QueryRef>;
    _metadata?: Maybe<IContentMetadata>;
    _modified?: Maybe<Scalars["Date"]["output"]>;
    _score?: Maybe<Scalars["Float"]["output"]>;
  };

export type ProductVisibleElements_fulltextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type ProductVisibleElements_linkArgs = {
  type?: InputMaybe<LinkTypes>;
};

export type ProductVisibleElementsAutocomplete = {
  __typename?: "ProductVisibleElementsAutocomplete";
  _metadata?: Maybe<IContentMetadataAutocomplete>;
};

export type ProductVisibleElementsFacet = {
  __typename?: "ProductVisibleElementsFacet";
  _metadata?: Maybe<IContentMetadataFacet>;
};

export type ProductVisibleElementsOrderByInput = {
  _metadata?: InputMaybe<IContentMetadataOrderByInput>;
  _minimumScore?: InputMaybe<Scalars["Float"]["input"]>;
  _modified?: InputMaybe<OrderBy>;
  _ranking?: InputMaybe<Ranking>;
  /** The value needs to be a positive value, but cannot exceed the maximum value of an integer. In case it is exceeded, the maximum of an integer is used. In case of a negative value, semantic search will be disabled. */
  _semanticWeight?: InputMaybe<Scalars["Float"]["input"]>;
};

export type ProductVisibleElementsOutput = {
  __typename?: "ProductVisibleElementsOutput";
  autocomplete?: Maybe<ProductVisibleElementsAutocomplete>;
  cursor?: Maybe<Scalars["String"]["output"]>;
  facets?: Maybe<ProductVisibleElementsFacet>;
  item?: Maybe<ProductVisibleElements>;
  items?: Maybe<Array<Maybe<ProductVisibleElements>>>;
  total?: Maybe<Scalars["Int"]["output"]>;
};

export type ProductVisibleElementsOutputtotalArgs = {
  all?: InputMaybe<Scalars["Boolean"]["input"]>;
};

export type ProductVisibleElementsWhereInput = {
  _and?: InputMaybe<Array<InputMaybe<ProductVisibleElementsWhereInput>>>;
  _fulltext?: InputMaybe<SearchableStringFilterInput>;
  _metadata?: InputMaybe<IContentMetadataWhereInput>;
  _modified?: InputMaybe<DateFilterInput>;
  _not?: InputMaybe<Array<InputMaybe<ProductVisibleElementsWhereInput>>>;
  _or?: InputMaybe<Array<InputMaybe<ProductVisibleElementsWhereInput>>>;
};

export type Query = {
  __typename?: "Query";
  BannerItemElement?: Maybe<BannerItemElementOutput>;
  BlankExperience?: Maybe<BlankExperienceOutput>;
  BlankSection?: Maybe<BlankSectionOutput>;
  ButtonElement?: Maybe<ButtonElementOutput>;
  CTAElement?: Maybe<CTAElementOutput>;
  Company?: Maybe<CompanyOutput>;
  ContainerElement?: Maybe<ContainerElementOutput>;
  ContentTextElement?: Maybe<ContentTextElementOutput>;
  Data?: Maybe<DataOutput>;
  DefaultVideo?: Maybe<DefaultVideoOutput>;
  Dictionary?: Maybe<DictionaryOutput>;
  DictionaryItem?: Maybe<DictionaryItemOutput>;
  ExpandableText?: Maybe<ExpandableTextOutput>;
  FAQsSection?: Maybe<FAQsSectionOutput>;
  GenericMedia?: Maybe<GenericMediaOutput>;
  HeadingElement?: Maybe<HeadingElementOutput>;
  Image?: Maybe<ImageOutput>;
  ImageBackground?: Maybe<ImageBackgroundOutput>;
  ImageItemElement?: Maybe<ImageItemElementOutput>;
  ImageMedia?: Maybe<ImageMediaOutput>;
  ImageTextItemElement?: Maybe<ImageTextItemElementOutput>;
  LandingPage?: Maybe<LandingPageOutput>;
  MegaMenuGroupBlock?: Maybe<MegaMenuGroupBlockOutput>;
  NavigationMenuBlock?: Maybe<NavigationMenuBlockOutput>;
  OfficeLocation?: Maybe<OfficeLocationOutput>;
  PDPCarouselElement?: Maybe<PDPCarouselElementOutput>;
  PDPGalleryElement?: Maybe<PDPGalleryElementOutput>;
  PDPHeroElement?: Maybe<PDPHeroElementOutput>;
  PDPSpecificationsElement?: Maybe<PDPSpecificationsElementOutput>;
  PageSeoSettings?: Maybe<PageSeoSettingsOutput>;
  ParagraphElement?: Maybe<ParagraphElementOutput>;
  ProductCardElement?: Maybe<ProductCardElementOutput>;
  ProductCardListElement?: Maybe<ProductCardListElementOutput>;
  ProductCardListSection?: Maybe<ProductCardListSectionOutput>;
  ProductCarouselElement?: Maybe<ProductCarouselElementOutput>;
  ProductCarouselSection?: Maybe<ProductCarouselSectionOutput>;
  ProductDetail?: Maybe<ProductDetailOutput>;
  ProductDetailExperience?: Maybe<ProductDetailExperienceOutput>;
  ProductList?: Maybe<ProductListOutput>;
  ProductListingEPage?: Maybe<ProductListingEPageOutput>;
  ProductVisibleElements?: Maybe<ProductVisibleElementsOutput>;
  Section?: Maybe<SectionOutput>;
  SocialMediaBlock?: Maybe<SocialMediaBlockOutput>;
  SocialMediaBlocks?: Maybe<SocialMediaBlocksOutput>;
  SysContentFolder?: Maybe<SysContentFolderOutput>;
  TopHeaderContainer?: Maybe<TopHeaderContainerOutput>;
  VideoElement?: Maybe<VideoElementOutput>;
  VideoMedia?: Maybe<VideoMediaOutput>;
  WebFooterConfigrationBlock?: Maybe<WebFooterConfigrationBlockOutput>;
  WebHeaderConfigrationBlock?: Maybe<WebHeaderConfigrationBlockOutput>;
  _Component?: Maybe<_ComponentOutput>;
  _Content?: Maybe<_ContentOutput>;
  _Experience?: Maybe<_ExperienceOutput>;
  _Folder?: Maybe<_FolderOutput>;
  _Image?: Maybe<_ImageOutput>;
  _Media?: Maybe<_MediaOutput>;
  _Page?: Maybe<_PageOutput>;
  _Section?: Maybe<_SectionOutput>;
  _Video?: Maybe<_VideoOutput>;
  test?: Maybe<testOutput>;
};

export type QueryBannerItemElementArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<BannerItemElementOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<BannerItemElementWhereInput>;
};

export type QueryBlankExperienceArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<BlankExperienceOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<BlankExperienceWhereInput>;
};

export type QueryBlankSectionArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<BlankSectionOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<BlankSectionWhereInput>;
};

export type QueryButtonElementArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<ButtonElementOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<ButtonElementWhereInput>;
};

export type QueryCTAElementArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<CTAElementOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<CTAElementWhereInput>;
};

export type QueryCompanyArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<CompanyOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<CompanyWhereInput>;
};

export type QueryContainerElementArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<ContainerElementOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<ContainerElementWhereInput>;
};

export type QueryContentTextElementArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<ContentTextElementOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<ContentTextElementWhereInput>;
};

export type QueryDataArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<system_Locales>>>;
  orderBy?: InputMaybe<DataOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<DataWhereInput>;
};

export type QueryDefaultVideoArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<DefaultVideoOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<DefaultVideoWhereInput>;
};

export type QueryDictionaryArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<DictionaryOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<DictionaryWhereInput>;
};

export type QueryDictionaryItemArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<DictionaryItemOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<DictionaryItemWhereInput>;
};

export type QueryExpandableTextArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<ExpandableTextOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<ExpandableTextWhereInput>;
};

export type QueryFAQsSectionArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<FAQsSectionOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<FAQsSectionWhereInput>;
};

export type QueryGenericMediaArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<GenericMediaOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<GenericMediaWhereInput>;
};

export type QueryHeadingElementArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<HeadingElementOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<HeadingElementWhereInput>;
};

export type QueryImageArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<ImageOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<ImageWhereInput>;
};

export type QueryImageBackgroundArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<ImageBackgroundOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<ImageBackgroundWhereInput>;
};

export type QueryImageItemElementArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<ImageItemElementOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<ImageItemElementWhereInput>;
};

export type QueryImageMediaArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<ImageMediaOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<ImageMediaWhereInput>;
};

export type QueryImageTextItemElementArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<ImageTextItemElementOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<ImageTextItemElementWhereInput>;
};

export type QueryLandingPageArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<LandingPageOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<LandingPageWhereInput>;
};

export type QueryMegaMenuGroupBlockArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<MegaMenuGroupBlockOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<MegaMenuGroupBlockWhereInput>;
};

export type QueryNavigationMenuBlockArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<NavigationMenuBlockOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<NavigationMenuBlockWhereInput>;
};

export type QueryOfficeLocationArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<OfficeLocationOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<OfficeLocationWhereInput>;
};

export type QueryPDPCarouselElementArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<PDPCarouselElementOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<PDPCarouselElementWhereInput>;
};

export type QueryPDPGalleryElementArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<PDPGalleryElementOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<PDPGalleryElementWhereInput>;
};

export type QueryPDPHeroElementArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<PDPHeroElementOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<PDPHeroElementWhereInput>;
};

export type QueryPDPSpecificationsElementArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<PDPSpecificationsElementOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<PDPSpecificationsElementWhereInput>;
};

export type QueryPageSeoSettingsArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<PageSeoSettingsOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<PageSeoSettingsWhereInput>;
};

export type QueryParagraphElementArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<ParagraphElementOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<ParagraphElementWhereInput>;
};

export type QueryProductCardElementArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<ProductCardElementOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<ProductCardElementWhereInput>;
};

export type QueryProductCardListElementArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<ProductCardListElementOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<ProductCardListElementWhereInput>;
};

export type QueryProductCardListSectionArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<ProductCardListSectionOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<ProductCardListSectionWhereInput>;
};

export type QueryProductCarouselElementArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<ProductCarouselElementOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<ProductCarouselElementWhereInput>;
};

export type QueryProductCarouselSectionArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<ProductCarouselSectionOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<ProductCarouselSectionWhereInput>;
};

export type QueryProductDetailArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<ProductDetailOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<ProductDetailWhereInput>;
};

export type QueryProductDetailExperienceArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<ProductDetailExperienceOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<ProductDetailExperienceWhereInput>;
};

export type QueryProductListArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<ProductListOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<ProductListWhereInput>;
};

export type QueryProductListingEPageArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<ProductListingEPageOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<ProductListingEPageWhereInput>;
};

export type QueryProductVisibleElementsArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<ProductVisibleElementsOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<ProductVisibleElementsWhereInput>;
};

export type QuerySectionArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<SectionOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<SectionWhereInput>;
};

export type QuerySocialMediaBlockArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<SocialMediaBlockOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<SocialMediaBlockWhereInput>;
};

export type QuerySocialMediaBlocksArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<SocialMediaBlocksOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<SocialMediaBlocksWhereInput>;
};

export type QuerySysContentFolderArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<SysContentFolderOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<SysContentFolderWhereInput>;
};

export type QueryTopHeaderContainerArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<TopHeaderContainerOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<TopHeaderContainerWhereInput>;
};

export type QueryVideoElementArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<VideoElementOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<VideoElementWhereInput>;
};

export type QueryVideoMediaArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<VideoMediaOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<VideoMediaWhereInput>;
};

export type QueryWebFooterConfigrationBlockArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<WebFooterConfigrationBlockOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<WebFooterConfigrationBlockWhereInput>;
};

export type QueryWebHeaderConfigrationBlockArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<WebHeaderConfigrationBlockOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<WebHeaderConfigrationBlockWhereInput>;
};

export type Query_ComponentArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<_ComponentOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<_ComponentWhereInput>;
};

export type Query_ContentArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<_ContentOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<_ContentWhereInput>;
};

export type Query_ExperienceArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<_ExperienceOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<_ExperienceWhereInput>;
};

export type Query_FolderArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<_FolderOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<_FolderWhereInput>;
};

export type Query_ImageArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<_ImageOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<_ImageWhereInput>;
};

export type Query_MediaArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<_MediaOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<_MediaWhereInput>;
};

export type Query_PageArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<_PageOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<_PageWhereInput>;
};

export type Query_SectionArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<_SectionOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<_SectionWhereInput>;
};

export type Query_VideoArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<_VideoOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<_VideoWhereInput>;
};

export type QuerytestArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<testOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<testWhereInput>;
};

export type QueryRef = {
  __typename?: "QueryRef";
  BannerItemElement?: Maybe<BannerItemElementOutput>;
  BlankExperience?: Maybe<BlankExperienceOutput>;
  BlankSection?: Maybe<BlankSectionOutput>;
  ButtonElement?: Maybe<ButtonElementOutput>;
  CTAElement?: Maybe<CTAElementOutput>;
  Company?: Maybe<CompanyOutput>;
  ContainerElement?: Maybe<ContainerElementOutput>;
  ContentTextElement?: Maybe<ContentTextElementOutput>;
  Data?: Maybe<DataOutput>;
  DefaultVideo?: Maybe<DefaultVideoOutput>;
  Dictionary?: Maybe<DictionaryOutput>;
  DictionaryItem?: Maybe<DictionaryItemOutput>;
  ExpandableText?: Maybe<ExpandableTextOutput>;
  FAQsSection?: Maybe<FAQsSectionOutput>;
  GenericMedia?: Maybe<GenericMediaOutput>;
  HeadingElement?: Maybe<HeadingElementOutput>;
  Image?: Maybe<ImageOutput>;
  ImageBackground?: Maybe<ImageBackgroundOutput>;
  ImageItemElement?: Maybe<ImageItemElementOutput>;
  ImageMedia?: Maybe<ImageMediaOutput>;
  ImageTextItemElement?: Maybe<ImageTextItemElementOutput>;
  LandingPage?: Maybe<LandingPageOutput>;
  MegaMenuGroupBlock?: Maybe<MegaMenuGroupBlockOutput>;
  NavigationMenuBlock?: Maybe<NavigationMenuBlockOutput>;
  OfficeLocation?: Maybe<OfficeLocationOutput>;
  PDPCarouselElement?: Maybe<PDPCarouselElementOutput>;
  PDPGalleryElement?: Maybe<PDPGalleryElementOutput>;
  PDPHeroElement?: Maybe<PDPHeroElementOutput>;
  PDPSpecificationsElement?: Maybe<PDPSpecificationsElementOutput>;
  PageSeoSettings?: Maybe<PageSeoSettingsOutput>;
  ParagraphElement?: Maybe<ParagraphElementOutput>;
  ProductCardElement?: Maybe<ProductCardElementOutput>;
  ProductCardListElement?: Maybe<ProductCardListElementOutput>;
  ProductCardListSection?: Maybe<ProductCardListSectionOutput>;
  ProductCarouselElement?: Maybe<ProductCarouselElementOutput>;
  ProductCarouselSection?: Maybe<ProductCarouselSectionOutput>;
  ProductDetail?: Maybe<ProductDetailOutput>;
  ProductDetailExperience?: Maybe<ProductDetailExperienceOutput>;
  ProductList?: Maybe<ProductListOutput>;
  ProductListingEPage?: Maybe<ProductListingEPageOutput>;
  ProductVisibleElements?: Maybe<ProductVisibleElementsOutput>;
  Section?: Maybe<SectionOutput>;
  SocialMediaBlock?: Maybe<SocialMediaBlockOutput>;
  SocialMediaBlocks?: Maybe<SocialMediaBlocksOutput>;
  SysContentFolder?: Maybe<SysContentFolderOutput>;
  TopHeaderContainer?: Maybe<TopHeaderContainerOutput>;
  VideoElement?: Maybe<VideoElementOutput>;
  VideoMedia?: Maybe<VideoMediaOutput>;
  WebFooterConfigrationBlock?: Maybe<WebFooterConfigrationBlockOutput>;
  WebHeaderConfigrationBlock?: Maybe<WebHeaderConfigrationBlockOutput>;
  _Component?: Maybe<_ComponentOutput>;
  _Content?: Maybe<_ContentOutput>;
  _Experience?: Maybe<_ExperienceOutput>;
  _Folder?: Maybe<_FolderOutput>;
  _Image?: Maybe<_ImageOutput>;
  _Media?: Maybe<_MediaOutput>;
  _Page?: Maybe<_PageOutput>;
  _Section?: Maybe<_SectionOutput>;
  _Video?: Maybe<_VideoOutput>;
  test?: Maybe<testOutput>;
};

export type QueryRefBannerItemElementArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<BannerItemElementOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<BannerItemElementWhereInput>;
};

export type QueryRefBlankExperienceArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<BlankExperienceOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<BlankExperienceWhereInput>;
};

export type QueryRefBlankSectionArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<BlankSectionOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<BlankSectionWhereInput>;
};

export type QueryRefButtonElementArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<ButtonElementOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<ButtonElementWhereInput>;
};

export type QueryRefCTAElementArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<CTAElementOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<CTAElementWhereInput>;
};

export type QueryRefCompanyArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<CompanyOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<CompanyWhereInput>;
};

export type QueryRefContainerElementArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<ContainerElementOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<ContainerElementWhereInput>;
};

export type QueryRefContentTextElementArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<ContentTextElementOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<ContentTextElementWhereInput>;
};

export type QueryRefDataArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<system_Locales>>>;
  orderBy?: InputMaybe<DataOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<DataWhereInput>;
};

export type QueryRefDefaultVideoArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<DefaultVideoOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<DefaultVideoWhereInput>;
};

export type QueryRefDictionaryArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<DictionaryOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<DictionaryWhereInput>;
};

export type QueryRefDictionaryItemArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<DictionaryItemOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<DictionaryItemWhereInput>;
};

export type QueryRefExpandableTextArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<ExpandableTextOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<ExpandableTextWhereInput>;
};

export type QueryRefFAQsSectionArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<FAQsSectionOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<FAQsSectionWhereInput>;
};

export type QueryRefGenericMediaArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<GenericMediaOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<GenericMediaWhereInput>;
};

export type QueryRefHeadingElementArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<HeadingElementOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<HeadingElementWhereInput>;
};

export type QueryRefImageArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<ImageOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<ImageWhereInput>;
};

export type QueryRefImageBackgroundArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<ImageBackgroundOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<ImageBackgroundWhereInput>;
};

export type QueryRefImageItemElementArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<ImageItemElementOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<ImageItemElementWhereInput>;
};

export type QueryRefImageMediaArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<ImageMediaOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<ImageMediaWhereInput>;
};

export type QueryRefImageTextItemElementArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<ImageTextItemElementOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<ImageTextItemElementWhereInput>;
};

export type QueryRefLandingPageArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<LandingPageOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<LandingPageWhereInput>;
};

export type QueryRefMegaMenuGroupBlockArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<MegaMenuGroupBlockOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<MegaMenuGroupBlockWhereInput>;
};

export type QueryRefNavigationMenuBlockArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<NavigationMenuBlockOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<NavigationMenuBlockWhereInput>;
};

export type QueryRefOfficeLocationArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<OfficeLocationOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<OfficeLocationWhereInput>;
};

export type QueryRefPDPCarouselElementArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<PDPCarouselElementOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<PDPCarouselElementWhereInput>;
};

export type QueryRefPDPGalleryElementArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<PDPGalleryElementOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<PDPGalleryElementWhereInput>;
};

export type QueryRefPDPHeroElementArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<PDPHeroElementOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<PDPHeroElementWhereInput>;
};

export type QueryRefPDPSpecificationsElementArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<PDPSpecificationsElementOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<PDPSpecificationsElementWhereInput>;
};

export type QueryRefPageSeoSettingsArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<PageSeoSettingsOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<PageSeoSettingsWhereInput>;
};

export type QueryRefParagraphElementArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<ParagraphElementOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<ParagraphElementWhereInput>;
};

export type QueryRefProductCardElementArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<ProductCardElementOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<ProductCardElementWhereInput>;
};

export type QueryRefProductCardListElementArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<ProductCardListElementOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<ProductCardListElementWhereInput>;
};

export type QueryRefProductCardListSectionArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<ProductCardListSectionOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<ProductCardListSectionWhereInput>;
};

export type QueryRefProductCarouselElementArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<ProductCarouselElementOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<ProductCarouselElementWhereInput>;
};

export type QueryRefProductCarouselSectionArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<ProductCarouselSectionOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<ProductCarouselSectionWhereInput>;
};

export type QueryRefProductDetailArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<ProductDetailOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<ProductDetailWhereInput>;
};

export type QueryRefProductDetailExperienceArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<ProductDetailExperienceOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<ProductDetailExperienceWhereInput>;
};

export type QueryRefProductListArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<ProductListOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<ProductListWhereInput>;
};

export type QueryRefProductListingEPageArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<ProductListingEPageOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<ProductListingEPageWhereInput>;
};

export type QueryRefProductVisibleElementsArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<ProductVisibleElementsOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<ProductVisibleElementsWhereInput>;
};

export type QueryRefSectionArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<SectionOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<SectionWhereInput>;
};

export type QueryRefSocialMediaBlockArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<SocialMediaBlockOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<SocialMediaBlockWhereInput>;
};

export type QueryRefSocialMediaBlocksArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<SocialMediaBlocksOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<SocialMediaBlocksWhereInput>;
};

export type QueryRefSysContentFolderArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<SysContentFolderOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<SysContentFolderWhereInput>;
};

export type QueryRefTopHeaderContainerArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<TopHeaderContainerOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<TopHeaderContainerWhereInput>;
};

export type QueryRefVideoElementArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<VideoElementOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<VideoElementWhereInput>;
};

export type QueryRefVideoMediaArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<VideoMediaOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<VideoMediaWhereInput>;
};

export type QueryRefWebFooterConfigrationBlockArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<WebFooterConfigrationBlockOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<WebFooterConfigrationBlockWhereInput>;
};

export type QueryRefWebHeaderConfigrationBlockArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<WebHeaderConfigrationBlockOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<WebHeaderConfigrationBlockWhereInput>;
};

export type QueryRef_ComponentArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<_ComponentOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<_ComponentWhereInput>;
};

export type QueryRef_ContentArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<_ContentOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<_ContentWhereInput>;
};

export type QueryRef_ExperienceArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<_ExperienceOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<_ExperienceWhereInput>;
};

export type QueryRef_FolderArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<_FolderOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<_FolderWhereInput>;
};

export type QueryRef_ImageArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<_ImageOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<_ImageWhereInput>;
};

export type QueryRef_MediaArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<_MediaOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<_MediaWhereInput>;
};

export type QueryRef_PageArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<_PageOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<_PageWhereInput>;
};

export type QueryRef_SectionArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<_SectionOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<_SectionWhereInput>;
};

export type QueryRef_VideoArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<_VideoOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<_VideoWhereInput>;
};

export type QueryReftestArgs = {
  cursor?: InputMaybe<Scalars["String"]["input"]>;
  ids?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  limit?: Scalars["Int"]["input"];
  locale?: InputMaybe<Array<InputMaybe<Locales>>>;
  orderBy?: InputMaybe<testOrderByInput>;
  skip?: Scalars["Int"]["input"];
  variation?: InputMaybe<VariationInput>;
  where?: InputMaybe<testWhereInput>;
};

export type RangeFacetsInput = {
  from?: InputMaybe<Scalars["Int"]["input"]>;
  to?: InputMaybe<Scalars["Int"]["input"]>;
};

export enum Ranking {
  BOOST_ONLY = "BOOST_ONLY",
  DOC = "DOC",
  RELEVANCE = "RELEVANCE",
  SEMANTIC = "SEMANTIC",
}

export type RichText = {
  __typename?: "RichText";
  html?: Maybe<Scalars["String"]["output"]>;
  json?: Maybe<Scalars["JSON"]["output"]>;
};

export type RichTextAutocomplete = {
  __typename?: "RichTextAutocomplete";
  html?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
};

export type RichTextAutocompletehtmlArgs = {
  limit?: Scalars["Int"]["input"];
  value: Scalars["String"]["input"];
};

export type RichTextFacet = {
  __typename?: "RichTextFacet";
  html?: Maybe<Array<Maybe<StringFacet>>>;
};

export type RichTextFacethtmlArgs = {
  filters?: InputMaybe<Array<Scalars["String"]["input"]>>;
  limit?: Scalars["Int"]["input"];
  orderBy?: InputMaybe<OrderBy>;
  orderType?: InputMaybe<OrderByFacetType>;
};

export type RichTextOrderByInput = {
  html?: InputMaybe<OrderBy>;
};

export type RichTextWhereInput = {
  html?: InputMaybe<StringFilterInput>;
};

export type SearchableRichText = {
  __typename?: "SearchableRichText";
  html?: Maybe<Scalars["String"]["output"]>;
  json?: Maybe<Scalars["JSON"]["output"]>;
};

export type SearchableRichTexthtmlArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type SearchableRichTextFacet = {
  __typename?: "SearchableRichTextFacet";
  html?: Maybe<Array<Maybe<StringFacet>>>;
};

export type SearchableRichTextFacethtmlArgs = {
  filters?: InputMaybe<Array<Scalars["String"]["input"]>>;
  limit?: Scalars["Int"]["input"];
  orderBy?: InputMaybe<OrderBy>;
  orderType?: InputMaybe<OrderByFacetType>;
};

export type SearchableRichTextOrderByInput = {
  html?: InputMaybe<OrderBy>;
};

export type SearchableRichTextWhereInput = {
  html?: InputMaybe<SearchableStringFilterInput>;
};

export type SearchableStringFilterInput = {
  /** `boost` influences the weight of a field by boosting a match with a number (default: 1) — counts more towards the eventual relevance score which can be projected with `_score` — at query time. Note that `boost` cannot be a negative number. */
  boost?: InputMaybe<Scalars["Int"]["input"]>;
  /** `contains` performs full-text search on a word or phrase. */
  contains?: InputMaybe<Scalars["String"]["input"]>;
  /** `eq` matches on an exact value, but the value is case-insensitive. */
  eq?: InputMaybe<Scalars["String"]["input"]>;
  /** `exist` matches results that have this field. */
  exist?: InputMaybe<Scalars["Boolean"]["input"]>;
  /** enables supporting fuzzy matching on the query terms (keywords), which returns items that contain terms in the content similar to the keywords, as measured by a _Levenshtein edit distance_. An edit distance is the number of one-character changes needed to turn one term into another. The edit distance is based on the length of the term.  */
  fuzzy?: InputMaybe<Scalars["Boolean"]["input"]>;
  /** `in` matches with 1 or more exact values in a list. Example: `in: ["word1", "word2", "this is a phrase"]` */
  in?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  /** `like` matches on substrings with wildcard support: `%` to match on 0 or more characters, `_` to match on any character.  */
  like?: InputMaybe<Scalars["String"]["input"]>;
  /** `match` performs full-text search on a word or phrase where less relevant items are also returned. The `match` operator is only supported for `searchable` fields. It will improve fulltext search by making it easier to match on words. More exact matches will be ranked higher, less exact matches will be ranked lower. The `match` operator is supported with synonyms and fuzzy search. */
  match?: InputMaybe<Scalars["String"]["input"]>;
  /** `not_eq` retrieves results not matching with an exact (but case-insensitive) value. */
  notEq?: InputMaybe<Scalars["String"]["input"]>;
  /** `not_in` returns results that do not match with 1 or more exact values in a list. Example: `not_in: ["word1", "word2", "this is a phrase"]` */
  notIn?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  /** `starts_with` retrieves matches that start with a certain value (prefix). */
  startsWith?: InputMaybe<Scalars["String"]["input"]>;
  /** expands query value with synonyms. Example: if `H2O` is a synonym of `water`, then querying for `water` will also return results with `H2O`. */
  synonyms?: InputMaybe<Array<InputMaybe<SynonymSlot>>>;
};

export type Section = IData &
  _IContent &
  _IPage & {
    __typename?: "Section";
    /** @deprecated Use `_link` field instead */
    _children?: Maybe<QueryRef>;
    _deleted?: Maybe<Scalars["Bool"]["output"]>;
    _fulltext?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
    _id?: Maybe<Scalars["String"]["output"]>;
    _link?: Maybe<QueryRef>;
    _metadata?: Maybe<IContentMetadata>;
    _modified?: Maybe<Scalars["Date"]["output"]>;
    _score?: Maybe<Scalars["Float"]["output"]>;
  };

export type Section_fulltextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type Section_linkArgs = {
  type?: InputMaybe<LinkTypes>;
};

export type SectionAutocomplete = {
  __typename?: "SectionAutocomplete";
  _metadata?: Maybe<IContentMetadataAutocomplete>;
};

export type SectionFacet = {
  __typename?: "SectionFacet";
  _metadata?: Maybe<IContentMetadataFacet>;
};

export type SectionOrderByInput = {
  _metadata?: InputMaybe<IContentMetadataOrderByInput>;
  _minimumScore?: InputMaybe<Scalars["Float"]["input"]>;
  _modified?: InputMaybe<OrderBy>;
  _ranking?: InputMaybe<Ranking>;
  /** The value needs to be a positive value, but cannot exceed the maximum value of an integer. In case it is exceeded, the maximum of an integer is used. In case of a negative value, semantic search will be disabled. */
  _semanticWeight?: InputMaybe<Scalars["Float"]["input"]>;
};

export type SectionOutput = {
  __typename?: "SectionOutput";
  autocomplete?: Maybe<SectionAutocomplete>;
  cursor?: Maybe<Scalars["String"]["output"]>;
  facets?: Maybe<SectionFacet>;
  item?: Maybe<Section>;
  items?: Maybe<Array<Maybe<Section>>>;
  total?: Maybe<Scalars["Int"]["output"]>;
};

export type SectionOutputtotalArgs = {
  all?: InputMaybe<Scalars["Boolean"]["input"]>;
};

export type SectionWhereInput = {
  _and?: InputMaybe<Array<InputMaybe<SectionWhereInput>>>;
  _fulltext?: InputMaybe<SearchableStringFilterInput>;
  _metadata?: InputMaybe<IContentMetadataWhereInput>;
  _modified?: InputMaybe<DateFilterInput>;
  _not?: InputMaybe<Array<InputMaybe<SectionWhereInput>>>;
  _or?: InputMaybe<Array<InputMaybe<SectionWhereInput>>>;
};

export type SocialMediaBlock = IData &
  _IComponent &
  _IContent & {
    __typename?: "SocialMediaBlock";
    URLMedia?: Maybe<Link>;
    /** @deprecated Use `_link` field instead */
    _children?: Maybe<QueryRef>;
    _deleted?: Maybe<Scalars["Bool"]["output"]>;
    _fulltext?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
    _id?: Maybe<Scalars["String"]["output"]>;
    _link?: Maybe<QueryRef>;
    _metadata?: Maybe<IContentMetadata>;
    _modified?: Maybe<Scalars["Date"]["output"]>;
    _score?: Maybe<Scalars["Float"]["output"]>;
    imageIcon?: Maybe<ImageItemElementProperty>;
  };

export type SocialMediaBlock_fulltextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type SocialMediaBlock_linkArgs = {
  type?: InputMaybe<LinkTypes>;
};

export type SocialMediaBlockAutocomplete = {
  __typename?: "SocialMediaBlockAutocomplete";
  URLMedia?: Maybe<LinkAutocomplete>;
  _metadata?: Maybe<IContentMetadataAutocomplete>;
  imageIcon?: Maybe<ImageItemElementPropertyAutocomplete>;
};

export type SocialMediaBlockFacet = {
  __typename?: "SocialMediaBlockFacet";
  URLMedia?: Maybe<LinkFacet>;
  _metadata?: Maybe<IContentMetadataFacet>;
  imageIcon?: Maybe<ImageItemElementPropertyFacet>;
};

export type SocialMediaBlockOrderByInput = {
  URLMedia?: InputMaybe<LinkOrderByInput>;
  _metadata?: InputMaybe<IContentMetadataOrderByInput>;
  _minimumScore?: InputMaybe<Scalars["Float"]["input"]>;
  _modified?: InputMaybe<OrderBy>;
  _ranking?: InputMaybe<Ranking>;
  /** The value needs to be a positive value, but cannot exceed the maximum value of an integer. In case it is exceeded, the maximum of an integer is used. In case of a negative value, semantic search will be disabled. */
  _semanticWeight?: InputMaybe<Scalars["Float"]["input"]>;
  imageIcon?: InputMaybe<ImageItemElementPropertyOrderByInput>;
};

export type SocialMediaBlockOutput = {
  __typename?: "SocialMediaBlockOutput";
  autocomplete?: Maybe<SocialMediaBlockAutocomplete>;
  cursor?: Maybe<Scalars["String"]["output"]>;
  facets?: Maybe<SocialMediaBlockFacet>;
  item?: Maybe<SocialMediaBlock>;
  items?: Maybe<Array<Maybe<SocialMediaBlock>>>;
  total?: Maybe<Scalars["Int"]["output"]>;
};

export type SocialMediaBlockOutputtotalArgs = {
  all?: InputMaybe<Scalars["Boolean"]["input"]>;
};

export type SocialMediaBlockWhereInput = {
  URLMedia?: InputMaybe<LinkWhereInput>;
  _and?: InputMaybe<Array<InputMaybe<SocialMediaBlockWhereInput>>>;
  _fulltext?: InputMaybe<SearchableStringFilterInput>;
  _metadata?: InputMaybe<IContentMetadataWhereInput>;
  _modified?: InputMaybe<DateFilterInput>;
  _not?: InputMaybe<Array<InputMaybe<SocialMediaBlockWhereInput>>>;
  _or?: InputMaybe<Array<InputMaybe<SocialMediaBlockWhereInput>>>;
  imageIcon?: InputMaybe<ImageItemElementPropertyWhereInput>;
};

export type SocialMediaBlocks = IData &
  _IComponent &
  _IContent & {
    __typename?: "SocialMediaBlocks";
    ListItems?: Maybe<Array<Maybe<_IContent>>>;
    /** @deprecated Use `_link` field instead */
    _children?: Maybe<QueryRef>;
    _deleted?: Maybe<Scalars["Bool"]["output"]>;
    _fulltext?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
    _id?: Maybe<Scalars["String"]["output"]>;
    _link?: Maybe<QueryRef>;
    _metadata?: Maybe<IContentMetadata>;
    _modified?: Maybe<Scalars["Date"]["output"]>;
    _score?: Maybe<Scalars["Float"]["output"]>;
  };

export type SocialMediaBlocks_fulltextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type SocialMediaBlocks_linkArgs = {
  type?: InputMaybe<LinkTypes>;
};

export type SocialMediaBlocksAutocomplete = {
  __typename?: "SocialMediaBlocksAutocomplete";
  ListItems?: Maybe<_IContentAutocomplete>;
  _metadata?: Maybe<IContentMetadataAutocomplete>;
};

export type SocialMediaBlocksFacet = {
  __typename?: "SocialMediaBlocksFacet";
  ListItems?: Maybe<_IContentFacet>;
  _metadata?: Maybe<IContentMetadataFacet>;
};

export type SocialMediaBlocksOrderByInput = {
  ListItems?: InputMaybe<_IContentOrderByInput>;
  _metadata?: InputMaybe<IContentMetadataOrderByInput>;
  _minimumScore?: InputMaybe<Scalars["Float"]["input"]>;
  _modified?: InputMaybe<OrderBy>;
  _ranking?: InputMaybe<Ranking>;
  /** The value needs to be a positive value, but cannot exceed the maximum value of an integer. In case it is exceeded, the maximum of an integer is used. In case of a negative value, semantic search will be disabled. */
  _semanticWeight?: InputMaybe<Scalars["Float"]["input"]>;
};

export type SocialMediaBlocksOutput = {
  __typename?: "SocialMediaBlocksOutput";
  autocomplete?: Maybe<SocialMediaBlocksAutocomplete>;
  cursor?: Maybe<Scalars["String"]["output"]>;
  facets?: Maybe<SocialMediaBlocksFacet>;
  item?: Maybe<SocialMediaBlocks>;
  items?: Maybe<Array<Maybe<SocialMediaBlocks>>>;
  total?: Maybe<Scalars["Int"]["output"]>;
};

export type SocialMediaBlocksOutputtotalArgs = {
  all?: InputMaybe<Scalars["Boolean"]["input"]>;
};

export type SocialMediaBlocksWhereInput = {
  ListItems?: InputMaybe<_IContentWhereInput>;
  _and?: InputMaybe<Array<InputMaybe<SocialMediaBlocksWhereInput>>>;
  _fulltext?: InputMaybe<SearchableStringFilterInput>;
  _metadata?: InputMaybe<IContentMetadataWhereInput>;
  _modified?: InputMaybe<DateFilterInput>;
  _not?: InputMaybe<Array<InputMaybe<SocialMediaBlocksWhereInput>>>;
  _or?: InputMaybe<Array<InputMaybe<SocialMediaBlocksWhereInput>>>;
};

export type StringFacet = {
  __typename?: "StringFacet";
  count?: Maybe<Scalars["Int"]["output"]>;
  name?: Maybe<Scalars["String"]["output"]>;
};

export type StringFilterInput = {
  /** `boost` influences the weight of a field by boosting a match with a number (default: 1) — counts more towards the eventual relevance score which can be projected with `_score` — at query time. Note that `boost` cannot be a negative number. */
  boost?: InputMaybe<Scalars["Int"]["input"]>;
  /** `ends_with` retrieves matches that end with a certain value (suffix). */
  endsWith?: InputMaybe<Scalars["String"]["input"]>;
  /** `eq` matches on an exact value, but the value is case-insensitive. */
  eq?: InputMaybe<Scalars["String"]["input"]>;
  /** `exist` matches results that have this field. */
  exist?: InputMaybe<Scalars["Boolean"]["input"]>;
  /** enables supporting fuzzy matching on the query terms (keywords), which returns items that contain terms in the content similar to the keywords, as measured by a _Levenshtein edit distance_. An edit distance is the number of one-character changes needed to turn one term into another. The edit distance is based on the length of the term.  */
  fuzzy?: InputMaybe<Scalars["Boolean"]["input"]>;
  /** `in` matches with 1 or more exact values in a list. Example: `in: ["word1", "word2", "this is a phrase"]` */
  in?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  /** `like` matches on substrings with wildcard support: `%` to match on 0 or more characters, `_` to match on any character.  */
  like?: InputMaybe<Scalars["String"]["input"]>;
  /** `not_eq` retrieves results not matching with an exact (but case-insensitive) value. */
  notEq?: InputMaybe<Scalars["String"]["input"]>;
  /** `not_in` returns results that do not match with 1 or more exact values in a list. Example: `not_in: ["word1", "word2", "this is a phrase"]` */
  notIn?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
  /** `starts_with` retrieves matches that start with a certain value (prefix). */
  startsWith?: InputMaybe<Scalars["String"]["input"]>;
  /** expands query value with synonyms. Example: if `H2O` is a synonym of `water`, then querying for `water` will also return results with `H2O`. */
  synonyms?: InputMaybe<Array<InputMaybe<SynonymSlot>>>;
};

export enum SynonymSlot {
  /** synonym slot 1 */
  ONE = "ONE",
  /** synonym slot 2 */
  TWO = "TWO",
}

export type SysContentFolder = IData &
  _IContent &
  _IFolder & {
    __typename?: "SysContentFolder";
    /** @deprecated Use `_link` field instead */
    _children?: Maybe<QueryRef>;
    _deleted?: Maybe<Scalars["Bool"]["output"]>;
    _fulltext?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
    _id?: Maybe<Scalars["String"]["output"]>;
    _link?: Maybe<QueryRef>;
    _metadata?: Maybe<IContentMetadata>;
    _modified?: Maybe<Scalars["Date"]["output"]>;
    _score?: Maybe<Scalars["Float"]["output"]>;
  };

export type SysContentFolder_fulltextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type SysContentFolder_linkArgs = {
  type?: InputMaybe<LinkTypes>;
};

export type SysContentFolderAutocomplete = {
  __typename?: "SysContentFolderAutocomplete";
  _metadata?: Maybe<IContentMetadataAutocomplete>;
};

export type SysContentFolderFacet = {
  __typename?: "SysContentFolderFacet";
  _metadata?: Maybe<IContentMetadataFacet>;
};

export type SysContentFolderOrderByInput = {
  _metadata?: InputMaybe<IContentMetadataOrderByInput>;
  _minimumScore?: InputMaybe<Scalars["Float"]["input"]>;
  _modified?: InputMaybe<OrderBy>;
  _ranking?: InputMaybe<Ranking>;
  /** The value needs to be a positive value, but cannot exceed the maximum value of an integer. In case it is exceeded, the maximum of an integer is used. In case of a negative value, semantic search will be disabled. */
  _semanticWeight?: InputMaybe<Scalars["Float"]["input"]>;
};

export type SysContentFolderOutput = {
  __typename?: "SysContentFolderOutput";
  autocomplete?: Maybe<SysContentFolderAutocomplete>;
  cursor?: Maybe<Scalars["String"]["output"]>;
  facets?: Maybe<SysContentFolderFacet>;
  item?: Maybe<SysContentFolder>;
  items?: Maybe<Array<Maybe<SysContentFolder>>>;
  total?: Maybe<Scalars["Int"]["output"]>;
};

export type SysContentFolderOutputtotalArgs = {
  all?: InputMaybe<Scalars["Boolean"]["input"]>;
};

export type SysContentFolderWhereInput = {
  _and?: InputMaybe<Array<InputMaybe<SysContentFolderWhereInput>>>;
  _fulltext?: InputMaybe<SearchableStringFilterInput>;
  _metadata?: InputMaybe<IContentMetadataWhereInput>;
  _modified?: InputMaybe<DateFilterInput>;
  _not?: InputMaybe<Array<InputMaybe<SysContentFolderWhereInput>>>;
  _or?: InputMaybe<Array<InputMaybe<SysContentFolderWhereInput>>>;
};

export type TopHeaderContainer = IData &
  _IComponent &
  _IContent & {
    __typename?: "TopHeaderContainer";
    Links?: Maybe<Array<Maybe<Link>>>;
    /** @deprecated Use `_link` field instead */
    _children?: Maybe<QueryRef>;
    _deleted?: Maybe<Scalars["Bool"]["output"]>;
    _fulltext?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
    _id?: Maybe<Scalars["String"]["output"]>;
    _link?: Maybe<QueryRef>;
    _metadata?: Maybe<IContentMetadata>;
    _modified?: Maybe<Scalars["Date"]["output"]>;
    _score?: Maybe<Scalars["Float"]["output"]>;
    description?: Maybe<RichText>;
  };

export type TopHeaderContainer_fulltextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type TopHeaderContainer_linkArgs = {
  type?: InputMaybe<LinkTypes>;
};

export type TopHeaderContainerAutocomplete = {
  __typename?: "TopHeaderContainerAutocomplete";
  Links?: Maybe<LinkAutocomplete>;
  _metadata?: Maybe<IContentMetadataAutocomplete>;
  description?: Maybe<RichTextAutocomplete>;
};

export type TopHeaderContainerFacet = {
  __typename?: "TopHeaderContainerFacet";
  Links?: Maybe<LinkFacet>;
  _metadata?: Maybe<IContentMetadataFacet>;
  description?: Maybe<RichTextFacet>;
};

export type TopHeaderContainerOrderByInput = {
  Links?: InputMaybe<LinkOrderByInput>;
  _metadata?: InputMaybe<IContentMetadataOrderByInput>;
  _minimumScore?: InputMaybe<Scalars["Float"]["input"]>;
  _modified?: InputMaybe<OrderBy>;
  _ranking?: InputMaybe<Ranking>;
  /** The value needs to be a positive value, but cannot exceed the maximum value of an integer. In case it is exceeded, the maximum of an integer is used. In case of a negative value, semantic search will be disabled. */
  _semanticWeight?: InputMaybe<Scalars["Float"]["input"]>;
  description?: InputMaybe<RichTextOrderByInput>;
};

export type TopHeaderContainerOutput = {
  __typename?: "TopHeaderContainerOutput";
  autocomplete?: Maybe<TopHeaderContainerAutocomplete>;
  cursor?: Maybe<Scalars["String"]["output"]>;
  facets?: Maybe<TopHeaderContainerFacet>;
  item?: Maybe<TopHeaderContainer>;
  items?: Maybe<Array<Maybe<TopHeaderContainer>>>;
  total?: Maybe<Scalars["Int"]["output"]>;
};

export type TopHeaderContainerOutputtotalArgs = {
  all?: InputMaybe<Scalars["Boolean"]["input"]>;
};

export type TopHeaderContainerWhereInput = {
  Links?: InputMaybe<LinkWhereInput>;
  _and?: InputMaybe<Array<InputMaybe<TopHeaderContainerWhereInput>>>;
  _fulltext?: InputMaybe<SearchableStringFilterInput>;
  _metadata?: InputMaybe<IContentMetadataWhereInput>;
  _modified?: InputMaybe<DateFilterInput>;
  _not?: InputMaybe<Array<InputMaybe<TopHeaderContainerWhereInput>>>;
  _or?: InputMaybe<Array<InputMaybe<TopHeaderContainerWhereInput>>>;
  description?: InputMaybe<RichTextWhereInput>;
};

export enum VariationIncludeMode {
  ALL = "ALL",
  NONE = "NONE",
  SOME = "SOME",
}

export type VariationInput = {
  include?: InputMaybe<VariationIncludeMode>;
  includeOriginal?: InputMaybe<Scalars["Boolean"]["input"]>;
  value?: InputMaybe<Array<InputMaybe<Scalars["String"]["input"]>>>;
};

export type VideoElement = IData &
  _IComponent &
  _IContent & {
    __typename?: "VideoElement";
    Autoplay?: Maybe<Scalars["Boolean"]["output"]>;
    Loading?: Maybe<Scalars["String"]["output"]>;
    Placeholder?: Maybe<ContentReference>;
    PlayOnPopup?: Maybe<Scalars["Boolean"]["output"]>;
    Title?: Maybe<Scalars["String"]["output"]>;
    Video?: Maybe<ContentReference>;
    VideoUrl?: Maybe<Scalars["String"]["output"]>;
    /** @deprecated Use `_link` field instead */
    _children?: Maybe<QueryRef>;
    _deleted?: Maybe<Scalars["Bool"]["output"]>;
    _fulltext?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
    _id?: Maybe<Scalars["String"]["output"]>;
    _link?: Maybe<QueryRef>;
    _metadata?: Maybe<IContentMetadata>;
    _modified?: Maybe<Scalars["Date"]["output"]>;
    _score?: Maybe<Scalars["Float"]["output"]>;
  };

export type VideoElement_fulltextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type VideoElement_linkArgs = {
  type?: InputMaybe<LinkTypes>;
};

export type VideoElementAutocomplete = {
  __typename?: "VideoElementAutocomplete";
  Placeholder?: Maybe<ContentReferenceAutocomplete>;
  Video?: Maybe<ContentReferenceAutocomplete>;
  _metadata?: Maybe<IContentMetadataAutocomplete>;
};

export type VideoElementFacet = {
  __typename?: "VideoElementFacet";
  Placeholder?: Maybe<ContentReferenceFacet>;
  Video?: Maybe<ContentReferenceFacet>;
  _metadata?: Maybe<IContentMetadataFacet>;
};

export type VideoElementOrderByInput = {
  Placeholder?: InputMaybe<ContentReferenceOrderByInput>;
  Video?: InputMaybe<ContentReferenceOrderByInput>;
  _metadata?: InputMaybe<IContentMetadataOrderByInput>;
  _minimumScore?: InputMaybe<Scalars["Float"]["input"]>;
  _modified?: InputMaybe<OrderBy>;
  _ranking?: InputMaybe<Ranking>;
  /** The value needs to be a positive value, but cannot exceed the maximum value of an integer. In case it is exceeded, the maximum of an integer is used. In case of a negative value, semantic search will be disabled. */
  _semanticWeight?: InputMaybe<Scalars["Float"]["input"]>;
};

export type VideoElementOutput = {
  __typename?: "VideoElementOutput";
  autocomplete?: Maybe<VideoElementAutocomplete>;
  cursor?: Maybe<Scalars["String"]["output"]>;
  facets?: Maybe<VideoElementFacet>;
  item?: Maybe<VideoElement>;
  items?: Maybe<Array<Maybe<VideoElement>>>;
  total?: Maybe<Scalars["Int"]["output"]>;
};

export type VideoElementOutputtotalArgs = {
  all?: InputMaybe<Scalars["Boolean"]["input"]>;
};

export type VideoElementWhereInput = {
  Placeholder?: InputMaybe<ContentReferenceWhereInput>;
  Video?: InputMaybe<ContentReferenceWhereInput>;
  _and?: InputMaybe<Array<InputMaybe<VideoElementWhereInput>>>;
  _fulltext?: InputMaybe<SearchableStringFilterInput>;
  _metadata?: InputMaybe<IContentMetadataWhereInput>;
  _modified?: InputMaybe<DateFilterInput>;
  _not?: InputMaybe<Array<InputMaybe<VideoElementWhereInput>>>;
  _or?: InputMaybe<Array<InputMaybe<VideoElementWhereInput>>>;
};

export type VideoMedia = IData &
  _IContent &
  _IMedia &
  _IVideo & {
    __typename?: "VideoMedia";
    /** @deprecated Use `_link` field instead */
    _children?: Maybe<QueryRef>;
    _deleted?: Maybe<Scalars["Bool"]["output"]>;
    _fulltext?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
    _id?: Maybe<Scalars["String"]["output"]>;
    _link?: Maybe<QueryRef>;
    _metadata?: Maybe<IContentMetadata>;
    _modified?: Maybe<Scalars["Date"]["output"]>;
    _score?: Maybe<Scalars["Float"]["output"]>;
  };

export type VideoMedia_fulltextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type VideoMedia_linkArgs = {
  type?: InputMaybe<LinkTypes>;
};

export type VideoMediaAutocomplete = {
  __typename?: "VideoMediaAutocomplete";
  _metadata?: Maybe<IContentMetadataAutocomplete>;
};

export type VideoMediaFacet = {
  __typename?: "VideoMediaFacet";
  _metadata?: Maybe<IContentMetadataFacet>;
};

export type VideoMediaOrderByInput = {
  _metadata?: InputMaybe<IContentMetadataOrderByInput>;
  _minimumScore?: InputMaybe<Scalars["Float"]["input"]>;
  _modified?: InputMaybe<OrderBy>;
  _ranking?: InputMaybe<Ranking>;
  /** The value needs to be a positive value, but cannot exceed the maximum value of an integer. In case it is exceeded, the maximum of an integer is used. In case of a negative value, semantic search will be disabled. */
  _semanticWeight?: InputMaybe<Scalars["Float"]["input"]>;
};

export type VideoMediaOutput = {
  __typename?: "VideoMediaOutput";
  autocomplete?: Maybe<VideoMediaAutocomplete>;
  cursor?: Maybe<Scalars["String"]["output"]>;
  facets?: Maybe<VideoMediaFacet>;
  item?: Maybe<VideoMedia>;
  items?: Maybe<Array<Maybe<VideoMedia>>>;
  total?: Maybe<Scalars["Int"]["output"]>;
};

export type VideoMediaOutputtotalArgs = {
  all?: InputMaybe<Scalars["Boolean"]["input"]>;
};

export type VideoMediaWhereInput = {
  _and?: InputMaybe<Array<InputMaybe<VideoMediaWhereInput>>>;
  _fulltext?: InputMaybe<SearchableStringFilterInput>;
  _metadata?: InputMaybe<IContentMetadataWhereInput>;
  _modified?: InputMaybe<DateFilterInput>;
  _not?: InputMaybe<Array<InputMaybe<VideoMediaWhereInput>>>;
  _or?: InputMaybe<Array<InputMaybe<VideoMediaWhereInput>>>;
};

export type WebFooterConfigrationBlock = IData &
  _IComponent &
  _IContent & {
    __typename?: "WebFooterConfigrationBlock";
    ButtonURLFooter?: Maybe<Link>;
    CopyrightText?: Maybe<RichText>;
    FooterNavigation?: Maybe<Array<Maybe<_IContent>>>;
    LocationDetails?: Maybe<RichText>;
    LogoAltText?: Maybe<Scalars["String"]["output"]>;
    SiteLogoFooter?: Maybe<ContentReference>;
    SocialMediaArea?: Maybe<Array<Maybe<_IContent>>>;
    TermsAndConditionsArea?: Maybe<Array<Maybe<Link>>>;
    /** @deprecated Use `_link` field instead */
    _children?: Maybe<QueryRef>;
    _deleted?: Maybe<Scalars["Bool"]["output"]>;
    _fulltext?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
    _id?: Maybe<Scalars["String"]["output"]>;
    _link?: Maybe<QueryRef>;
    _metadata?: Maybe<IContentMetadata>;
    _modified?: Maybe<Scalars["Date"]["output"]>;
    _score?: Maybe<Scalars["Float"]["output"]>;
    paymentmethodarea?: Maybe<Array<Maybe<_IContent>>>;
  };

export type WebFooterConfigrationBlock_fulltextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type WebFooterConfigrationBlock_linkArgs = {
  type?: InputMaybe<LinkTypes>;
};

export type WebFooterConfigrationBlockAutocomplete = {
  __typename?: "WebFooterConfigrationBlockAutocomplete";
  ButtonURLFooter?: Maybe<LinkAutocomplete>;
  CopyrightText?: Maybe<RichTextAutocomplete>;
  FooterNavigation?: Maybe<_IContentAutocomplete>;
  LocationDetails?: Maybe<RichTextAutocomplete>;
  SiteLogoFooter?: Maybe<ContentReferenceAutocomplete>;
  SocialMediaArea?: Maybe<_IContentAutocomplete>;
  TermsAndConditionsArea?: Maybe<LinkAutocomplete>;
  _metadata?: Maybe<IContentMetadataAutocomplete>;
  paymentmethodarea?: Maybe<_IContentAutocomplete>;
};

export type WebFooterConfigrationBlockFacet = {
  __typename?: "WebFooterConfigrationBlockFacet";
  ButtonURLFooter?: Maybe<LinkFacet>;
  CopyrightText?: Maybe<RichTextFacet>;
  FooterNavigation?: Maybe<_IContentFacet>;
  LocationDetails?: Maybe<RichTextFacet>;
  SiteLogoFooter?: Maybe<ContentReferenceFacet>;
  SocialMediaArea?: Maybe<_IContentFacet>;
  TermsAndConditionsArea?: Maybe<LinkFacet>;
  _metadata?: Maybe<IContentMetadataFacet>;
  paymentmethodarea?: Maybe<_IContentFacet>;
};

export type WebFooterConfigrationBlockOrderByInput = {
  ButtonURLFooter?: InputMaybe<LinkOrderByInput>;
  CopyrightText?: InputMaybe<RichTextOrderByInput>;
  FooterNavigation?: InputMaybe<_IContentOrderByInput>;
  LocationDetails?: InputMaybe<RichTextOrderByInput>;
  SiteLogoFooter?: InputMaybe<ContentReferenceOrderByInput>;
  SocialMediaArea?: InputMaybe<_IContentOrderByInput>;
  TermsAndConditionsArea?: InputMaybe<LinkOrderByInput>;
  _metadata?: InputMaybe<IContentMetadataOrderByInput>;
  _minimumScore?: InputMaybe<Scalars["Float"]["input"]>;
  _modified?: InputMaybe<OrderBy>;
  _ranking?: InputMaybe<Ranking>;
  /** The value needs to be a positive value, but cannot exceed the maximum value of an integer. In case it is exceeded, the maximum of an integer is used. In case of a negative value, semantic search will be disabled. */
  _semanticWeight?: InputMaybe<Scalars["Float"]["input"]>;
  paymentmethodarea?: InputMaybe<_IContentOrderByInput>;
};

export type WebFooterConfigrationBlockOutput = {
  __typename?: "WebFooterConfigrationBlockOutput";
  autocomplete?: Maybe<WebFooterConfigrationBlockAutocomplete>;
  cursor?: Maybe<Scalars["String"]["output"]>;
  facets?: Maybe<WebFooterConfigrationBlockFacet>;
  item?: Maybe<WebFooterConfigrationBlock>;
  items?: Maybe<Array<Maybe<WebFooterConfigrationBlock>>>;
  total?: Maybe<Scalars["Int"]["output"]>;
};

export type WebFooterConfigrationBlockOutputtotalArgs = {
  all?: InputMaybe<Scalars["Boolean"]["input"]>;
};

export type WebFooterConfigrationBlockWhereInput = {
  ButtonURLFooter?: InputMaybe<LinkWhereInput>;
  CopyrightText?: InputMaybe<RichTextWhereInput>;
  FooterNavigation?: InputMaybe<_IContentWhereInput>;
  LocationDetails?: InputMaybe<RichTextWhereInput>;
  SiteLogoFooter?: InputMaybe<ContentReferenceWhereInput>;
  SocialMediaArea?: InputMaybe<_IContentWhereInput>;
  TermsAndConditionsArea?: InputMaybe<LinkWhereInput>;
  _and?: InputMaybe<Array<InputMaybe<WebFooterConfigrationBlockWhereInput>>>;
  _fulltext?: InputMaybe<SearchableStringFilterInput>;
  _metadata?: InputMaybe<IContentMetadataWhereInput>;
  _modified?: InputMaybe<DateFilterInput>;
  _not?: InputMaybe<Array<InputMaybe<WebFooterConfigrationBlockWhereInput>>>;
  _or?: InputMaybe<Array<InputMaybe<WebFooterConfigrationBlockWhereInput>>>;
  paymentmethodarea?: InputMaybe<_IContentWhereInput>;
};

export type WebHeaderConfigrationBlock = IData &
  _IComponent &
  _IContent & {
    __typename?: "WebHeaderConfigrationBlock";
    HeaderCTA?: Maybe<ContentUrl>;
    MainNavigationHeader?: Maybe<Array<Maybe<_IContent>>>;
    SearchBarText?: Maybe<Scalars["String"]["output"]>;
    SiteLogoAltText?: Maybe<Scalars["String"]["output"]>;
    SiteLogoIcon?: Maybe<ContentReference>;
    SiteSearchEnable?: Maybe<Scalars["Boolean"]["output"]>;
    TopNavigationHeader?: Maybe<Array<Maybe<_IContent>>>;
    /** @deprecated Use `_link` field instead */
    _children?: Maybe<QueryRef>;
    _deleted?: Maybe<Scalars["Bool"]["output"]>;
    _fulltext?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
    _id?: Maybe<Scalars["String"]["output"]>;
    _link?: Maybe<QueryRef>;
    _metadata?: Maybe<IContentMetadata>;
    _modified?: Maybe<Scalars["Date"]["output"]>;
    _score?: Maybe<Scalars["Float"]["output"]>;
  };

export type WebHeaderConfigrationBlock_fulltextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type WebHeaderConfigrationBlock_linkArgs = {
  type?: InputMaybe<LinkTypes>;
};

export type WebHeaderConfigrationBlockAutocomplete = {
  __typename?: "WebHeaderConfigrationBlockAutocomplete";
  HeaderCTA?: Maybe<ContentUrlAutocomplete>;
  MainNavigationHeader?: Maybe<_IContentAutocomplete>;
  SiteLogoIcon?: Maybe<ContentReferenceAutocomplete>;
  TopNavigationHeader?: Maybe<_IContentAutocomplete>;
  _metadata?: Maybe<IContentMetadataAutocomplete>;
};

export type WebHeaderConfigrationBlockFacet = {
  __typename?: "WebHeaderConfigrationBlockFacet";
  HeaderCTA?: Maybe<ContentUrlFacet>;
  MainNavigationHeader?: Maybe<_IContentFacet>;
  SiteLogoIcon?: Maybe<ContentReferenceFacet>;
  TopNavigationHeader?: Maybe<_IContentFacet>;
  _metadata?: Maybe<IContentMetadataFacet>;
};

export type WebHeaderConfigrationBlockOrderByInput = {
  HeaderCTA?: InputMaybe<ContentUrlOrderByInput>;
  MainNavigationHeader?: InputMaybe<_IContentOrderByInput>;
  SiteLogoIcon?: InputMaybe<ContentReferenceOrderByInput>;
  TopNavigationHeader?: InputMaybe<_IContentOrderByInput>;
  _metadata?: InputMaybe<IContentMetadataOrderByInput>;
  _minimumScore?: InputMaybe<Scalars["Float"]["input"]>;
  _modified?: InputMaybe<OrderBy>;
  _ranking?: InputMaybe<Ranking>;
  /** The value needs to be a positive value, but cannot exceed the maximum value of an integer. In case it is exceeded, the maximum of an integer is used. In case of a negative value, semantic search will be disabled. */
  _semanticWeight?: InputMaybe<Scalars["Float"]["input"]>;
};

export type WebHeaderConfigrationBlockOutput = {
  __typename?: "WebHeaderConfigrationBlockOutput";
  autocomplete?: Maybe<WebHeaderConfigrationBlockAutocomplete>;
  cursor?: Maybe<Scalars["String"]["output"]>;
  facets?: Maybe<WebHeaderConfigrationBlockFacet>;
  item?: Maybe<WebHeaderConfigrationBlock>;
  items?: Maybe<Array<Maybe<WebHeaderConfigrationBlock>>>;
  total?: Maybe<Scalars["Int"]["output"]>;
};

export type WebHeaderConfigrationBlockOutputtotalArgs = {
  all?: InputMaybe<Scalars["Boolean"]["input"]>;
};

export type WebHeaderConfigrationBlockWhereInput = {
  HeaderCTA?: InputMaybe<ContentUrlWhereInput>;
  MainNavigationHeader?: InputMaybe<_IContentWhereInput>;
  SiteLogoIcon?: InputMaybe<ContentReferenceWhereInput>;
  TopNavigationHeader?: InputMaybe<_IContentWhereInput>;
  _and?: InputMaybe<Array<InputMaybe<WebHeaderConfigrationBlockWhereInput>>>;
  _fulltext?: InputMaybe<SearchableStringFilterInput>;
  _metadata?: InputMaybe<IContentMetadataWhereInput>;
  _modified?: InputMaybe<DateFilterInput>;
  _not?: InputMaybe<Array<InputMaybe<WebHeaderConfigrationBlockWhereInput>>>;
  _or?: InputMaybe<Array<InputMaybe<WebHeaderConfigrationBlockWhereInput>>>;
};

export type _Component = IData &
  _IComponent &
  _IContent & {
    __typename?: "_Component";
    /** @deprecated Use `_link` field instead */
    _children?: Maybe<QueryRef>;
    _deleted?: Maybe<Scalars["Bool"]["output"]>;
    _fulltext?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
    _id?: Maybe<Scalars["String"]["output"]>;
    _link?: Maybe<QueryRef>;
    _metadata?: Maybe<IContentMetadata>;
    _modified?: Maybe<Scalars["Date"]["output"]>;
    _score?: Maybe<Scalars["Float"]["output"]>;
  };

export type _Component_fulltextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type _Component_linkArgs = {
  type?: InputMaybe<LinkTypes>;
};

export type _ComponentAutocomplete = {
  __typename?: "_ComponentAutocomplete";
  _metadata?: Maybe<IContentMetadataAutocomplete>;
};

export type _ComponentFacet = {
  __typename?: "_ComponentFacet";
  _metadata?: Maybe<IContentMetadataFacet>;
};

export type _ComponentOrderByInput = {
  _metadata?: InputMaybe<IContentMetadataOrderByInput>;
  _minimumScore?: InputMaybe<Scalars["Float"]["input"]>;
  _modified?: InputMaybe<OrderBy>;
  _ranking?: InputMaybe<Ranking>;
  /** The value needs to be a positive value, but cannot exceed the maximum value of an integer. In case it is exceeded, the maximum of an integer is used. In case of a negative value, semantic search will be disabled. */
  _semanticWeight?: InputMaybe<Scalars["Float"]["input"]>;
};

export type _ComponentOutput = {
  __typename?: "_ComponentOutput";
  autocomplete?: Maybe<_ComponentAutocomplete>;
  cursor?: Maybe<Scalars["String"]["output"]>;
  facets?: Maybe<_ComponentFacet>;
  item?: Maybe<_IComponent>;
  items?: Maybe<Array<Maybe<_IComponent>>>;
  total?: Maybe<Scalars["Int"]["output"]>;
};

export type _ComponentOutputtotalArgs = {
  all?: InputMaybe<Scalars["Boolean"]["input"]>;
};

export type _ComponentWhereInput = {
  _and?: InputMaybe<Array<InputMaybe<_ComponentWhereInput>>>;
  _fulltext?: InputMaybe<SearchableStringFilterInput>;
  _metadata?: InputMaybe<IContentMetadataWhereInput>;
  _modified?: InputMaybe<DateFilterInput>;
  _not?: InputMaybe<Array<InputMaybe<_ComponentWhereInput>>>;
  _or?: InputMaybe<Array<InputMaybe<_ComponentWhereInput>>>;
};

export type _Content = IData &
  _IContent & {
    __typename?: "_Content";
    /** @deprecated Use `_link` field instead */
    _children?: Maybe<QueryRef>;
    _deleted?: Maybe<Scalars["Bool"]["output"]>;
    _fulltext?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
    _id?: Maybe<Scalars["String"]["output"]>;
    _link?: Maybe<QueryRef>;
    _metadata?: Maybe<IContentMetadata>;
    _modified?: Maybe<Scalars["Date"]["output"]>;
    _score?: Maybe<Scalars["Float"]["output"]>;
  };

export type _Content_fulltextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type _Content_linkArgs = {
  type?: InputMaybe<LinkTypes>;
};

export type _ContentAutocomplete = {
  __typename?: "_ContentAutocomplete";
  _metadata?: Maybe<IContentMetadataAutocomplete>;
};

export type _ContentFacet = {
  __typename?: "_ContentFacet";
  _metadata?: Maybe<IContentMetadataFacet>;
};

export type _ContentOrderByInput = {
  _metadata?: InputMaybe<IContentMetadataOrderByInput>;
  _minimumScore?: InputMaybe<Scalars["Float"]["input"]>;
  _modified?: InputMaybe<OrderBy>;
  _ranking?: InputMaybe<Ranking>;
  /** The value needs to be a positive value, but cannot exceed the maximum value of an integer. In case it is exceeded, the maximum of an integer is used. In case of a negative value, semantic search will be disabled. */
  _semanticWeight?: InputMaybe<Scalars["Float"]["input"]>;
};

export type _ContentOutput = {
  __typename?: "_ContentOutput";
  autocomplete?: Maybe<_ContentAutocomplete>;
  cursor?: Maybe<Scalars["String"]["output"]>;
  facets?: Maybe<_ContentFacet>;
  item?: Maybe<_IContent>;
  items?: Maybe<Array<Maybe<_IContent>>>;
  total?: Maybe<Scalars["Int"]["output"]>;
};

export type _ContentOutputtotalArgs = {
  all?: InputMaybe<Scalars["Boolean"]["input"]>;
};

export type _ContentWhereInput = {
  _and?: InputMaybe<Array<InputMaybe<_ContentWhereInput>>>;
  _fulltext?: InputMaybe<SearchableStringFilterInput>;
  _metadata?: InputMaybe<IContentMetadataWhereInput>;
  _modified?: InputMaybe<DateFilterInput>;
  _not?: InputMaybe<Array<InputMaybe<_ContentWhereInput>>>;
  _or?: InputMaybe<Array<InputMaybe<_ContentWhereInput>>>;
};

export type _Experience = IData &
  _IContent &
  _IExperience &
  _IPage & {
    __typename?: "_Experience";
    /** @deprecated Use `_link` field instead */
    _children?: Maybe<QueryRef>;
    _deleted?: Maybe<Scalars["Bool"]["output"]>;
    _fulltext?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
    _id?: Maybe<Scalars["String"]["output"]>;
    _link?: Maybe<QueryRef>;
    _metadata?: Maybe<IContentMetadata>;
    _modified?: Maybe<Scalars["Date"]["output"]>;
    _score?: Maybe<Scalars["Float"]["output"]>;
    composition?: Maybe<CompositionStructureNode>;
  };

export type _Experience_fulltextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type _Experience_linkArgs = {
  type?: InputMaybe<LinkTypes>;
};

export type _ExperienceAutocomplete = {
  __typename?: "_ExperienceAutocomplete";
  _metadata?: Maybe<IContentMetadataAutocomplete>;
  composition?: Maybe<CompositionStructureNodeAutocomplete>;
};

export type _ExperienceFacet = {
  __typename?: "_ExperienceFacet";
  _metadata?: Maybe<IContentMetadataFacet>;
  composition?: Maybe<CompositionStructureNodeFacet>;
};

export type _ExperienceOrderByInput = {
  _metadata?: InputMaybe<IContentMetadataOrderByInput>;
  _minimumScore?: InputMaybe<Scalars["Float"]["input"]>;
  _modified?: InputMaybe<OrderBy>;
  _ranking?: InputMaybe<Ranking>;
  /** The value needs to be a positive value, but cannot exceed the maximum value of an integer. In case it is exceeded, the maximum of an integer is used. In case of a negative value, semantic search will be disabled. */
  _semanticWeight?: InputMaybe<Scalars["Float"]["input"]>;
  composition?: InputMaybe<CompositionStructureNodeOrderByInput>;
};

export type _ExperienceOutput = {
  __typename?: "_ExperienceOutput";
  autocomplete?: Maybe<_ExperienceAutocomplete>;
  cursor?: Maybe<Scalars["String"]["output"]>;
  facets?: Maybe<_ExperienceFacet>;
  item?: Maybe<_IExperience>;
  items?: Maybe<Array<Maybe<_IExperience>>>;
  total?: Maybe<Scalars["Int"]["output"]>;
};

export type _ExperienceOutputtotalArgs = {
  all?: InputMaybe<Scalars["Boolean"]["input"]>;
};

export type _ExperienceWhereInput = {
  _and?: InputMaybe<Array<InputMaybe<_ExperienceWhereInput>>>;
  _fulltext?: InputMaybe<SearchableStringFilterInput>;
  _metadata?: InputMaybe<IContentMetadataWhereInput>;
  _modified?: InputMaybe<DateFilterInput>;
  _not?: InputMaybe<Array<InputMaybe<_ExperienceWhereInput>>>;
  _or?: InputMaybe<Array<InputMaybe<_ExperienceWhereInput>>>;
  composition?: InputMaybe<CompositionStructureNodeWhereInput>;
};

export type _Folder = IData &
  _IContent &
  _IFolder & {
    __typename?: "_Folder";
    /** @deprecated Use `_link` field instead */
    _children?: Maybe<QueryRef>;
    _deleted?: Maybe<Scalars["Bool"]["output"]>;
    _fulltext?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
    _id?: Maybe<Scalars["String"]["output"]>;
    _link?: Maybe<QueryRef>;
    _metadata?: Maybe<IContentMetadata>;
    _modified?: Maybe<Scalars["Date"]["output"]>;
    _score?: Maybe<Scalars["Float"]["output"]>;
  };

export type _Folder_fulltextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type _Folder_linkArgs = {
  type?: InputMaybe<LinkTypes>;
};

export type _FolderAutocomplete = {
  __typename?: "_FolderAutocomplete";
  _metadata?: Maybe<IContentMetadataAutocomplete>;
};

export type _FolderFacet = {
  __typename?: "_FolderFacet";
  _metadata?: Maybe<IContentMetadataFacet>;
};

export type _FolderOrderByInput = {
  _metadata?: InputMaybe<IContentMetadataOrderByInput>;
  _minimumScore?: InputMaybe<Scalars["Float"]["input"]>;
  _modified?: InputMaybe<OrderBy>;
  _ranking?: InputMaybe<Ranking>;
  /** The value needs to be a positive value, but cannot exceed the maximum value of an integer. In case it is exceeded, the maximum of an integer is used. In case of a negative value, semantic search will be disabled. */
  _semanticWeight?: InputMaybe<Scalars["Float"]["input"]>;
};

export type _FolderOutput = {
  __typename?: "_FolderOutput";
  autocomplete?: Maybe<_FolderAutocomplete>;
  cursor?: Maybe<Scalars["String"]["output"]>;
  facets?: Maybe<_FolderFacet>;
  item?: Maybe<_IFolder>;
  items?: Maybe<Array<Maybe<_IFolder>>>;
  total?: Maybe<Scalars["Int"]["output"]>;
};

export type _FolderOutputtotalArgs = {
  all?: InputMaybe<Scalars["Boolean"]["input"]>;
};

export type _FolderWhereInput = {
  _and?: InputMaybe<Array<InputMaybe<_FolderWhereInput>>>;
  _fulltext?: InputMaybe<SearchableStringFilterInput>;
  _metadata?: InputMaybe<IContentMetadataWhereInput>;
  _modified?: InputMaybe<DateFilterInput>;
  _not?: InputMaybe<Array<InputMaybe<_FolderWhereInput>>>;
  _or?: InputMaybe<Array<InputMaybe<_FolderWhereInput>>>;
};

export type _IComponent = {
  /** @deprecated Use `_link` field instead */
  _children?: Maybe<QueryRef>;
  _deleted?: Maybe<Scalars["Bool"]["output"]>;
  _fulltext?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
  _id?: Maybe<Scalars["String"]["output"]>;
  _link?: Maybe<QueryRef>;
  _metadata?: Maybe<IContentMetadata>;
  _modified?: Maybe<Scalars["Date"]["output"]>;
  _score?: Maybe<Scalars["Float"]["output"]>;
};

export type _IComponent_fulltextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type _IComponent_linkArgs = {
  type?: InputMaybe<LinkTypes>;
};

export type _IComponentFacet = {
  __typename?: "_IComponentFacet";
  _metadata?: Maybe<IContentMetadataFacet>;
};

export type _IComponentOrderByInput = {
  _metadata?: InputMaybe<IContentMetadataOrderByInput>;
  _minimumScore?: InputMaybe<Scalars["Float"]["input"]>;
  _modified?: InputMaybe<OrderBy>;
  _ranking?: InputMaybe<Ranking>;
  /** The value needs to be a positive value, but cannot exceed the maximum value of an integer. In case it is exceeded, the maximum of an integer is used. In case of a negative value, semantic search will be disabled. */
  _semanticWeight?: InputMaybe<Scalars["Float"]["input"]>;
};

export type _IComponentWhereInput = {
  _and?: InputMaybe<Array<InputMaybe<_IComponentWhereInput>>>;
  _fulltext?: InputMaybe<SearchableStringFilterInput>;
  _metadata?: InputMaybe<IContentMetadataWhereInput>;
  _modified?: InputMaybe<DateFilterInput>;
  _not?: InputMaybe<Array<InputMaybe<_IComponentWhereInput>>>;
  _or?: InputMaybe<Array<InputMaybe<_IComponentWhereInput>>>;
};

export type _IContent = {
  /** @deprecated Use `_link` field instead */
  _children?: Maybe<QueryRef>;
  _deleted?: Maybe<Scalars["Bool"]["output"]>;
  _fulltext?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
  _id?: Maybe<Scalars["String"]["output"]>;
  _link?: Maybe<QueryRef>;
  _metadata?: Maybe<IContentMetadata>;
  _modified?: Maybe<Scalars["Date"]["output"]>;
  _score?: Maybe<Scalars["Float"]["output"]>;
};

export type _IContent_fulltextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type _IContent_linkArgs = {
  type?: InputMaybe<LinkTypes>;
};

export type _IContentAutocomplete = {
  __typename?: "_IContentAutocomplete";
  _metadata?: Maybe<IContentMetadataAutocomplete>;
};

export type _IContentFacet = {
  __typename?: "_IContentFacet";
  _metadata?: Maybe<IContentMetadataFacet>;
};

export type _IContentOrderByInput = {
  _metadata?: InputMaybe<IContentMetadataOrderByInput>;
  _minimumScore?: InputMaybe<Scalars["Float"]["input"]>;
  _modified?: InputMaybe<OrderBy>;
  _ranking?: InputMaybe<Ranking>;
  /** The value needs to be a positive value, but cannot exceed the maximum value of an integer. In case it is exceeded, the maximum of an integer is used. In case of a negative value, semantic search will be disabled. */
  _semanticWeight?: InputMaybe<Scalars["Float"]["input"]>;
};

export type _IContentWhereInput = {
  _and?: InputMaybe<Array<InputMaybe<_IContentWhereInput>>>;
  _fulltext?: InputMaybe<SearchableStringFilterInput>;
  _metadata?: InputMaybe<IContentMetadataWhereInput>;
  _modified?: InputMaybe<DateFilterInput>;
  _not?: InputMaybe<Array<InputMaybe<_IContentWhereInput>>>;
  _or?: InputMaybe<Array<InputMaybe<_IContentWhereInput>>>;
};

export type _IExperience = {
  /** @deprecated Use `_link` field instead */
  _children?: Maybe<QueryRef>;
  _deleted?: Maybe<Scalars["Bool"]["output"]>;
  _fulltext?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
  _id?: Maybe<Scalars["String"]["output"]>;
  _link?: Maybe<QueryRef>;
  _metadata?: Maybe<IContentMetadata>;
  _modified?: Maybe<Scalars["Date"]["output"]>;
  _score?: Maybe<Scalars["Float"]["output"]>;
  composition?: Maybe<CompositionStructureNode>;
};

export type _IExperience_fulltextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type _IExperience_linkArgs = {
  type?: InputMaybe<LinkTypes>;
};

export type _IFolder = {
  /** @deprecated Use `_link` field instead */
  _children?: Maybe<QueryRef>;
  _deleted?: Maybe<Scalars["Bool"]["output"]>;
  _fulltext?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
  _id?: Maybe<Scalars["String"]["output"]>;
  _link?: Maybe<QueryRef>;
  _metadata?: Maybe<IContentMetadata>;
  _modified?: Maybe<Scalars["Date"]["output"]>;
  _score?: Maybe<Scalars["Float"]["output"]>;
};

export type _IFolder_fulltextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type _IFolder_linkArgs = {
  type?: InputMaybe<LinkTypes>;
};

export type _IImage = {
  /** @deprecated Use `_link` field instead */
  _children?: Maybe<QueryRef>;
  _deleted?: Maybe<Scalars["Bool"]["output"]>;
  _fulltext?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
  _id?: Maybe<Scalars["String"]["output"]>;
  _link?: Maybe<QueryRef>;
  _metadata?: Maybe<IContentMetadata>;
  _modified?: Maybe<Scalars["Date"]["output"]>;
  _score?: Maybe<Scalars["Float"]["output"]>;
};

export type _IImage_fulltextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type _IImage_linkArgs = {
  type?: InputMaybe<LinkTypes>;
};

export type _IMedia = {
  /** @deprecated Use `_link` field instead */
  _children?: Maybe<QueryRef>;
  _deleted?: Maybe<Scalars["Bool"]["output"]>;
  _fulltext?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
  _id?: Maybe<Scalars["String"]["output"]>;
  _link?: Maybe<QueryRef>;
  _metadata?: Maybe<IContentMetadata>;
  _modified?: Maybe<Scalars["Date"]["output"]>;
  _score?: Maybe<Scalars["Float"]["output"]>;
};

export type _IMedia_fulltextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type _IMedia_linkArgs = {
  type?: InputMaybe<LinkTypes>;
};

export type _IPage = {
  /** @deprecated Use `_link` field instead */
  _children?: Maybe<QueryRef>;
  _deleted?: Maybe<Scalars["Bool"]["output"]>;
  _fulltext?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
  _id?: Maybe<Scalars["String"]["output"]>;
  _link?: Maybe<QueryRef>;
  _metadata?: Maybe<IContentMetadata>;
  _modified?: Maybe<Scalars["Date"]["output"]>;
  _score?: Maybe<Scalars["Float"]["output"]>;
};

export type _IPage_fulltextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type _IPage_linkArgs = {
  type?: InputMaybe<LinkTypes>;
};

export type _ISection = {
  /** @deprecated Use `_link` field instead */
  _children?: Maybe<QueryRef>;
  _deleted?: Maybe<Scalars["Bool"]["output"]>;
  _fulltext?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
  _id?: Maybe<Scalars["String"]["output"]>;
  _link?: Maybe<QueryRef>;
  _metadata?: Maybe<IContentMetadata>;
  _modified?: Maybe<Scalars["Date"]["output"]>;
  _score?: Maybe<Scalars["Float"]["output"]>;
  composition?: Maybe<CompositionStructureNode>;
};

export type _ISection_fulltextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type _ISection_linkArgs = {
  type?: InputMaybe<LinkTypes>;
};

export type _IVideo = {
  /** @deprecated Use `_link` field instead */
  _children?: Maybe<QueryRef>;
  _deleted?: Maybe<Scalars["Bool"]["output"]>;
  _fulltext?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
  _id?: Maybe<Scalars["String"]["output"]>;
  _link?: Maybe<QueryRef>;
  _metadata?: Maybe<IContentMetadata>;
  _modified?: Maybe<Scalars["Date"]["output"]>;
  _score?: Maybe<Scalars["Float"]["output"]>;
};

export type _IVideo_fulltextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type _IVideo_linkArgs = {
  type?: InputMaybe<LinkTypes>;
};

export type _Image = IData &
  _IContent &
  _IImage &
  _IMedia & {
    __typename?: "_Image";
    /** @deprecated Use `_link` field instead */
    _children?: Maybe<QueryRef>;
    _deleted?: Maybe<Scalars["Bool"]["output"]>;
    _fulltext?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
    _id?: Maybe<Scalars["String"]["output"]>;
    _link?: Maybe<QueryRef>;
    _metadata?: Maybe<IContentMetadata>;
    _modified?: Maybe<Scalars["Date"]["output"]>;
    _score?: Maybe<Scalars["Float"]["output"]>;
  };

export type _Image_fulltextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type _Image_linkArgs = {
  type?: InputMaybe<LinkTypes>;
};

export type _ImageAutocomplete = {
  __typename?: "_ImageAutocomplete";
  _metadata?: Maybe<IContentMetadataAutocomplete>;
};

export type _ImageFacet = {
  __typename?: "_ImageFacet";
  _metadata?: Maybe<IContentMetadataFacet>;
};

export type _ImageOrderByInput = {
  _metadata?: InputMaybe<IContentMetadataOrderByInput>;
  _minimumScore?: InputMaybe<Scalars["Float"]["input"]>;
  _modified?: InputMaybe<OrderBy>;
  _ranking?: InputMaybe<Ranking>;
  /** The value needs to be a positive value, but cannot exceed the maximum value of an integer. In case it is exceeded, the maximum of an integer is used. In case of a negative value, semantic search will be disabled. */
  _semanticWeight?: InputMaybe<Scalars["Float"]["input"]>;
};

export type _ImageOutput = {
  __typename?: "_ImageOutput";
  autocomplete?: Maybe<_ImageAutocomplete>;
  cursor?: Maybe<Scalars["String"]["output"]>;
  facets?: Maybe<_ImageFacet>;
  item?: Maybe<_IImage>;
  items?: Maybe<Array<Maybe<_IImage>>>;
  total?: Maybe<Scalars["Int"]["output"]>;
};

export type _ImageOutputtotalArgs = {
  all?: InputMaybe<Scalars["Boolean"]["input"]>;
};

export type _ImageWhereInput = {
  _and?: InputMaybe<Array<InputMaybe<_ImageWhereInput>>>;
  _fulltext?: InputMaybe<SearchableStringFilterInput>;
  _metadata?: InputMaybe<IContentMetadataWhereInput>;
  _modified?: InputMaybe<DateFilterInput>;
  _not?: InputMaybe<Array<InputMaybe<_ImageWhereInput>>>;
  _or?: InputMaybe<Array<InputMaybe<_ImageWhereInput>>>;
};

export type _Media = IData &
  _IContent &
  _IMedia & {
    __typename?: "_Media";
    /** @deprecated Use `_link` field instead */
    _children?: Maybe<QueryRef>;
    _deleted?: Maybe<Scalars["Bool"]["output"]>;
    _fulltext?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
    _id?: Maybe<Scalars["String"]["output"]>;
    _link?: Maybe<QueryRef>;
    _metadata?: Maybe<IContentMetadata>;
    _modified?: Maybe<Scalars["Date"]["output"]>;
    _score?: Maybe<Scalars["Float"]["output"]>;
  };

export type _Media_fulltextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type _Media_linkArgs = {
  type?: InputMaybe<LinkTypes>;
};

export type _MediaAutocomplete = {
  __typename?: "_MediaAutocomplete";
  _metadata?: Maybe<IContentMetadataAutocomplete>;
};

export type _MediaFacet = {
  __typename?: "_MediaFacet";
  _metadata?: Maybe<IContentMetadataFacet>;
};

export type _MediaOrderByInput = {
  _metadata?: InputMaybe<IContentMetadataOrderByInput>;
  _minimumScore?: InputMaybe<Scalars["Float"]["input"]>;
  _modified?: InputMaybe<OrderBy>;
  _ranking?: InputMaybe<Ranking>;
  /** The value needs to be a positive value, but cannot exceed the maximum value of an integer. In case it is exceeded, the maximum of an integer is used. In case of a negative value, semantic search will be disabled. */
  _semanticWeight?: InputMaybe<Scalars["Float"]["input"]>;
};

export type _MediaOutput = {
  __typename?: "_MediaOutput";
  autocomplete?: Maybe<_MediaAutocomplete>;
  cursor?: Maybe<Scalars["String"]["output"]>;
  facets?: Maybe<_MediaFacet>;
  item?: Maybe<_IMedia>;
  items?: Maybe<Array<Maybe<_IMedia>>>;
  total?: Maybe<Scalars["Int"]["output"]>;
};

export type _MediaOutputtotalArgs = {
  all?: InputMaybe<Scalars["Boolean"]["input"]>;
};

export type _MediaWhereInput = {
  _and?: InputMaybe<Array<InputMaybe<_MediaWhereInput>>>;
  _fulltext?: InputMaybe<SearchableStringFilterInput>;
  _metadata?: InputMaybe<IContentMetadataWhereInput>;
  _modified?: InputMaybe<DateFilterInput>;
  _not?: InputMaybe<Array<InputMaybe<_MediaWhereInput>>>;
  _or?: InputMaybe<Array<InputMaybe<_MediaWhereInput>>>;
};

export type _Page = IData &
  _IContent &
  _IPage & {
    __typename?: "_Page";
    /** @deprecated Use `_link` field instead */
    _children?: Maybe<QueryRef>;
    _deleted?: Maybe<Scalars["Bool"]["output"]>;
    _fulltext?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
    _id?: Maybe<Scalars["String"]["output"]>;
    _link?: Maybe<QueryRef>;
    _metadata?: Maybe<IContentMetadata>;
    _modified?: Maybe<Scalars["Date"]["output"]>;
    _score?: Maybe<Scalars["Float"]["output"]>;
  };

export type _Page_fulltextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type _Page_linkArgs = {
  type?: InputMaybe<LinkTypes>;
};

export type _PageAutocomplete = {
  __typename?: "_PageAutocomplete";
  _metadata?: Maybe<IContentMetadataAutocomplete>;
};

export type _PageFacet = {
  __typename?: "_PageFacet";
  _metadata?: Maybe<IContentMetadataFacet>;
};

export type _PageOrderByInput = {
  _metadata?: InputMaybe<IContentMetadataOrderByInput>;
  _minimumScore?: InputMaybe<Scalars["Float"]["input"]>;
  _modified?: InputMaybe<OrderBy>;
  _ranking?: InputMaybe<Ranking>;
  /** The value needs to be a positive value, but cannot exceed the maximum value of an integer. In case it is exceeded, the maximum of an integer is used. In case of a negative value, semantic search will be disabled. */
  _semanticWeight?: InputMaybe<Scalars["Float"]["input"]>;
};

export type _PageOutput = {
  __typename?: "_PageOutput";
  autocomplete?: Maybe<_PageAutocomplete>;
  cursor?: Maybe<Scalars["String"]["output"]>;
  facets?: Maybe<_PageFacet>;
  item?: Maybe<_IPage>;
  items?: Maybe<Array<Maybe<_IPage>>>;
  total?: Maybe<Scalars["Int"]["output"]>;
};

export type _PageOutputtotalArgs = {
  all?: InputMaybe<Scalars["Boolean"]["input"]>;
};

export type _PageWhereInput = {
  _and?: InputMaybe<Array<InputMaybe<_PageWhereInput>>>;
  _fulltext?: InputMaybe<SearchableStringFilterInput>;
  _metadata?: InputMaybe<IContentMetadataWhereInput>;
  _modified?: InputMaybe<DateFilterInput>;
  _not?: InputMaybe<Array<InputMaybe<_PageWhereInput>>>;
  _or?: InputMaybe<Array<InputMaybe<_PageWhereInput>>>;
};

export type _Section = IData &
  _IComponent &
  _IContent &
  _ISection & {
    __typename?: "_Section";
    /** @deprecated Use `_link` field instead */
    _children?: Maybe<QueryRef>;
    _deleted?: Maybe<Scalars["Bool"]["output"]>;
    _fulltext?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
    _id?: Maybe<Scalars["String"]["output"]>;
    _link?: Maybe<QueryRef>;
    _metadata?: Maybe<IContentMetadata>;
    _modified?: Maybe<Scalars["Date"]["output"]>;
    _score?: Maybe<Scalars["Float"]["output"]>;
    composition?: Maybe<CompositionStructureNode>;
  };

export type _Section_fulltextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type _Section_linkArgs = {
  type?: InputMaybe<LinkTypes>;
};

export type _SectionAutocomplete = {
  __typename?: "_SectionAutocomplete";
  _metadata?: Maybe<IContentMetadataAutocomplete>;
  composition?: Maybe<CompositionStructureNodeAutocomplete>;
};

export type _SectionFacet = {
  __typename?: "_SectionFacet";
  _metadata?: Maybe<IContentMetadataFacet>;
  composition?: Maybe<CompositionStructureNodeFacet>;
};

export type _SectionOrderByInput = {
  _metadata?: InputMaybe<IContentMetadataOrderByInput>;
  _minimumScore?: InputMaybe<Scalars["Float"]["input"]>;
  _modified?: InputMaybe<OrderBy>;
  _ranking?: InputMaybe<Ranking>;
  /** The value needs to be a positive value, but cannot exceed the maximum value of an integer. In case it is exceeded, the maximum of an integer is used. In case of a negative value, semantic search will be disabled. */
  _semanticWeight?: InputMaybe<Scalars["Float"]["input"]>;
  composition?: InputMaybe<CompositionStructureNodeOrderByInput>;
};

export type _SectionOutput = {
  __typename?: "_SectionOutput";
  autocomplete?: Maybe<_SectionAutocomplete>;
  cursor?: Maybe<Scalars["String"]["output"]>;
  facets?: Maybe<_SectionFacet>;
  item?: Maybe<_ISection>;
  items?: Maybe<Array<Maybe<_ISection>>>;
  total?: Maybe<Scalars["Int"]["output"]>;
};

export type _SectionOutputtotalArgs = {
  all?: InputMaybe<Scalars["Boolean"]["input"]>;
};

export type _SectionWhereInput = {
  _and?: InputMaybe<Array<InputMaybe<_SectionWhereInput>>>;
  _fulltext?: InputMaybe<SearchableStringFilterInput>;
  _metadata?: InputMaybe<IContentMetadataWhereInput>;
  _modified?: InputMaybe<DateFilterInput>;
  _not?: InputMaybe<Array<InputMaybe<_SectionWhereInput>>>;
  _or?: InputMaybe<Array<InputMaybe<_SectionWhereInput>>>;
  composition?: InputMaybe<CompositionStructureNodeWhereInput>;
};

export type _Video = IData &
  _IContent &
  _IMedia &
  _IVideo & {
    __typename?: "_Video";
    /** @deprecated Use `_link` field instead */
    _children?: Maybe<QueryRef>;
    _deleted?: Maybe<Scalars["Bool"]["output"]>;
    _fulltext?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
    _id?: Maybe<Scalars["String"]["output"]>;
    _link?: Maybe<QueryRef>;
    _metadata?: Maybe<IContentMetadata>;
    _modified?: Maybe<Scalars["Date"]["output"]>;
    _score?: Maybe<Scalars["Float"]["output"]>;
  };

export type _Video_fulltextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type _Video_linkArgs = {
  type?: InputMaybe<LinkTypes>;
};

export type _VideoAutocomplete = {
  __typename?: "_VideoAutocomplete";
  _metadata?: Maybe<IContentMetadataAutocomplete>;
};

export type _VideoFacet = {
  __typename?: "_VideoFacet";
  _metadata?: Maybe<IContentMetadataFacet>;
};

export type _VideoOrderByInput = {
  _metadata?: InputMaybe<IContentMetadataOrderByInput>;
  _minimumScore?: InputMaybe<Scalars["Float"]["input"]>;
  _modified?: InputMaybe<OrderBy>;
  _ranking?: InputMaybe<Ranking>;
  /** The value needs to be a positive value, but cannot exceed the maximum value of an integer. In case it is exceeded, the maximum of an integer is used. In case of a negative value, semantic search will be disabled. */
  _semanticWeight?: InputMaybe<Scalars["Float"]["input"]>;
};

export type _VideoOutput = {
  __typename?: "_VideoOutput";
  autocomplete?: Maybe<_VideoAutocomplete>;
  cursor?: Maybe<Scalars["String"]["output"]>;
  facets?: Maybe<_VideoFacet>;
  item?: Maybe<_IVideo>;
  items?: Maybe<Array<Maybe<_IVideo>>>;
  total?: Maybe<Scalars["Int"]["output"]>;
};

export type _VideoOutputtotalArgs = {
  all?: InputMaybe<Scalars["Boolean"]["input"]>;
};

export type _VideoWhereInput = {
  _and?: InputMaybe<Array<InputMaybe<_VideoWhereInput>>>;
  _fulltext?: InputMaybe<SearchableStringFilterInput>;
  _metadata?: InputMaybe<IContentMetadataWhereInput>;
  _modified?: InputMaybe<DateFilterInput>;
  _not?: InputMaybe<Array<InputMaybe<_VideoWhereInput>>>;
  _or?: InputMaybe<Array<InputMaybe<_VideoWhereInput>>>;
};

export enum system_Locales {
  ALL = "ALL",
  NEUTRAL = "NEUTRAL",
}

export type test = IData &
  _IComponent &
  _IContent & {
    __typename?: "test";
    /** @deprecated Use `_link` field instead */
    _children?: Maybe<QueryRef>;
    _deleted?: Maybe<Scalars["Bool"]["output"]>;
    _fulltext?: Maybe<Array<Maybe<Scalars["String"]["output"]>>>;
    _id?: Maybe<Scalars["String"]["output"]>;
    _link?: Maybe<QueryRef>;
    _metadata?: Maybe<IContentMetadata>;
    _modified?: Maybe<Scalars["Date"]["output"]>;
    _score?: Maybe<Scalars["Float"]["output"]>;
    text?: Maybe<RichText>;
  };

export type test_fulltextArgs = {
  highlight?: InputMaybe<HighlightOptions>;
};

export type test_linkArgs = {
  type?: InputMaybe<LinkTypes>;
};

export type testAutocomplete = {
  __typename?: "testAutocomplete";
  _metadata?: Maybe<IContentMetadataAutocomplete>;
  text?: Maybe<RichTextAutocomplete>;
};

export type testFacet = {
  __typename?: "testFacet";
  _metadata?: Maybe<IContentMetadataFacet>;
  text?: Maybe<RichTextFacet>;
};

export type testOrderByInput = {
  _metadata?: InputMaybe<IContentMetadataOrderByInput>;
  _minimumScore?: InputMaybe<Scalars["Float"]["input"]>;
  _modified?: InputMaybe<OrderBy>;
  _ranking?: InputMaybe<Ranking>;
  /** The value needs to be a positive value, but cannot exceed the maximum value of an integer. In case it is exceeded, the maximum of an integer is used. In case of a negative value, semantic search will be disabled. */
  _semanticWeight?: InputMaybe<Scalars["Float"]["input"]>;
  text?: InputMaybe<RichTextOrderByInput>;
};

export type testOutput = {
  __typename?: "testOutput";
  autocomplete?: Maybe<testAutocomplete>;
  cursor?: Maybe<Scalars["String"]["output"]>;
  facets?: Maybe<testFacet>;
  item?: Maybe<test>;
  items?: Maybe<Array<Maybe<test>>>;
  total?: Maybe<Scalars["Int"]["output"]>;
};

export type testOutputtotalArgs = {
  all?: InputMaybe<Scalars["Boolean"]["input"]>;
};

export type testWhereInput = {
  _and?: InputMaybe<Array<InputMaybe<testWhereInput>>>;
  _fulltext?: InputMaybe<SearchableStringFilterInput>;
  _metadata?: InputMaybe<IContentMetadataWhereInput>;
  _modified?: InputMaybe<DateFilterInput>;
  _not?: InputMaybe<Array<InputMaybe<testWhereInput>>>;
  _or?: InputMaybe<Array<InputMaybe<testWhereInput>>>;
  text?: InputMaybe<RichTextWhereInput>;
};

export type BannerItemElementDataFragment = {
  __typename?: "BannerItemElement";
  HeadingText?: string | null;
  SubHeading?: string | null;
  OverlayColor?: string | null;
  OverlayOpacity?: number | null;
  Alt?: string | null;
  IsFullWidthImage?: boolean | null;
  Loading?: string | null;
  ButtonText?: string | null;
  CssClass?: string | null;
  RichText?: {
    __typename?: "RichText";
    json?: any | null;
    html?: string | null;
  } | null;
  BackgroundLink?:
    | ({ __typename?: "ContentUrl" } & {
        " $fragmentRefs"?: { LinkDataFragment: LinkDataFragment };
      })
    | null;
  ImageDesktop?:
    | ({ __typename?: "ContentReference" } & {
        " $fragmentRefs"?: { ReferenceDataFragment: ReferenceDataFragment };
      })
    | null;
  ImageMobile?:
    | ({ __typename?: "ContentReference" } & {
        " $fragmentRefs"?: { ReferenceDataFragment: ReferenceDataFragment };
      })
    | null;
  ButtonLink?:
    | ({ __typename?: "ContentUrl" } & {
        " $fragmentRefs"?: { LinkDataFragment: LinkDataFragment };
      })
    | null;
} & { " $fragmentName"?: "BannerItemElementDataFragment" };

export type ButtonElementDataFragment = {
  __typename?: "ButtonElement";
  ButtonText?: string | null;
  className?: string | null;
  ButtonLink?:
    | ({ __typename?: "ContentUrl" } & {
        " $fragmentRefs"?: { LinkDataFragment: LinkDataFragment };
      })
    | null;
} & { " $fragmentName"?: "ButtonElementDataFragment" };

export type CompanyDataFragment = {
  __typename?: "Company";
  Name?: string | null;
  Logo?:
    | ({ __typename?: "ContentReference" } & {
        " $fragmentRefs"?: { ReferenceDataFragment: ReferenceDataFragment };
      })
    | null;
} & { " $fragmentName"?: "CompanyDataFragment" };

export type ContainerElementDataFragment = {
  __typename?: "ContainerElement";
  TypeOfItems?: string | null;
  Items?: Array<
    | ({ __typename?: "ContentReference" } & {
        " $fragmentRefs"?: { ReferenceDataFragment: ReferenceDataFragment };
      })
    | null
  > | null;
} & { " $fragmentName"?: "ContainerElementDataFragment" };

export type ContentTextElementDataFragment = {
  __typename?: "ContentTextElement";
  HeadingText?: string | null;
  Paragraph?: {
    __typename?: "RichText";
    json?: any | null;
    html?: string | null;
  } | null;
} & { " $fragmentName"?: "ContentTextElementDataFragment" };

export type DictionaryDataFragment = {
  __typename?: "Dictionary";
  DictionaryKey?: string | null;
  DictionaryItems?: Array<
    | ({ __typename?: "DictionaryItemProperty" } & {
        " $fragmentRefs"?: {
          DictionaryItemPropertyDataFragment: DictionaryItemPropertyDataFragment;
        };
      })
    | null
  > | null;
} & { " $fragmentName"?: "DictionaryDataFragment" };

export type DictionaryItemDataFragment = {
  __typename?: "DictionaryItem";
  DictionaryItemKey?: string | null;
  DictionaryItemValue?: string | null;
} & { " $fragmentName"?: "DictionaryItemDataFragment" };

export type DictionaryItemPropertyDataFragment = {
  __typename?: "DictionaryItemProperty";
  DictionaryItemKey?: string | null;
  DictionaryItemValue?: string | null;
} & { " $fragmentName"?: "DictionaryItemPropertyDataFragment" };

export type ExpandableTextDataFragment = {
  __typename?: "ExpandableText";
  Threshold?: number | null;
  ShowLessText?: string | null;
  ReadMoreText?: string | null;
  MobileThreshold?: number | null;
  ContentText?: {
    __typename?: "RichText";
    json?: any | null;
    html?: string | null;
  } | null;
} & { " $fragmentName"?: "ExpandableTextDataFragment" };

export type FAQsSectionDataFragment = {
  __typename?: "FAQsSection";
  HeadingText?: string | null;
  allowMultiple?: boolean | null;
  ListItem?: Array<
    | { __typename?: "BannerItemElement" }
    | { __typename?: "BlankExperience" }
    | { __typename?: "BlankSection" }
    | { __typename?: "ButtonElement" }
    | { __typename?: "CTAElement" }
    | { __typename?: "Company" }
    | { __typename?: "ContainerElement" }
    | ({ __typename?: "ContentTextElement" } & {
        " $fragmentRefs"?: {
          ContentTextElementDataFragment: ContentTextElementDataFragment;
        };
      })
    | { __typename?: "DefaultVideo" }
    | { __typename?: "Dictionary" }
    | { __typename?: "DictionaryItem" }
    | { __typename?: "ExpandableText" }
    | { __typename?: "FAQsSection" }
    | { __typename?: "GenericMedia" }
    | ({ __typename?: "HeadingElement" } & {
        " $fragmentRefs"?: {
          HeadingElementDataFragment: HeadingElementDataFragment;
        };
      })
    | { __typename?: "Image" }
    | { __typename?: "ImageBackground" }
    | { __typename?: "ImageItemElement" }
    | { __typename?: "ImageMedia" }
    | { __typename?: "ImageTextItemElement" }
    | { __typename?: "LandingPage" }
    | { __typename?: "MegaMenuGroupBlock" }
    | { __typename?: "NavigationMenuBlock" }
    | { __typename?: "OfficeLocation" }
    | { __typename?: "PDPCarouselElement" }
    | { __typename?: "PDPGalleryElement" }
    | { __typename?: "PDPHeroElement" }
    | { __typename?: "PDPSpecificationsElement" }
    | { __typename?: "PageSeoSettings" }
    | { __typename?: "ParagraphElement" }
    | { __typename?: "ProductCardElement" }
    | { __typename?: "ProductCardListElement" }
    | { __typename?: "ProductCardListSection" }
    | { __typename?: "ProductCarouselElement" }
    | { __typename?: "ProductCarouselSection" }
    | { __typename?: "ProductDetail" }
    | { __typename?: "ProductDetailExperience" }
    | { __typename?: "ProductList" }
    | { __typename?: "ProductListingEPage" }
    | { __typename?: "ProductVisibleElements" }
    | { __typename?: "Section" }
    | { __typename?: "SocialMediaBlock" }
    | { __typename?: "SocialMediaBlocks" }
    | { __typename?: "SysContentFolder" }
    | { __typename?: "TopHeaderContainer" }
    | { __typename?: "VideoElement" }
    | { __typename?: "VideoMedia" }
    | { __typename?: "WebFooterConfigrationBlock" }
    | { __typename?: "WebHeaderConfigrationBlock" }
    | { __typename?: "_Component" }
    | { __typename?: "_Content" }
    | { __typename?: "_Experience" }
    | { __typename?: "_Folder" }
    | { __typename?: "_Image" }
    | { __typename?: "_Media" }
    | { __typename?: "_Page" }
    | { __typename?: "_Section" }
    | { __typename?: "_Video" }
    | { __typename?: "test" }
    | null
  > | null;
} & { " $fragmentName"?: "FAQsSectionDataFragment" };

export type HeadingElementDataFragment = {
  __typename?: "HeadingElement";
  HeadingText?: string | null;
} & { " $fragmentName"?: "HeadingElementDataFragment" };

export type ImageBackgroundDataFragment = {
  __typename?: "ImageBackground";
  Alt?: string | null;
  IsFullIWidthImage?: boolean | null;
  Loading?: string | null;
  ImageDesktop?:
    | ({ __typename?: "ContentReference" } & {
        " $fragmentRefs"?: { ReferenceDataFragment: ReferenceDataFragment };
      })
    | null;
  ImageMobile?:
    | ({ __typename?: "ContentReference" } & {
        " $fragmentRefs"?: { ReferenceDataFragment: ReferenceDataFragment };
      })
    | null;
} & { " $fragmentName"?: "ImageBackgroundDataFragment" };

export type ImageItemElementDataFragment = {
  __typename?: "ImageItemElement";
  Loading?: string | null;
  Alt?: string | null;
  IsFullWidthImage?: boolean | null;
  IsBackground?: boolean | null;
  OverlayOpacity?: number | null;
  OverlayColor?: string | null;
  ImageDesktop?:
    | ({ __typename?: "ContentReference" } & {
        " $fragmentRefs"?: { ReferenceDataFragment: ReferenceDataFragment };
      })
    | null;
  ImageMobile?:
    | ({ __typename?: "ContentReference" } & {
        " $fragmentRefs"?: { ReferenceDataFragment: ReferenceDataFragment };
      })
    | null;
} & { " $fragmentName"?: "ImageItemElementDataFragment" };

export type ImageTextItemElementDataFragment = {
  __typename?: "ImageTextItemElement";
  Alt?: string | null;
  IsFullWidthImage?: boolean | null;
  Loading?: string | null;
  ButtonText?: string | null;
  ContentImagePosition?: string | null;
  CssClass?: string | null;
  Heading?: {
    __typename?: "RichText";
    json?: any | null;
    html?: string | null;
  } | null;
  RichText?: {
    __typename?: "RichText";
    json?: any | null;
    html?: string | null;
  } | null;
  Image?:
    | ({ __typename?: "ContentReference" } & {
        " $fragmentRefs"?: { ReferenceDataFragment: ReferenceDataFragment };
      })
    | null;
  ImageMobile?:
    | ({ __typename?: "ContentReference" } & {
        " $fragmentRefs"?: { ReferenceDataFragment: ReferenceDataFragment };
      })
    | null;
  BackgroundLink?:
    | ({ __typename?: "ContentUrl" } & {
        " $fragmentRefs"?: { LinkDataFragment: LinkDataFragment };
      })
    | null;
  ButtonLink?:
    | ({ __typename?: "ContentUrl" } & {
        " $fragmentRefs"?: { LinkDataFragment: LinkDataFragment };
      })
    | null;
} & { " $fragmentName"?: "ImageTextItemElementDataFragment" };

export type MegaMenuGroupBlockDataFragment = {
  __typename?: "MegaMenuGroupBlock";
  MenuMenuHeading?: string | null;
  ExpandableMobile?: boolean | null;
  MegaMenuUrl?:
    | ({ __typename?: "ContentUrl" } & {
        " $fragmentRefs"?: { LinkDataFragment: LinkDataFragment };
      })
    | null;
  MegaMenuContentArea?: Array<
    | ({ __typename?: "BannerItemElement" } & {
        " $fragmentRefs"?: {
          IContentListItem_BannerItemElement_Fragment: IContentListItem_BannerItemElement_Fragment;
        };
      })
    | ({ __typename?: "BlankExperience" } & {
        " $fragmentRefs"?: {
          IContentListItem_BlankExperience_Fragment: IContentListItem_BlankExperience_Fragment;
        };
      })
    | ({ __typename?: "BlankSection" } & {
        " $fragmentRefs"?: {
          IContentListItem_BlankSection_Fragment: IContentListItem_BlankSection_Fragment;
        };
      })
    | ({ __typename?: "ButtonElement" } & {
        " $fragmentRefs"?: {
          IContentListItem_ButtonElement_Fragment: IContentListItem_ButtonElement_Fragment;
          ButtonElementDataFragment: ButtonElementDataFragment;
        };
      })
    | ({ __typename?: "CTAElement" } & {
        " $fragmentRefs"?: {
          IContentListItem_CTAElement_Fragment: IContentListItem_CTAElement_Fragment;
        };
      })
    | ({ __typename?: "Company" } & {
        " $fragmentRefs"?: {
          IContentListItem_Company_Fragment: IContentListItem_Company_Fragment;
        };
      })
    | ({ __typename?: "ContainerElement" } & {
        " $fragmentRefs"?: {
          IContentListItem_ContainerElement_Fragment: IContentListItem_ContainerElement_Fragment;
        };
      })
    | ({ __typename?: "ContentTextElement" } & {
        " $fragmentRefs"?: {
          IContentListItem_ContentTextElement_Fragment: IContentListItem_ContentTextElement_Fragment;
          ContentTextElementDataFragment: ContentTextElementDataFragment;
        };
      })
    | ({ __typename?: "DefaultVideo" } & {
        " $fragmentRefs"?: {
          IContentListItem_DefaultVideo_Fragment: IContentListItem_DefaultVideo_Fragment;
        };
      })
    | ({ __typename?: "Dictionary" } & {
        " $fragmentRefs"?: {
          IContentListItem_Dictionary_Fragment: IContentListItem_Dictionary_Fragment;
        };
      })
    | ({ __typename?: "DictionaryItem" } & {
        " $fragmentRefs"?: {
          IContentListItem_DictionaryItem_Fragment: IContentListItem_DictionaryItem_Fragment;
        };
      })
    | ({ __typename?: "ExpandableText" } & {
        " $fragmentRefs"?: {
          IContentListItem_ExpandableText_Fragment: IContentListItem_ExpandableText_Fragment;
        };
      })
    | ({ __typename?: "FAQsSection" } & {
        " $fragmentRefs"?: {
          IContentListItem_FAQsSection_Fragment: IContentListItem_FAQsSection_Fragment;
        };
      })
    | ({ __typename?: "GenericMedia" } & {
        " $fragmentRefs"?: {
          IContentListItem_GenericMedia_Fragment: IContentListItem_GenericMedia_Fragment;
        };
      })
    | ({ __typename?: "HeadingElement" } & {
        " $fragmentRefs"?: {
          IContentListItem_HeadingElement_Fragment: IContentListItem_HeadingElement_Fragment;
        };
      })
    | ({ __typename?: "Image" } & {
        " $fragmentRefs"?: {
          IContentListItem_Image_Fragment: IContentListItem_Image_Fragment;
        };
      })
    | ({ __typename?: "ImageBackground" } & {
        " $fragmentRefs"?: {
          IContentListItem_ImageBackground_Fragment: IContentListItem_ImageBackground_Fragment;
        };
      })
    | ({ __typename?: "ImageItemElement" } & {
        " $fragmentRefs"?: {
          IContentListItem_ImageItemElement_Fragment: IContentListItem_ImageItemElement_Fragment;
        };
      })
    | ({ __typename?: "ImageMedia" } & {
        " $fragmentRefs"?: {
          IContentListItem_ImageMedia_Fragment: IContentListItem_ImageMedia_Fragment;
        };
      })
    | ({ __typename?: "ImageTextItemElement" } & {
        " $fragmentRefs"?: {
          IContentListItem_ImageTextItemElement_Fragment: IContentListItem_ImageTextItemElement_Fragment;
        };
      })
    | ({ __typename?: "LandingPage" } & {
        " $fragmentRefs"?: {
          IContentListItem_LandingPage_Fragment: IContentListItem_LandingPage_Fragment;
        };
      })
    | ({ __typename?: "MegaMenuGroupBlock" } & {
        " $fragmentRefs"?: {
          IContentListItem_MegaMenuGroupBlock_Fragment: IContentListItem_MegaMenuGroupBlock_Fragment;
        };
      })
    | ({ __typename?: "NavigationMenuBlock" } & {
        " $fragmentRefs"?: {
          IContentListItem_NavigationMenuBlock_Fragment: IContentListItem_NavigationMenuBlock_Fragment;
          NavigationMenuBlockDataFragment: NavigationMenuBlockDataFragment;
        };
      })
    | ({ __typename?: "OfficeLocation" } & {
        " $fragmentRefs"?: {
          IContentListItem_OfficeLocation_Fragment: IContentListItem_OfficeLocation_Fragment;
        };
      })
    | ({ __typename?: "PDPCarouselElement" } & {
        " $fragmentRefs"?: {
          IContentListItem_PDPCarouselElement_Fragment: IContentListItem_PDPCarouselElement_Fragment;
        };
      })
    | ({ __typename?: "PDPGalleryElement" } & {
        " $fragmentRefs"?: {
          IContentListItem_PDPGalleryElement_Fragment: IContentListItem_PDPGalleryElement_Fragment;
        };
      })
    | ({ __typename?: "PDPHeroElement" } & {
        " $fragmentRefs"?: {
          IContentListItem_PDPHeroElement_Fragment: IContentListItem_PDPHeroElement_Fragment;
        };
      })
    | ({ __typename?: "PDPSpecificationsElement" } & {
        " $fragmentRefs"?: {
          IContentListItem_PDPSpecificationsElement_Fragment: IContentListItem_PDPSpecificationsElement_Fragment;
        };
      })
    | ({ __typename?: "PageSeoSettings" } & {
        " $fragmentRefs"?: {
          IContentListItem_PageSeoSettings_Fragment: IContentListItem_PageSeoSettings_Fragment;
        };
      })
    | ({ __typename?: "ParagraphElement" } & {
        " $fragmentRefs"?: {
          IContentListItem_ParagraphElement_Fragment: IContentListItem_ParagraphElement_Fragment;
        };
      })
    | ({ __typename?: "ProductCardElement" } & {
        " $fragmentRefs"?: {
          IContentListItem_ProductCardElement_Fragment: IContentListItem_ProductCardElement_Fragment;
        };
      })
    | ({ __typename?: "ProductCardListElement" } & {
        " $fragmentRefs"?: {
          IContentListItem_ProductCardListElement_Fragment: IContentListItem_ProductCardListElement_Fragment;
        };
      })
    | ({ __typename?: "ProductCardListSection" } & {
        " $fragmentRefs"?: {
          IContentListItem_ProductCardListSection_Fragment: IContentListItem_ProductCardListSection_Fragment;
        };
      })
    | ({ __typename?: "ProductCarouselElement" } & {
        " $fragmentRefs"?: {
          IContentListItem_ProductCarouselElement_Fragment: IContentListItem_ProductCarouselElement_Fragment;
        };
      })
    | ({ __typename?: "ProductCarouselSection" } & {
        " $fragmentRefs"?: {
          IContentListItem_ProductCarouselSection_Fragment: IContentListItem_ProductCarouselSection_Fragment;
        };
      })
    | ({ __typename?: "ProductDetail" } & {
        " $fragmentRefs"?: {
          IContentListItem_ProductDetail_Fragment: IContentListItem_ProductDetail_Fragment;
        };
      })
    | ({ __typename?: "ProductDetailExperience" } & {
        " $fragmentRefs"?: {
          IContentListItem_ProductDetailExperience_Fragment: IContentListItem_ProductDetailExperience_Fragment;
        };
      })
    | ({ __typename?: "ProductList" } & {
        " $fragmentRefs"?: {
          IContentListItem_ProductList_Fragment: IContentListItem_ProductList_Fragment;
        };
      })
    | ({ __typename?: "ProductListingEPage" } & {
        " $fragmentRefs"?: {
          IContentListItem_ProductListingEPage_Fragment: IContentListItem_ProductListingEPage_Fragment;
        };
      })
    | ({ __typename?: "ProductVisibleElements" } & {
        " $fragmentRefs"?: {
          IContentListItem_ProductVisibleElements_Fragment: IContentListItem_ProductVisibleElements_Fragment;
        };
      })
    | ({ __typename?: "Section" } & {
        " $fragmentRefs"?: {
          IContentListItem_Section_Fragment: IContentListItem_Section_Fragment;
        };
      })
    | ({ __typename?: "SocialMediaBlock" } & {
        " $fragmentRefs"?: {
          IContentListItem_SocialMediaBlock_Fragment: IContentListItem_SocialMediaBlock_Fragment;
          SocialMediaBlockDataFragment: SocialMediaBlockDataFragment;
        };
      })
    | ({ __typename?: "SocialMediaBlocks" } & {
        " $fragmentRefs"?: {
          IContentListItem_SocialMediaBlocks_Fragment: IContentListItem_SocialMediaBlocks_Fragment;
          SocialMediaBlocksDataFragment: SocialMediaBlocksDataFragment;
        };
      })
    | ({ __typename?: "SysContentFolder" } & {
        " $fragmentRefs"?: {
          IContentListItem_SysContentFolder_Fragment: IContentListItem_SysContentFolder_Fragment;
        };
      })
    | ({ __typename?: "TopHeaderContainer" } & {
        " $fragmentRefs"?: {
          IContentListItem_TopHeaderContainer_Fragment: IContentListItem_TopHeaderContainer_Fragment;
        };
      })
    | ({ __typename?: "VideoElement" } & {
        " $fragmentRefs"?: {
          IContentListItem_VideoElement_Fragment: IContentListItem_VideoElement_Fragment;
        };
      })
    | ({ __typename?: "VideoMedia" } & {
        " $fragmentRefs"?: {
          IContentListItem_VideoMedia_Fragment: IContentListItem_VideoMedia_Fragment;
        };
      })
    | ({ __typename?: "WebFooterConfigrationBlock" } & {
        " $fragmentRefs"?: {
          IContentListItem_WebFooterConfigrationBlock_Fragment: IContentListItem_WebFooterConfigrationBlock_Fragment;
        };
      })
    | ({ __typename?: "WebHeaderConfigrationBlock" } & {
        " $fragmentRefs"?: {
          IContentListItem_WebHeaderConfigrationBlock_Fragment: IContentListItem_WebHeaderConfigrationBlock_Fragment;
        };
      })
    | ({ __typename?: "_Component" } & {
        " $fragmentRefs"?: {
          IContentListItem__Component_Fragment: IContentListItem__Component_Fragment;
        };
      })
    | ({ __typename?: "_Content" } & {
        " $fragmentRefs"?: {
          IContentListItem__Content_Fragment: IContentListItem__Content_Fragment;
        };
      })
    | ({ __typename?: "_Experience" } & {
        " $fragmentRefs"?: {
          IContentListItem__Experience_Fragment: IContentListItem__Experience_Fragment;
        };
      })
    | ({ __typename?: "_Folder" } & {
        " $fragmentRefs"?: {
          IContentListItem__Folder_Fragment: IContentListItem__Folder_Fragment;
        };
      })
    | ({ __typename?: "_Image" } & {
        " $fragmentRefs"?: {
          IContentListItem__Image_Fragment: IContentListItem__Image_Fragment;
        };
      })
    | ({ __typename?: "_Media" } & {
        " $fragmentRefs"?: {
          IContentListItem__Media_Fragment: IContentListItem__Media_Fragment;
        };
      })
    | ({ __typename?: "_Page" } & {
        " $fragmentRefs"?: {
          IContentListItem__Page_Fragment: IContentListItem__Page_Fragment;
        };
      })
    | ({ __typename?: "_Section" } & {
        " $fragmentRefs"?: {
          IContentListItem__Section_Fragment: IContentListItem__Section_Fragment;
        };
      })
    | ({ __typename?: "_Video" } & {
        " $fragmentRefs"?: {
          IContentListItem__Video_Fragment: IContentListItem__Video_Fragment;
        };
      })
    | ({ __typename?: "test" } & {
        " $fragmentRefs"?: {
          IContentListItem_test_Fragment: IContentListItem_test_Fragment;
        };
      })
    | null
  > | null;
} & { " $fragmentName"?: "MegaMenuGroupBlockDataFragment" };

export type NavigationMenuBlockDataFragment = ({
  __typename?: "NavigationMenuBlock";
  SubMenuItem?: Array<
    | { __typename?: "BannerItemElement" }
    | { __typename?: "BlankExperience" }
    | { __typename?: "BlankSection" }
    | { __typename?: "ButtonElement" }
    | { __typename?: "CTAElement" }
    | { __typename?: "Company" }
    | { __typename?: "ContainerElement" }
    | { __typename?: "ContentTextElement" }
    | { __typename?: "DefaultVideo" }
    | { __typename?: "Dictionary" }
    | { __typename?: "DictionaryItem" }
    | { __typename?: "ExpandableText" }
    | { __typename?: "FAQsSection" }
    | { __typename?: "GenericMedia" }
    | { __typename?: "HeadingElement" }
    | { __typename?: "Image" }
    | { __typename?: "ImageBackground" }
    | { __typename?: "ImageItemElement" }
    | { __typename?: "ImageMedia" }
    | { __typename?: "ImageTextItemElement" }
    | { __typename?: "LandingPage" }
    | { __typename?: "MegaMenuGroupBlock" }
    | ({ __typename?: "NavigationMenuBlock" } & {
        " $fragmentRefs"?: {
          NavigationMenuBlockFieldsFragment: NavigationMenuBlockFieldsFragment;
        };
      })
    | { __typename?: "OfficeLocation" }
    | { __typename?: "PDPCarouselElement" }
    | { __typename?: "PDPGalleryElement" }
    | { __typename?: "PDPHeroElement" }
    | { __typename?: "PDPSpecificationsElement" }
    | { __typename?: "PageSeoSettings" }
    | { __typename?: "ParagraphElement" }
    | { __typename?: "ProductCardElement" }
    | { __typename?: "ProductCardListElement" }
    | { __typename?: "ProductCardListSection" }
    | { __typename?: "ProductCarouselElement" }
    | { __typename?: "ProductCarouselSection" }
    | { __typename?: "ProductDetail" }
    | { __typename?: "ProductDetailExperience" }
    | { __typename?: "ProductList" }
    | { __typename?: "ProductListingEPage" }
    | { __typename?: "ProductVisibleElements" }
    | { __typename?: "Section" }
    | { __typename?: "SocialMediaBlock" }
    | { __typename?: "SocialMediaBlocks" }
    | { __typename?: "SysContentFolder" }
    | { __typename?: "TopHeaderContainer" }
    | { __typename?: "VideoElement" }
    | { __typename?: "VideoMedia" }
    | { __typename?: "WebFooterConfigrationBlock" }
    | { __typename?: "WebHeaderConfigrationBlock" }
    | { __typename?: "_Component" }
    | { __typename?: "_Content" }
    | { __typename?: "_Experience" }
    | { __typename?: "_Folder" }
    | { __typename?: "_Image" }
    | { __typename?: "_Media" }
    | { __typename?: "_Page" }
    | { __typename?: "_Section" }
    | { __typename?: "_Video" }
    | { __typename?: "test" }
    | null
  > | null;
} & {
  " $fragmentRefs"?: {
    NavigationMenuBlockFieldsFragment: NavigationMenuBlockFieldsFragment;
  };
}) & { " $fragmentName"?: "NavigationMenuBlockDataFragment" };

export type NavigationMenuBlockFieldsFragment = ({
  __typename?: "NavigationMenuBlock";
  MenuNavigationHeading?: string | null;
  Link?:
    | ({ __typename?: "Link" } & {
        " $fragmentRefs"?: { LinkItemDataFragment: LinkItemDataFragment };
      })
    | null;
  ThumbnailBanner?:
    | ({ __typename?: "ContentReference" } & {
        " $fragmentRefs"?: { ReferenceDataFragment: ReferenceDataFragment };
      })
    | null;
} & {
  " $fragmentRefs"?: {
    IElementData_NavigationMenuBlock_Fragment: IElementData_NavigationMenuBlock_Fragment;
  };
}) & { " $fragmentName"?: "NavigationMenuBlockFieldsFragment" };

export type OfficeLocationDataFragment = {
  __typename?: "OfficeLocation";
  OfficeTitle?: string | null;
  OfficeAddressStreet1?: string | null;
  OfficeAddressStreet2?: string | null;
  OfficeAddressCity?: string | null;
  OfficeAddressPostalCode?: string | null;
  OfficeAddressCountry?: string | null;
  OfficePhone?: string | null;
  OfficeEmail?: string | null;
} & { " $fragmentName"?: "OfficeLocationDataFragment" };

export type PageSeoSettingsDataFragment = {
  __typename?: "PageSeoSettings";
  MetaTitle?: string | null;
  MetaDescription?: string | null;
  MetaKeywords?: string | null;
  ThumbnailImage?:
    | ({ __typename?: "ContentReference" } & {
        " $fragmentRefs"?: { ReferenceDataFragment: ReferenceDataFragment };
      })
    | null;
} & { " $fragmentName"?: "PageSeoSettingsDataFragment" };

export type ParagraphElementDataFragment = {
  __typename?: "ParagraphElement";
  text?: {
    __typename?: "SearchableRichText";
    json?: any | null;
    html?: string | null;
  } | null;
} & { " $fragmentName"?: "ParagraphElementDataFragment" };

export type ProductCardElementDataFragment = {
  __typename?: "ProductCardElement";
  ProductName?: string | null;
  InventoryStatus?: string | null;
  inventory?: number | null;
  CanBuy?: boolean | null;
  Image?:
    | ({ __typename?: "ContentReference" } & {
        " $fragmentRefs"?: { ReferenceDataFragment: ReferenceDataFragment };
      })
    | null;
  ShortDescription?: {
    __typename?: "RichText";
    json?: any | null;
    html?: string | null;
  } | null;
} & { " $fragmentName"?: "ProductCardElementDataFragment" };

export type ProductCardListElementDataFragment = {
  __typename?: "ProductCardListElement";
  CategoryID?: string | null;
  EnableFilter?: boolean | null;
  EnableSorting?: boolean | null;
  DefaultView?: Array<string | null> | null;
  EnableProductCount?: boolean | null;
  PagingSize?: number | null;
  VisibleElements?:
    | ({ __typename?: "ContentReference" } & {
        " $fragmentRefs"?: { ReferenceDataFragment: ReferenceDataFragment };
      })
    | null;
} & { " $fragmentName"?: "ProductCardListElementDataFragment" };

export type SocialMediaBlockDataFragment = {
  __typename?: "SocialMediaBlock";
  URLMedia?:
    | ({ __typename?: "Link" } & {
        " $fragmentRefs"?: {
          LinkPropertyDataFragment: LinkPropertyDataFragment;
        };
      })
    | null;
  imageIcon?: {
    __typename?: "ImageItemElementProperty";
    Loading?: string | null;
    OverlayColor?: string | null;
    OverlayOpacity?: number | null;
    Alt?: string | null;
    IsFullWidthImage?: boolean | null;
    IsBackground?: boolean | null;
    ImageDesktop?:
      | ({ __typename?: "ContentReference" } & {
          " $fragmentRefs"?: { ReferenceDataFragment: ReferenceDataFragment };
        })
      | null;
    ImageMobile?:
      | ({ __typename?: "ContentReference" } & {
          " $fragmentRefs"?: { ReferenceDataFragment: ReferenceDataFragment };
        })
      | null;
  } | null;
} & { " $fragmentName"?: "SocialMediaBlockDataFragment" };

export type SocialMediaBlocksDataFragment = {
  __typename?: "SocialMediaBlocks";
  ListItems?: Array<
    | { __typename?: "BannerItemElement" }
    | { __typename?: "BlankExperience" }
    | { __typename?: "BlankSection" }
    | { __typename?: "ButtonElement" }
    | { __typename?: "CTAElement" }
    | { __typename?: "Company" }
    | { __typename?: "ContainerElement" }
    | { __typename?: "ContentTextElement" }
    | { __typename?: "DefaultVideo" }
    | { __typename?: "Dictionary" }
    | { __typename?: "DictionaryItem" }
    | { __typename?: "ExpandableText" }
    | { __typename?: "FAQsSection" }
    | { __typename?: "GenericMedia" }
    | { __typename?: "HeadingElement" }
    | { __typename?: "Image" }
    | { __typename?: "ImageBackground" }
    | { __typename?: "ImageItemElement" }
    | { __typename?: "ImageMedia" }
    | { __typename?: "ImageTextItemElement" }
    | { __typename?: "LandingPage" }
    | { __typename?: "MegaMenuGroupBlock" }
    | { __typename?: "NavigationMenuBlock" }
    | { __typename?: "OfficeLocation" }
    | { __typename?: "PDPCarouselElement" }
    | { __typename?: "PDPGalleryElement" }
    | { __typename?: "PDPHeroElement" }
    | { __typename?: "PDPSpecificationsElement" }
    | { __typename?: "PageSeoSettings" }
    | { __typename?: "ParagraphElement" }
    | { __typename?: "ProductCardElement" }
    | { __typename?: "ProductCardListElement" }
    | { __typename?: "ProductCardListSection" }
    | { __typename?: "ProductCarouselElement" }
    | { __typename?: "ProductCarouselSection" }
    | { __typename?: "ProductDetail" }
    | { __typename?: "ProductDetailExperience" }
    | { __typename?: "ProductList" }
    | { __typename?: "ProductListingEPage" }
    | { __typename?: "ProductVisibleElements" }
    | { __typename?: "Section" }
    | ({ __typename?: "SocialMediaBlock" } & {
        " $fragmentRefs"?: {
          SocialMediaBlockDataFragment: SocialMediaBlockDataFragment;
        };
      })
    | { __typename?: "SocialMediaBlocks" }
    | { __typename?: "SysContentFolder" }
    | { __typename?: "TopHeaderContainer" }
    | { __typename?: "VideoElement" }
    | { __typename?: "VideoMedia" }
    | { __typename?: "WebFooterConfigrationBlock" }
    | { __typename?: "WebHeaderConfigrationBlock" }
    | { __typename?: "_Component" }
    | { __typename?: "_Content" }
    | { __typename?: "_Experience" }
    | { __typename?: "_Folder" }
    | { __typename?: "_Image" }
    | { __typename?: "_Media" }
    | { __typename?: "_Page" }
    | { __typename?: "_Section" }
    | { __typename?: "_Video" }
    | { __typename?: "test" }
    | null
  > | null;
} & { " $fragmentName"?: "SocialMediaBlocksDataFragment" };

export type TopHeaderContainerDataFragment = {
  __typename?: "TopHeaderContainer";
  description?: {
    __typename?: "RichText";
    json?: any | null;
    html?: string | null;
  } | null;
  Links?: Array<
    | ({ __typename?: "Link" } & {
        " $fragmentRefs"?: { LinkItemDataFragment: LinkItemDataFragment };
      })
    | null
  > | null;
} & { " $fragmentName"?: "TopHeaderContainerDataFragment" };

export type VideoElementDataFragment = {
  __typename?: "VideoElement";
  VideoUrl?: string | null;
  Autoplay?: boolean | null;
  PlayOnPopup?: boolean | null;
  Loading?: string | null;
  Video?:
    | ({ __typename?: "ContentReference" } & {
        " $fragmentRefs"?: { ReferenceDataFragment: ReferenceDataFragment };
      })
    | null;
  Placeholder?:
    | ({ __typename?: "ContentReference" } & {
        " $fragmentRefs"?: { ReferenceDataFragment: ReferenceDataFragment };
      })
    | null;
} & { " $fragmentName"?: "VideoElementDataFragment" };

export type WebFooterConfigrationBlockDataFragment = {
  __typename?: "WebFooterConfigrationBlock";
  LogoAltText?: string | null;
  SiteLogoFooter?:
    | ({ __typename?: "ContentReference" } & {
        " $fragmentRefs"?: { ReferenceDataFragment: ReferenceDataFragment };
      })
    | null;
  LocationDetails?: {
    __typename?: "RichText";
    json?: any | null;
    html?: string | null;
  } | null;
  ButtonURLFooter?:
    | ({ __typename?: "Link" } & {
        " $fragmentRefs"?: { LinkItemDataFragment: LinkItemDataFragment };
      })
    | null;
  FooterNavigation?: Array<
    | ({ __typename?: "BannerItemElement" } & {
        " $fragmentRefs"?: {
          IContentListItem_BannerItemElement_Fragment: IContentListItem_BannerItemElement_Fragment;
        };
      })
    | ({ __typename?: "BlankExperience" } & {
        " $fragmentRefs"?: {
          IContentListItem_BlankExperience_Fragment: IContentListItem_BlankExperience_Fragment;
        };
      })
    | ({ __typename?: "BlankSection" } & {
        " $fragmentRefs"?: {
          IContentListItem_BlankSection_Fragment: IContentListItem_BlankSection_Fragment;
        };
      })
    | ({ __typename?: "ButtonElement" } & {
        " $fragmentRefs"?: {
          IContentListItem_ButtonElement_Fragment: IContentListItem_ButtonElement_Fragment;
        };
      })
    | ({ __typename?: "CTAElement" } & {
        " $fragmentRefs"?: {
          IContentListItem_CTAElement_Fragment: IContentListItem_CTAElement_Fragment;
        };
      })
    | ({ __typename?: "Company" } & {
        " $fragmentRefs"?: {
          IContentListItem_Company_Fragment: IContentListItem_Company_Fragment;
        };
      })
    | ({ __typename?: "ContainerElement" } & {
        " $fragmentRefs"?: {
          IContentListItem_ContainerElement_Fragment: IContentListItem_ContainerElement_Fragment;
        };
      })
    | ({ __typename?: "ContentTextElement" } & {
        " $fragmentRefs"?: {
          IContentListItem_ContentTextElement_Fragment: IContentListItem_ContentTextElement_Fragment;
        };
      })
    | ({ __typename?: "DefaultVideo" } & {
        " $fragmentRefs"?: {
          IContentListItem_DefaultVideo_Fragment: IContentListItem_DefaultVideo_Fragment;
        };
      })
    | ({ __typename?: "Dictionary" } & {
        " $fragmentRefs"?: {
          IContentListItem_Dictionary_Fragment: IContentListItem_Dictionary_Fragment;
        };
      })
    | ({ __typename?: "DictionaryItem" } & {
        " $fragmentRefs"?: {
          IContentListItem_DictionaryItem_Fragment: IContentListItem_DictionaryItem_Fragment;
        };
      })
    | ({ __typename?: "ExpandableText" } & {
        " $fragmentRefs"?: {
          IContentListItem_ExpandableText_Fragment: IContentListItem_ExpandableText_Fragment;
        };
      })
    | ({ __typename?: "FAQsSection" } & {
        " $fragmentRefs"?: {
          IContentListItem_FAQsSection_Fragment: IContentListItem_FAQsSection_Fragment;
        };
      })
    | ({ __typename?: "GenericMedia" } & {
        " $fragmentRefs"?: {
          IContentListItem_GenericMedia_Fragment: IContentListItem_GenericMedia_Fragment;
        };
      })
    | ({ __typename?: "HeadingElement" } & {
        " $fragmentRefs"?: {
          IContentListItem_HeadingElement_Fragment: IContentListItem_HeadingElement_Fragment;
        };
      })
    | ({ __typename?: "Image" } & {
        " $fragmentRefs"?: {
          IContentListItem_Image_Fragment: IContentListItem_Image_Fragment;
        };
      })
    | ({ __typename?: "ImageBackground" } & {
        " $fragmentRefs"?: {
          IContentListItem_ImageBackground_Fragment: IContentListItem_ImageBackground_Fragment;
        };
      })
    | ({ __typename?: "ImageItemElement" } & {
        " $fragmentRefs"?: {
          IContentListItem_ImageItemElement_Fragment: IContentListItem_ImageItemElement_Fragment;
        };
      })
    | ({ __typename?: "ImageMedia" } & {
        " $fragmentRefs"?: {
          IContentListItem_ImageMedia_Fragment: IContentListItem_ImageMedia_Fragment;
        };
      })
    | ({ __typename?: "ImageTextItemElement" } & {
        " $fragmentRefs"?: {
          IContentListItem_ImageTextItemElement_Fragment: IContentListItem_ImageTextItemElement_Fragment;
        };
      })
    | ({ __typename?: "LandingPage" } & {
        " $fragmentRefs"?: {
          IContentListItem_LandingPage_Fragment: IContentListItem_LandingPage_Fragment;
        };
      })
    | ({ __typename?: "MegaMenuGroupBlock" } & {
        " $fragmentRefs"?: {
          IContentListItem_MegaMenuGroupBlock_Fragment: IContentListItem_MegaMenuGroupBlock_Fragment;
          MegaMenuGroupBlockDataFragment: MegaMenuGroupBlockDataFragment;
        };
      })
    | ({ __typename?: "NavigationMenuBlock" } & {
        " $fragmentRefs"?: {
          IContentListItem_NavigationMenuBlock_Fragment: IContentListItem_NavigationMenuBlock_Fragment;
        };
      })
    | ({ __typename?: "OfficeLocation" } & {
        " $fragmentRefs"?: {
          IContentListItem_OfficeLocation_Fragment: IContentListItem_OfficeLocation_Fragment;
        };
      })
    | ({ __typename?: "PDPCarouselElement" } & {
        " $fragmentRefs"?: {
          IContentListItem_PDPCarouselElement_Fragment: IContentListItem_PDPCarouselElement_Fragment;
        };
      })
    | ({ __typename?: "PDPGalleryElement" } & {
        " $fragmentRefs"?: {
          IContentListItem_PDPGalleryElement_Fragment: IContentListItem_PDPGalleryElement_Fragment;
        };
      })
    | ({ __typename?: "PDPHeroElement" } & {
        " $fragmentRefs"?: {
          IContentListItem_PDPHeroElement_Fragment: IContentListItem_PDPHeroElement_Fragment;
        };
      })
    | ({ __typename?: "PDPSpecificationsElement" } & {
        " $fragmentRefs"?: {
          IContentListItem_PDPSpecificationsElement_Fragment: IContentListItem_PDPSpecificationsElement_Fragment;
        };
      })
    | ({ __typename?: "PageSeoSettings" } & {
        " $fragmentRefs"?: {
          IContentListItem_PageSeoSettings_Fragment: IContentListItem_PageSeoSettings_Fragment;
        };
      })
    | ({ __typename?: "ParagraphElement" } & {
        " $fragmentRefs"?: {
          IContentListItem_ParagraphElement_Fragment: IContentListItem_ParagraphElement_Fragment;
        };
      })
    | ({ __typename?: "ProductCardElement" } & {
        " $fragmentRefs"?: {
          IContentListItem_ProductCardElement_Fragment: IContentListItem_ProductCardElement_Fragment;
        };
      })
    | ({ __typename?: "ProductCardListElement" } & {
        " $fragmentRefs"?: {
          IContentListItem_ProductCardListElement_Fragment: IContentListItem_ProductCardListElement_Fragment;
        };
      })
    | ({ __typename?: "ProductCardListSection" } & {
        " $fragmentRefs"?: {
          IContentListItem_ProductCardListSection_Fragment: IContentListItem_ProductCardListSection_Fragment;
        };
      })
    | ({ __typename?: "ProductCarouselElement" } & {
        " $fragmentRefs"?: {
          IContentListItem_ProductCarouselElement_Fragment: IContentListItem_ProductCarouselElement_Fragment;
        };
      })
    | ({ __typename?: "ProductCarouselSection" } & {
        " $fragmentRefs"?: {
          IContentListItem_ProductCarouselSection_Fragment: IContentListItem_ProductCarouselSection_Fragment;
        };
      })
    | ({ __typename?: "ProductDetail" } & {
        " $fragmentRefs"?: {
          IContentListItem_ProductDetail_Fragment: IContentListItem_ProductDetail_Fragment;
        };
      })
    | ({ __typename?: "ProductDetailExperience" } & {
        " $fragmentRefs"?: {
          IContentListItem_ProductDetailExperience_Fragment: IContentListItem_ProductDetailExperience_Fragment;
        };
      })
    | ({ __typename?: "ProductList" } & {
        " $fragmentRefs"?: {
          IContentListItem_ProductList_Fragment: IContentListItem_ProductList_Fragment;
        };
      })
    | ({ __typename?: "ProductListingEPage" } & {
        " $fragmentRefs"?: {
          IContentListItem_ProductListingEPage_Fragment: IContentListItem_ProductListingEPage_Fragment;
        };
      })
    | ({ __typename?: "ProductVisibleElements" } & {
        " $fragmentRefs"?: {
          IContentListItem_ProductVisibleElements_Fragment: IContentListItem_ProductVisibleElements_Fragment;
        };
      })
    | ({ __typename?: "Section" } & {
        " $fragmentRefs"?: {
          IContentListItem_Section_Fragment: IContentListItem_Section_Fragment;
        };
      })
    | ({ __typename?: "SocialMediaBlock" } & {
        " $fragmentRefs"?: {
          IContentListItem_SocialMediaBlock_Fragment: IContentListItem_SocialMediaBlock_Fragment;
        };
      })
    | ({ __typename?: "SocialMediaBlocks" } & {
        " $fragmentRefs"?: {
          IContentListItem_SocialMediaBlocks_Fragment: IContentListItem_SocialMediaBlocks_Fragment;
        };
      })
    | ({ __typename?: "SysContentFolder" } & {
        " $fragmentRefs"?: {
          IContentListItem_SysContentFolder_Fragment: IContentListItem_SysContentFolder_Fragment;
        };
      })
    | ({ __typename?: "TopHeaderContainer" } & {
        " $fragmentRefs"?: {
          IContentListItem_TopHeaderContainer_Fragment: IContentListItem_TopHeaderContainer_Fragment;
        };
      })
    | ({ __typename?: "VideoElement" } & {
        " $fragmentRefs"?: {
          IContentListItem_VideoElement_Fragment: IContentListItem_VideoElement_Fragment;
        };
      })
    | ({ __typename?: "VideoMedia" } & {
        " $fragmentRefs"?: {
          IContentListItem_VideoMedia_Fragment: IContentListItem_VideoMedia_Fragment;
        };
      })
    | ({ __typename?: "WebFooterConfigrationBlock" } & {
        " $fragmentRefs"?: {
          IContentListItem_WebFooterConfigrationBlock_Fragment: IContentListItem_WebFooterConfigrationBlock_Fragment;
        };
      })
    | ({ __typename?: "WebHeaderConfigrationBlock" } & {
        " $fragmentRefs"?: {
          IContentListItem_WebHeaderConfigrationBlock_Fragment: IContentListItem_WebHeaderConfigrationBlock_Fragment;
        };
      })
    | ({ __typename?: "_Component" } & {
        " $fragmentRefs"?: {
          IContentListItem__Component_Fragment: IContentListItem__Component_Fragment;
        };
      })
    | ({ __typename?: "_Content" } & {
        " $fragmentRefs"?: {
          IContentListItem__Content_Fragment: IContentListItem__Content_Fragment;
        };
      })
    | ({ __typename?: "_Experience" } & {
        " $fragmentRefs"?: {
          IContentListItem__Experience_Fragment: IContentListItem__Experience_Fragment;
        };
      })
    | ({ __typename?: "_Folder" } & {
        " $fragmentRefs"?: {
          IContentListItem__Folder_Fragment: IContentListItem__Folder_Fragment;
        };
      })
    | ({ __typename?: "_Image" } & {
        " $fragmentRefs"?: {
          IContentListItem__Image_Fragment: IContentListItem__Image_Fragment;
        };
      })
    | ({ __typename?: "_Media" } & {
        " $fragmentRefs"?: {
          IContentListItem__Media_Fragment: IContentListItem__Media_Fragment;
        };
      })
    | ({ __typename?: "_Page" } & {
        " $fragmentRefs"?: {
          IContentListItem__Page_Fragment: IContentListItem__Page_Fragment;
        };
      })
    | ({ __typename?: "_Section" } & {
        " $fragmentRefs"?: {
          IContentListItem__Section_Fragment: IContentListItem__Section_Fragment;
        };
      })
    | ({ __typename?: "_Video" } & {
        " $fragmentRefs"?: {
          IContentListItem__Video_Fragment: IContentListItem__Video_Fragment;
        };
      })
    | ({ __typename?: "test" } & {
        " $fragmentRefs"?: {
          IContentListItem_test_Fragment: IContentListItem_test_Fragment;
        };
      })
    | null
  > | null;
  SocialMediaArea?: Array<
    | ({ __typename?: "BannerItemElement" } & {
        " $fragmentRefs"?: {
          IContentListItem_BannerItemElement_Fragment: IContentListItem_BannerItemElement_Fragment;
        };
      })
    | ({ __typename?: "BlankExperience" } & {
        " $fragmentRefs"?: {
          IContentListItem_BlankExperience_Fragment: IContentListItem_BlankExperience_Fragment;
        };
      })
    | ({ __typename?: "BlankSection" } & {
        " $fragmentRefs"?: {
          IContentListItem_BlankSection_Fragment: IContentListItem_BlankSection_Fragment;
        };
      })
    | ({ __typename?: "ButtonElement" } & {
        " $fragmentRefs"?: {
          IContentListItem_ButtonElement_Fragment: IContentListItem_ButtonElement_Fragment;
        };
      })
    | ({ __typename?: "CTAElement" } & {
        " $fragmentRefs"?: {
          IContentListItem_CTAElement_Fragment: IContentListItem_CTAElement_Fragment;
        };
      })
    | ({ __typename?: "Company" } & {
        " $fragmentRefs"?: {
          IContentListItem_Company_Fragment: IContentListItem_Company_Fragment;
        };
      })
    | ({ __typename?: "ContainerElement" } & {
        " $fragmentRefs"?: {
          IContentListItem_ContainerElement_Fragment: IContentListItem_ContainerElement_Fragment;
        };
      })
    | ({ __typename?: "ContentTextElement" } & {
        " $fragmentRefs"?: {
          IContentListItem_ContentTextElement_Fragment: IContentListItem_ContentTextElement_Fragment;
        };
      })
    | ({ __typename?: "DefaultVideo" } & {
        " $fragmentRefs"?: {
          IContentListItem_DefaultVideo_Fragment: IContentListItem_DefaultVideo_Fragment;
        };
      })
    | ({ __typename?: "Dictionary" } & {
        " $fragmentRefs"?: {
          IContentListItem_Dictionary_Fragment: IContentListItem_Dictionary_Fragment;
        };
      })
    | ({ __typename?: "DictionaryItem" } & {
        " $fragmentRefs"?: {
          IContentListItem_DictionaryItem_Fragment: IContentListItem_DictionaryItem_Fragment;
        };
      })
    | ({ __typename?: "ExpandableText" } & {
        " $fragmentRefs"?: {
          IContentListItem_ExpandableText_Fragment: IContentListItem_ExpandableText_Fragment;
        };
      })
    | ({ __typename?: "FAQsSection" } & {
        " $fragmentRefs"?: {
          IContentListItem_FAQsSection_Fragment: IContentListItem_FAQsSection_Fragment;
        };
      })
    | ({ __typename?: "GenericMedia" } & {
        " $fragmentRefs"?: {
          IContentListItem_GenericMedia_Fragment: IContentListItem_GenericMedia_Fragment;
        };
      })
    | ({ __typename?: "HeadingElement" } & {
        " $fragmentRefs"?: {
          IContentListItem_HeadingElement_Fragment: IContentListItem_HeadingElement_Fragment;
        };
      })
    | ({ __typename?: "Image" } & {
        " $fragmentRefs"?: {
          IContentListItem_Image_Fragment: IContentListItem_Image_Fragment;
        };
      })
    | ({ __typename?: "ImageBackground" } & {
        " $fragmentRefs"?: {
          IContentListItem_ImageBackground_Fragment: IContentListItem_ImageBackground_Fragment;
        };
      })
    | ({ __typename?: "ImageItemElement" } & {
        " $fragmentRefs"?: {
          IContentListItem_ImageItemElement_Fragment: IContentListItem_ImageItemElement_Fragment;
        };
      })
    | ({ __typename?: "ImageMedia" } & {
        " $fragmentRefs"?: {
          IContentListItem_ImageMedia_Fragment: IContentListItem_ImageMedia_Fragment;
        };
      })
    | ({ __typename?: "ImageTextItemElement" } & {
        " $fragmentRefs"?: {
          IContentListItem_ImageTextItemElement_Fragment: IContentListItem_ImageTextItemElement_Fragment;
        };
      })
    | ({ __typename?: "LandingPage" } & {
        " $fragmentRefs"?: {
          IContentListItem_LandingPage_Fragment: IContentListItem_LandingPage_Fragment;
        };
      })
    | ({ __typename?: "MegaMenuGroupBlock" } & {
        " $fragmentRefs"?: {
          IContentListItem_MegaMenuGroupBlock_Fragment: IContentListItem_MegaMenuGroupBlock_Fragment;
        };
      })
    | ({ __typename?: "NavigationMenuBlock" } & {
        " $fragmentRefs"?: {
          IContentListItem_NavigationMenuBlock_Fragment: IContentListItem_NavigationMenuBlock_Fragment;
        };
      })
    | ({ __typename?: "OfficeLocation" } & {
        " $fragmentRefs"?: {
          IContentListItem_OfficeLocation_Fragment: IContentListItem_OfficeLocation_Fragment;
        };
      })
    | ({ __typename?: "PDPCarouselElement" } & {
        " $fragmentRefs"?: {
          IContentListItem_PDPCarouselElement_Fragment: IContentListItem_PDPCarouselElement_Fragment;
        };
      })
    | ({ __typename?: "PDPGalleryElement" } & {
        " $fragmentRefs"?: {
          IContentListItem_PDPGalleryElement_Fragment: IContentListItem_PDPGalleryElement_Fragment;
        };
      })
    | ({ __typename?: "PDPHeroElement" } & {
        " $fragmentRefs"?: {
          IContentListItem_PDPHeroElement_Fragment: IContentListItem_PDPHeroElement_Fragment;
        };
      })
    | ({ __typename?: "PDPSpecificationsElement" } & {
        " $fragmentRefs"?: {
          IContentListItem_PDPSpecificationsElement_Fragment: IContentListItem_PDPSpecificationsElement_Fragment;
        };
      })
    | ({ __typename?: "PageSeoSettings" } & {
        " $fragmentRefs"?: {
          IContentListItem_PageSeoSettings_Fragment: IContentListItem_PageSeoSettings_Fragment;
        };
      })
    | ({ __typename?: "ParagraphElement" } & {
        " $fragmentRefs"?: {
          IContentListItem_ParagraphElement_Fragment: IContentListItem_ParagraphElement_Fragment;
        };
      })
    | ({ __typename?: "ProductCardElement" } & {
        " $fragmentRefs"?: {
          IContentListItem_ProductCardElement_Fragment: IContentListItem_ProductCardElement_Fragment;
        };
      })
    | ({ __typename?: "ProductCardListElement" } & {
        " $fragmentRefs"?: {
          IContentListItem_ProductCardListElement_Fragment: IContentListItem_ProductCardListElement_Fragment;
        };
      })
    | ({ __typename?: "ProductCardListSection" } & {
        " $fragmentRefs"?: {
          IContentListItem_ProductCardListSection_Fragment: IContentListItem_ProductCardListSection_Fragment;
        };
      })
    | ({ __typename?: "ProductCarouselElement" } & {
        " $fragmentRefs"?: {
          IContentListItem_ProductCarouselElement_Fragment: IContentListItem_ProductCarouselElement_Fragment;
        };
      })
    | ({ __typename?: "ProductCarouselSection" } & {
        " $fragmentRefs"?: {
          IContentListItem_ProductCarouselSection_Fragment: IContentListItem_ProductCarouselSection_Fragment;
        };
      })
    | ({ __typename?: "ProductDetail" } & {
        " $fragmentRefs"?: {
          IContentListItem_ProductDetail_Fragment: IContentListItem_ProductDetail_Fragment;
        };
      })
    | ({ __typename?: "ProductDetailExperience" } & {
        " $fragmentRefs"?: {
          IContentListItem_ProductDetailExperience_Fragment: IContentListItem_ProductDetailExperience_Fragment;
        };
      })
    | ({ __typename?: "ProductList" } & {
        " $fragmentRefs"?: {
          IContentListItem_ProductList_Fragment: IContentListItem_ProductList_Fragment;
        };
      })
    | ({ __typename?: "ProductListingEPage" } & {
        " $fragmentRefs"?: {
          IContentListItem_ProductListingEPage_Fragment: IContentListItem_ProductListingEPage_Fragment;
        };
      })
    | ({ __typename?: "ProductVisibleElements" } & {
        " $fragmentRefs"?: {
          IContentListItem_ProductVisibleElements_Fragment: IContentListItem_ProductVisibleElements_Fragment;
        };
      })
    | ({ __typename?: "Section" } & {
        " $fragmentRefs"?: {
          IContentListItem_Section_Fragment: IContentListItem_Section_Fragment;
        };
      })
    | ({ __typename?: "SocialMediaBlock" } & {
        " $fragmentRefs"?: {
          IContentListItem_SocialMediaBlock_Fragment: IContentListItem_SocialMediaBlock_Fragment;
          SocialMediaBlockDataFragment: SocialMediaBlockDataFragment;
        };
      })
    | ({ __typename?: "SocialMediaBlocks" } & {
        " $fragmentRefs"?: {
          IContentListItem_SocialMediaBlocks_Fragment: IContentListItem_SocialMediaBlocks_Fragment;
        };
      })
    | ({ __typename?: "SysContentFolder" } & {
        " $fragmentRefs"?: {
          IContentListItem_SysContentFolder_Fragment: IContentListItem_SysContentFolder_Fragment;
        };
      })
    | ({ __typename?: "TopHeaderContainer" } & {
        " $fragmentRefs"?: {
          IContentListItem_TopHeaderContainer_Fragment: IContentListItem_TopHeaderContainer_Fragment;
        };
      })
    | ({ __typename?: "VideoElement" } & {
        " $fragmentRefs"?: {
          IContentListItem_VideoElement_Fragment: IContentListItem_VideoElement_Fragment;
        };
      })
    | ({ __typename?: "VideoMedia" } & {
        " $fragmentRefs"?: {
          IContentListItem_VideoMedia_Fragment: IContentListItem_VideoMedia_Fragment;
        };
      })
    | ({ __typename?: "WebFooterConfigrationBlock" } & {
        " $fragmentRefs"?: {
          IContentListItem_WebFooterConfigrationBlock_Fragment: IContentListItem_WebFooterConfigrationBlock_Fragment;
        };
      })
    | ({ __typename?: "WebHeaderConfigrationBlock" } & {
        " $fragmentRefs"?: {
          IContentListItem_WebHeaderConfigrationBlock_Fragment: IContentListItem_WebHeaderConfigrationBlock_Fragment;
        };
      })
    | ({ __typename?: "_Component" } & {
        " $fragmentRefs"?: {
          IContentListItem__Component_Fragment: IContentListItem__Component_Fragment;
        };
      })
    | ({ __typename?: "_Content" } & {
        " $fragmentRefs"?: {
          IContentListItem__Content_Fragment: IContentListItem__Content_Fragment;
        };
      })
    | ({ __typename?: "_Experience" } & {
        " $fragmentRefs"?: {
          IContentListItem__Experience_Fragment: IContentListItem__Experience_Fragment;
        };
      })
    | ({ __typename?: "_Folder" } & {
        " $fragmentRefs"?: {
          IContentListItem__Folder_Fragment: IContentListItem__Folder_Fragment;
        };
      })
    | ({ __typename?: "_Image" } & {
        " $fragmentRefs"?: {
          IContentListItem__Image_Fragment: IContentListItem__Image_Fragment;
        };
      })
    | ({ __typename?: "_Media" } & {
        " $fragmentRefs"?: {
          IContentListItem__Media_Fragment: IContentListItem__Media_Fragment;
        };
      })
    | ({ __typename?: "_Page" } & {
        " $fragmentRefs"?: {
          IContentListItem__Page_Fragment: IContentListItem__Page_Fragment;
        };
      })
    | ({ __typename?: "_Section" } & {
        " $fragmentRefs"?: {
          IContentListItem__Section_Fragment: IContentListItem__Section_Fragment;
        };
      })
    | ({ __typename?: "_Video" } & {
        " $fragmentRefs"?: {
          IContentListItem__Video_Fragment: IContentListItem__Video_Fragment;
        };
      })
    | ({ __typename?: "test" } & {
        " $fragmentRefs"?: {
          IContentListItem_test_Fragment: IContentListItem_test_Fragment;
        };
      })
    | null
  > | null;
  CopyrightText?: {
    __typename?: "RichText";
    json?: any | null;
    html?: string | null;
  } | null;
  TermsAndConditionsArea?: Array<
    | ({ __typename?: "Link" } & {
        " $fragmentRefs"?: { LinkItemDataFragment: LinkItemDataFragment };
      })
    | null
  > | null;
  paymentmethodarea?: Array<
    | ({ __typename?: "BannerItemElement" } & {
        " $fragmentRefs"?: {
          IContentListItem_BannerItemElement_Fragment: IContentListItem_BannerItemElement_Fragment;
        };
      })
    | ({ __typename?: "BlankExperience" } & {
        " $fragmentRefs"?: {
          IContentListItem_BlankExperience_Fragment: IContentListItem_BlankExperience_Fragment;
        };
      })
    | ({ __typename?: "BlankSection" } & {
        " $fragmentRefs"?: {
          IContentListItem_BlankSection_Fragment: IContentListItem_BlankSection_Fragment;
        };
      })
    | ({ __typename?: "ButtonElement" } & {
        " $fragmentRefs"?: {
          IContentListItem_ButtonElement_Fragment: IContentListItem_ButtonElement_Fragment;
        };
      })
    | ({ __typename?: "CTAElement" } & {
        " $fragmentRefs"?: {
          IContentListItem_CTAElement_Fragment: IContentListItem_CTAElement_Fragment;
        };
      })
    | ({ __typename?: "Company" } & {
        " $fragmentRefs"?: {
          IContentListItem_Company_Fragment: IContentListItem_Company_Fragment;
        };
      })
    | ({ __typename?: "ContainerElement" } & {
        " $fragmentRefs"?: {
          IContentListItem_ContainerElement_Fragment: IContentListItem_ContainerElement_Fragment;
        };
      })
    | ({ __typename?: "ContentTextElement" } & {
        " $fragmentRefs"?: {
          IContentListItem_ContentTextElement_Fragment: IContentListItem_ContentTextElement_Fragment;
        };
      })
    | ({ __typename?: "DefaultVideo" } & {
        " $fragmentRefs"?: {
          IContentListItem_DefaultVideo_Fragment: IContentListItem_DefaultVideo_Fragment;
        };
      })
    | ({ __typename?: "Dictionary" } & {
        " $fragmentRefs"?: {
          IContentListItem_Dictionary_Fragment: IContentListItem_Dictionary_Fragment;
        };
      })
    | ({ __typename?: "DictionaryItem" } & {
        " $fragmentRefs"?: {
          IContentListItem_DictionaryItem_Fragment: IContentListItem_DictionaryItem_Fragment;
        };
      })
    | ({ __typename?: "ExpandableText" } & {
        " $fragmentRefs"?: {
          IContentListItem_ExpandableText_Fragment: IContentListItem_ExpandableText_Fragment;
        };
      })
    | ({ __typename?: "FAQsSection" } & {
        " $fragmentRefs"?: {
          IContentListItem_FAQsSection_Fragment: IContentListItem_FAQsSection_Fragment;
        };
      })
    | ({ __typename?: "GenericMedia" } & {
        " $fragmentRefs"?: {
          IContentListItem_GenericMedia_Fragment: IContentListItem_GenericMedia_Fragment;
        };
      })
    | ({ __typename?: "HeadingElement" } & {
        " $fragmentRefs"?: {
          IContentListItem_HeadingElement_Fragment: IContentListItem_HeadingElement_Fragment;
        };
      })
    | ({ __typename?: "Image" } & {
        " $fragmentRefs"?: {
          IContentListItem_Image_Fragment: IContentListItem_Image_Fragment;
        };
      })
    | ({ __typename?: "ImageBackground" } & {
        " $fragmentRefs"?: {
          IContentListItem_ImageBackground_Fragment: IContentListItem_ImageBackground_Fragment;
        };
      })
    | ({ __typename?: "ImageItemElement" } & {
        " $fragmentRefs"?: {
          IContentListItem_ImageItemElement_Fragment: IContentListItem_ImageItemElement_Fragment;
          ImageItemElementDataFragment: ImageItemElementDataFragment;
        };
      })
    | ({ __typename?: "ImageMedia" } & {
        " $fragmentRefs"?: {
          IContentListItem_ImageMedia_Fragment: IContentListItem_ImageMedia_Fragment;
        };
      })
    | ({ __typename?: "ImageTextItemElement" } & {
        " $fragmentRefs"?: {
          IContentListItem_ImageTextItemElement_Fragment: IContentListItem_ImageTextItemElement_Fragment;
        };
      })
    | ({ __typename?: "LandingPage" } & {
        " $fragmentRefs"?: {
          IContentListItem_LandingPage_Fragment: IContentListItem_LandingPage_Fragment;
        };
      })
    | ({ __typename?: "MegaMenuGroupBlock" } & {
        " $fragmentRefs"?: {
          IContentListItem_MegaMenuGroupBlock_Fragment: IContentListItem_MegaMenuGroupBlock_Fragment;
        };
      })
    | ({ __typename?: "NavigationMenuBlock" } & {
        " $fragmentRefs"?: {
          IContentListItem_NavigationMenuBlock_Fragment: IContentListItem_NavigationMenuBlock_Fragment;
        };
      })
    | ({ __typename?: "OfficeLocation" } & {
        " $fragmentRefs"?: {
          IContentListItem_OfficeLocation_Fragment: IContentListItem_OfficeLocation_Fragment;
        };
      })
    | ({ __typename?: "PDPCarouselElement" } & {
        " $fragmentRefs"?: {
          IContentListItem_PDPCarouselElement_Fragment: IContentListItem_PDPCarouselElement_Fragment;
        };
      })
    | ({ __typename?: "PDPGalleryElement" } & {
        " $fragmentRefs"?: {
          IContentListItem_PDPGalleryElement_Fragment: IContentListItem_PDPGalleryElement_Fragment;
        };
      })
    | ({ __typename?: "PDPHeroElement" } & {
        " $fragmentRefs"?: {
          IContentListItem_PDPHeroElement_Fragment: IContentListItem_PDPHeroElement_Fragment;
        };
      })
    | ({ __typename?: "PDPSpecificationsElement" } & {
        " $fragmentRefs"?: {
          IContentListItem_PDPSpecificationsElement_Fragment: IContentListItem_PDPSpecificationsElement_Fragment;
        };
      })
    | ({ __typename?: "PageSeoSettings" } & {
        " $fragmentRefs"?: {
          IContentListItem_PageSeoSettings_Fragment: IContentListItem_PageSeoSettings_Fragment;
        };
      })
    | ({ __typename?: "ParagraphElement" } & {
        " $fragmentRefs"?: {
          IContentListItem_ParagraphElement_Fragment: IContentListItem_ParagraphElement_Fragment;
        };
      })
    | ({ __typename?: "ProductCardElement" } & {
        " $fragmentRefs"?: {
          IContentListItem_ProductCardElement_Fragment: IContentListItem_ProductCardElement_Fragment;
        };
      })
    | ({ __typename?: "ProductCardListElement" } & {
        " $fragmentRefs"?: {
          IContentListItem_ProductCardListElement_Fragment: IContentListItem_ProductCardListElement_Fragment;
        };
      })
    | ({ __typename?: "ProductCardListSection" } & {
        " $fragmentRefs"?: {
          IContentListItem_ProductCardListSection_Fragment: IContentListItem_ProductCardListSection_Fragment;
        };
      })
    | ({ __typename?: "ProductCarouselElement" } & {
        " $fragmentRefs"?: {
          IContentListItem_ProductCarouselElement_Fragment: IContentListItem_ProductCarouselElement_Fragment;
        };
      })
    | ({ __typename?: "ProductCarouselSection" } & {
        " $fragmentRefs"?: {
          IContentListItem_ProductCarouselSection_Fragment: IContentListItem_ProductCarouselSection_Fragment;
        };
      })
    | ({ __typename?: "ProductDetail" } & {
        " $fragmentRefs"?: {
          IContentListItem_ProductDetail_Fragment: IContentListItem_ProductDetail_Fragment;
        };
      })
    | ({ __typename?: "ProductDetailExperience" } & {
        " $fragmentRefs"?: {
          IContentListItem_ProductDetailExperience_Fragment: IContentListItem_ProductDetailExperience_Fragment;
        };
      })
    | ({ __typename?: "ProductList" } & {
        " $fragmentRefs"?: {
          IContentListItem_ProductList_Fragment: IContentListItem_ProductList_Fragment;
        };
      })
    | ({ __typename?: "ProductListingEPage" } & {
        " $fragmentRefs"?: {
          IContentListItem_ProductListingEPage_Fragment: IContentListItem_ProductListingEPage_Fragment;
        };
      })
    | ({ __typename?: "ProductVisibleElements" } & {
        " $fragmentRefs"?: {
          IContentListItem_ProductVisibleElements_Fragment: IContentListItem_ProductVisibleElements_Fragment;
        };
      })
    | ({ __typename?: "Section" } & {
        " $fragmentRefs"?: {
          IContentListItem_Section_Fragment: IContentListItem_Section_Fragment;
        };
      })
    | ({ __typename?: "SocialMediaBlock" } & {
        " $fragmentRefs"?: {
          IContentListItem_SocialMediaBlock_Fragment: IContentListItem_SocialMediaBlock_Fragment;
        };
      })
    | ({ __typename?: "SocialMediaBlocks" } & {
        " $fragmentRefs"?: {
          IContentListItem_SocialMediaBlocks_Fragment: IContentListItem_SocialMediaBlocks_Fragment;
        };
      })
    | ({ __typename?: "SysContentFolder" } & {
        " $fragmentRefs"?: {
          IContentListItem_SysContentFolder_Fragment: IContentListItem_SysContentFolder_Fragment;
        };
      })
    | ({ __typename?: "TopHeaderContainer" } & {
        " $fragmentRefs"?: {
          IContentListItem_TopHeaderContainer_Fragment: IContentListItem_TopHeaderContainer_Fragment;
        };
      })
    | ({ __typename?: "VideoElement" } & {
        " $fragmentRefs"?: {
          IContentListItem_VideoElement_Fragment: IContentListItem_VideoElement_Fragment;
        };
      })
    | ({ __typename?: "VideoMedia" } & {
        " $fragmentRefs"?: {
          IContentListItem_VideoMedia_Fragment: IContentListItem_VideoMedia_Fragment;
        };
      })
    | ({ __typename?: "WebFooterConfigrationBlock" } & {
        " $fragmentRefs"?: {
          IContentListItem_WebFooterConfigrationBlock_Fragment: IContentListItem_WebFooterConfigrationBlock_Fragment;
        };
      })
    | ({ __typename?: "WebHeaderConfigrationBlock" } & {
        " $fragmentRefs"?: {
          IContentListItem_WebHeaderConfigrationBlock_Fragment: IContentListItem_WebHeaderConfigrationBlock_Fragment;
        };
      })
    | ({ __typename?: "_Component" } & {
        " $fragmentRefs"?: {
          IContentListItem__Component_Fragment: IContentListItem__Component_Fragment;
        };
      })
    | ({ __typename?: "_Content" } & {
        " $fragmentRefs"?: {
          IContentListItem__Content_Fragment: IContentListItem__Content_Fragment;
        };
      })
    | ({ __typename?: "_Experience" } & {
        " $fragmentRefs"?: {
          IContentListItem__Experience_Fragment: IContentListItem__Experience_Fragment;
        };
      })
    | ({ __typename?: "_Folder" } & {
        " $fragmentRefs"?: {
          IContentListItem__Folder_Fragment: IContentListItem__Folder_Fragment;
        };
      })
    | ({ __typename?: "_Image" } & {
        " $fragmentRefs"?: {
          IContentListItem__Image_Fragment: IContentListItem__Image_Fragment;
        };
      })
    | ({ __typename?: "_Media" } & {
        " $fragmentRefs"?: {
          IContentListItem__Media_Fragment: IContentListItem__Media_Fragment;
        };
      })
    | ({ __typename?: "_Page" } & {
        " $fragmentRefs"?: {
          IContentListItem__Page_Fragment: IContentListItem__Page_Fragment;
        };
      })
    | ({ __typename?: "_Section" } & {
        " $fragmentRefs"?: {
          IContentListItem__Section_Fragment: IContentListItem__Section_Fragment;
        };
      })
    | ({ __typename?: "_Video" } & {
        " $fragmentRefs"?: {
          IContentListItem__Video_Fragment: IContentListItem__Video_Fragment;
        };
      })
    | ({ __typename?: "test" } & {
        " $fragmentRefs"?: {
          IContentListItem_test_Fragment: IContentListItem_test_Fragment;
        };
      })
    | null
  > | null;
} & { " $fragmentName"?: "WebFooterConfigrationBlockDataFragment" };

export type getFooterQueryVariables = Exact<{ [key: string]: never }>;

export type getFooterQuery = {
  __typename?: "Query";
  footer?: {
    __typename?: "WebFooterConfigrationBlockOutput";
    item?:
      | ({ __typename?: "WebFooterConfigrationBlock" } & {
          " $fragmentRefs"?: {
            WebFooterConfigrationBlockDataFragment: WebFooterConfigrationBlockDataFragment;
          };
        })
      | null;
  } | null;
};

export type getBannerQueryVariables = Exact<{
  key: Scalars["String"]["input"];
  version?: InputMaybe<Scalars["String"]["input"]>;
  locale?: InputMaybe<Array<Locales> | Locales>;
  path?: InputMaybe<Scalars["String"]["input"]>;
  domain?: InputMaybe<Scalars["String"]["input"]>;
  changeset?: InputMaybe<Scalars["String"]["input"]>;
}>;

export type getBannerQuery = {
  __typename?: "Query";
  banner?: {
    __typename?: "BannerItemElementOutput";
    item?:
      | ({ __typename?: "BannerItemElement" } & {
          " $fragmentRefs"?: {
            BannerItemElementDataFragment: BannerItemElementDataFragment;
          };
        })
      | null;
  } | null;
};

export type WebHeaderConfigrationBlockDataFragment = {
  __typename?: "WebHeaderConfigrationBlock";
  SearchBarText?: string | null;
  SiteLogoAltText?: string | null;
  SiteSearchEnable?: boolean | null;
  HeaderCTA?:
    | ({ __typename?: "ContentUrl" } & {
        " $fragmentRefs"?: { LinkDataFragment: LinkDataFragment };
      })
    | null;
  TopNavigationHeader?: Array<
    | { __typename?: "BannerItemElement" }
    | { __typename?: "BlankExperience" }
    | { __typename?: "BlankSection" }
    | { __typename?: "ButtonElement" }
    | { __typename?: "CTAElement" }
    | { __typename?: "Company" }
    | { __typename?: "ContainerElement" }
    | { __typename?: "ContentTextElement" }
    | { __typename?: "DefaultVideo" }
    | { __typename?: "Dictionary" }
    | { __typename?: "DictionaryItem" }
    | { __typename?: "ExpandableText" }
    | { __typename?: "FAQsSection" }
    | { __typename?: "GenericMedia" }
    | { __typename?: "HeadingElement" }
    | { __typename?: "Image" }
    | { __typename?: "ImageBackground" }
    | { __typename?: "ImageItemElement" }
    | { __typename?: "ImageMedia" }
    | { __typename?: "ImageTextItemElement" }
    | { __typename?: "LandingPage" }
    | ({ __typename?: "MegaMenuGroupBlock" } & {
        " $fragmentRefs"?: {
          MegaMenuGroupBlockDataFragment: MegaMenuGroupBlockDataFragment;
        };
      })
    | { __typename?: "NavigationMenuBlock" }
    | { __typename?: "OfficeLocation" }
    | { __typename?: "PDPCarouselElement" }
    | { __typename?: "PDPGalleryElement" }
    | { __typename?: "PDPHeroElement" }
    | { __typename?: "PDPSpecificationsElement" }
    | { __typename?: "PageSeoSettings" }
    | { __typename?: "ParagraphElement" }
    | { __typename?: "ProductCardElement" }
    | { __typename?: "ProductCardListElement" }
    | { __typename?: "ProductCardListSection" }
    | { __typename?: "ProductCarouselElement" }
    | { __typename?: "ProductCarouselSection" }
    | { __typename?: "ProductDetail" }
    | { __typename?: "ProductDetailExperience" }
    | { __typename?: "ProductList" }
    | { __typename?: "ProductListingEPage" }
    | { __typename?: "ProductVisibleElements" }
    | { __typename?: "Section" }
    | { __typename?: "SocialMediaBlock" }
    | { __typename?: "SocialMediaBlocks" }
    | { __typename?: "SysContentFolder" }
    | ({ __typename?: "TopHeaderContainer" } & {
        " $fragmentRefs"?: {
          TopHeaderContainerDataFragment: TopHeaderContainerDataFragment;
        };
      })
    | { __typename?: "VideoElement" }
    | { __typename?: "VideoMedia" }
    | { __typename?: "WebFooterConfigrationBlock" }
    | { __typename?: "WebHeaderConfigrationBlock" }
    | { __typename?: "_Component" }
    | { __typename?: "_Content" }
    | { __typename?: "_Experience" }
    | { __typename?: "_Folder" }
    | { __typename?: "_Image" }
    | { __typename?: "_Media" }
    | { __typename?: "_Page" }
    | { __typename?: "_Section" }
    | { __typename?: "_Video" }
    | { __typename?: "test" }
    | null
  > | null;
  MainNavigationHeader?: Array<
    | { __typename?: "BannerItemElement" }
    | { __typename?: "BlankExperience" }
    | { __typename?: "BlankSection" }
    | { __typename?: "ButtonElement" }
    | { __typename?: "CTAElement" }
    | { __typename?: "Company" }
    | { __typename?: "ContainerElement" }
    | { __typename?: "ContentTextElement" }
    | { __typename?: "DefaultVideo" }
    | { __typename?: "Dictionary" }
    | { __typename?: "DictionaryItem" }
    | { __typename?: "ExpandableText" }
    | { __typename?: "FAQsSection" }
    | { __typename?: "GenericMedia" }
    | { __typename?: "HeadingElement" }
    | { __typename?: "Image" }
    | { __typename?: "ImageBackground" }
    | { __typename?: "ImageItemElement" }
    | { __typename?: "ImageMedia" }
    | { __typename?: "ImageTextItemElement" }
    | { __typename?: "LandingPage" }
    | ({ __typename?: "MegaMenuGroupBlock" } & {
        " $fragmentRefs"?: {
          MegaMenuGroupBlockDataFragment: MegaMenuGroupBlockDataFragment;
        };
      })
    | { __typename?: "NavigationMenuBlock" }
    | { __typename?: "OfficeLocation" }
    | { __typename?: "PDPCarouselElement" }
    | { __typename?: "PDPGalleryElement" }
    | { __typename?: "PDPHeroElement" }
    | { __typename?: "PDPSpecificationsElement" }
    | { __typename?: "PageSeoSettings" }
    | { __typename?: "ParagraphElement" }
    | { __typename?: "ProductCardElement" }
    | { __typename?: "ProductCardListElement" }
    | { __typename?: "ProductCardListSection" }
    | { __typename?: "ProductCarouselElement" }
    | { __typename?: "ProductCarouselSection" }
    | { __typename?: "ProductDetail" }
    | { __typename?: "ProductDetailExperience" }
    | { __typename?: "ProductList" }
    | { __typename?: "ProductListingEPage" }
    | { __typename?: "ProductVisibleElements" }
    | { __typename?: "Section" }
    | { __typename?: "SocialMediaBlock" }
    | { __typename?: "SocialMediaBlocks" }
    | { __typename?: "SysContentFolder" }
    | { __typename?: "TopHeaderContainer" }
    | { __typename?: "VideoElement" }
    | { __typename?: "VideoMedia" }
    | { __typename?: "WebFooterConfigrationBlock" }
    | { __typename?: "WebHeaderConfigrationBlock" }
    | { __typename?: "_Component" }
    | { __typename?: "_Content" }
    | { __typename?: "_Experience" }
    | { __typename?: "_Folder" }
    | { __typename?: "_Image" }
    | { __typename?: "_Media" }
    | { __typename?: "_Page" }
    | { __typename?: "_Section" }
    | { __typename?: "_Video" }
    | { __typename?: "test" }
    | null
  > | null;
  SiteLogoIcon?:
    | ({ __typename?: "ContentReference" } & {
        " $fragmentRefs"?: { ReferenceDataFragment: ReferenceDataFragment };
      })
    | null;
} & { " $fragmentName"?: "WebHeaderConfigrationBlockDataFragment" };

export type getHeaderQueryVariables = Exact<{ [key: string]: never }>;

export type getHeaderQuery = {
  __typename?: "Query";
  header?: {
    __typename?: "WebHeaderConfigrationBlockOutput";
    item?:
      | ({ __typename?: "WebHeaderConfigrationBlock" } & {
          " $fragmentRefs"?: {
            WebHeaderConfigrationBlockDataFragment: WebHeaderConfigrationBlockDataFragment;
          };
        })
      | null;
  } | null;
};

export type LinkPropertyDataFragment = {
  __typename?: "Link";
  title?: string | null;
  text?: string | null;
  target?: string | null;
  url?:
    | ({ __typename?: "ContentUrl" } & {
        " $fragmentRefs"?: { LinkDataFragment: LinkDataFragment };
      })
    | null;
} & { " $fragmentName"?: "LinkPropertyDataFragment" };

export type BlankExperienceDataFragment = ({
  __typename?: "BlankExperience";
} & {
  " $fragmentRefs"?: {
    ExperienceData_BlankExperience_Fragment: ExperienceData_BlankExperience_Fragment;
  };
}) & { " $fragmentName"?: "BlankExperienceDataFragment" };

export type ProductDetailExperienceDataFragment = ({
  __typename?: "ProductDetailExperience";
  SEOsettings?:
    | { __typename?: "BannerItemElement" }
    | { __typename?: "BlankExperience" }
    | { __typename?: "BlankSection" }
    | { __typename?: "ButtonElement" }
    | { __typename?: "CTAElement" }
    | { __typename?: "Company" }
    | { __typename?: "ContainerElement" }
    | { __typename?: "ContentTextElement" }
    | { __typename?: "DefaultVideo" }
    | { __typename?: "Dictionary" }
    | { __typename?: "DictionaryItem" }
    | { __typename?: "ExpandableText" }
    | { __typename?: "FAQsSection" }
    | { __typename?: "GenericMedia" }
    | { __typename?: "HeadingElement" }
    | { __typename?: "Image" }
    | { __typename?: "ImageBackground" }
    | { __typename?: "ImageItemElement" }
    | { __typename?: "ImageMedia" }
    | { __typename?: "ImageTextItemElement" }
    | { __typename?: "LandingPage" }
    | { __typename?: "MegaMenuGroupBlock" }
    | { __typename?: "NavigationMenuBlock" }
    | { __typename?: "OfficeLocation" }
    | { __typename?: "PDPCarouselElement" }
    | { __typename?: "PDPGalleryElement" }
    | { __typename?: "PDPHeroElement" }
    | { __typename?: "PDPSpecificationsElement" }
    | ({ __typename?: "PageSeoSettings" } & {
        " $fragmentRefs"?: {
          PageSeoSettingsDataFragment: PageSeoSettingsDataFragment;
        };
      })
    | { __typename?: "ParagraphElement" }
    | { __typename?: "ProductCardElement" }
    | { __typename?: "ProductCardListElement" }
    | { __typename?: "ProductCardListSection" }
    | { __typename?: "ProductCarouselElement" }
    | { __typename?: "ProductCarouselSection" }
    | { __typename?: "ProductDetail" }
    | { __typename?: "ProductDetailExperience" }
    | { __typename?: "ProductList" }
    | { __typename?: "ProductListingEPage" }
    | { __typename?: "ProductVisibleElements" }
    | { __typename?: "Section" }
    | { __typename?: "SocialMediaBlock" }
    | { __typename?: "SocialMediaBlocks" }
    | { __typename?: "SysContentFolder" }
    | { __typename?: "TopHeaderContainer" }
    | { __typename?: "VideoElement" }
    | { __typename?: "VideoMedia" }
    | { __typename?: "WebFooterConfigrationBlock" }
    | { __typename?: "WebHeaderConfigrationBlock" }
    | { __typename?: "_Component" }
    | { __typename?: "_Content" }
    | { __typename?: "_Experience" }
    | { __typename?: "_Folder" }
    | { __typename?: "_Image" }
    | { __typename?: "_Media" }
    | { __typename?: "_Page" }
    | { __typename?: "_Section" }
    | { __typename?: "_Video" }
    | { __typename?: "test" }
    | null;
} & {
  " $fragmentRefs"?: {
    ExperienceData_ProductDetailExperience_Fragment: ExperienceData_ProductDetailExperience_Fragment;
  };
}) & { " $fragmentName"?: "ProductDetailExperienceDataFragment" };

export type ProductListingEPageDataFragment = ({
  __typename?: "ProductListingEPage";
} & {
  " $fragmentRefs"?: {
    ExperienceData_ProductListingEPage_Fragment: ExperienceData_ProductListingEPage_Fragment;
  };
}) & { " $fragmentName"?: "ProductListingEPageDataFragment" };

export type SectionDataFragment = {
  __typename?: "Section";
  empty?:
    | { __typename?: "ContentMetadata"; key?: string | null }
    | { __typename?: "InstanceMetadata"; key?: string | null }
    | { __typename?: "ItemMetadata"; key?: string | null }
    | { __typename?: "MediaMetadata"; key?: string | null }
    | null;
} & { " $fragmentName"?: "SectionDataFragment" };

export type PDPSpecificationsElementDataFragment = {
  __typename?: "PDPSpecificationsElement";
  empty?:
    | { __typename?: "ContentMetadata"; key?: string | null }
    | { __typename?: "InstanceMetadata"; key?: string | null }
    | { __typename?: "ItemMetadata"; key?: string | null }
    | { __typename?: "MediaMetadata"; key?: string | null }
    | null;
} & { " $fragmentName"?: "PDPSpecificationsElementDataFragment" };

export type ProductCarouselElementDataFragment = {
  __typename?: "ProductCarouselElement";
  CarouselSource?: string | null;
  CategoryID?: string | null;
  productsofView?: number | null;
  PagingSize?: number | null;
  Heading?: {
    __typename?: "RichText";
    json?: any | null;
    html?: string | null;
  } | null;
  VisibleElements?:
    | ({ __typename?: "ContentReference" } & {
        " $fragmentRefs"?: { ReferenceDataFragment: ReferenceDataFragment };
      })
    | null;
} & { " $fragmentName"?: "ProductCarouselElementDataFragment" };

type IContentData_BannerItemElement_Fragment = {
  __typename?: "BannerItemElement";
  _type: "BannerItemElement";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IContentData_BannerItemElement_Fragment" };

type IContentData_BlankExperience_Fragment = {
  __typename?: "BlankExperience";
  _type: "BlankExperience";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IContentData_BlankExperience_Fragment" };

type IContentData_BlankSection_Fragment = {
  __typename?: "BlankSection";
  _type: "BlankSection";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IContentData_BlankSection_Fragment" };

type IContentData_ButtonElement_Fragment = {
  __typename?: "ButtonElement";
  _type: "ButtonElement";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IContentData_ButtonElement_Fragment" };

type IContentData_CTAElement_Fragment = {
  __typename?: "CTAElement";
  _type: "CTAElement";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IContentData_CTAElement_Fragment" };

type IContentData_Company_Fragment = {
  __typename?: "Company";
  _type: "Company";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IContentData_Company_Fragment" };

type IContentData_ContainerElement_Fragment = {
  __typename?: "ContainerElement";
  _type: "ContainerElement";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IContentData_ContainerElement_Fragment" };

type IContentData_ContentTextElement_Fragment = {
  __typename?: "ContentTextElement";
  _type: "ContentTextElement";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IContentData_ContentTextElement_Fragment" };

type IContentData_DefaultVideo_Fragment = {
  __typename?: "DefaultVideo";
  _type: "DefaultVideo";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IContentData_DefaultVideo_Fragment" };

type IContentData_Dictionary_Fragment = {
  __typename?: "Dictionary";
  _type: "Dictionary";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IContentData_Dictionary_Fragment" };

type IContentData_DictionaryItem_Fragment = {
  __typename?: "DictionaryItem";
  _type: "DictionaryItem";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IContentData_DictionaryItem_Fragment" };

type IContentData_ExpandableText_Fragment = {
  __typename?: "ExpandableText";
  _type: "ExpandableText";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IContentData_ExpandableText_Fragment" };

type IContentData_FAQsSection_Fragment = {
  __typename?: "FAQsSection";
  _type: "FAQsSection";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IContentData_FAQsSection_Fragment" };

type IContentData_GenericMedia_Fragment = {
  __typename?: "GenericMedia";
  _type: "GenericMedia";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IContentData_GenericMedia_Fragment" };

type IContentData_HeadingElement_Fragment = {
  __typename?: "HeadingElement";
  _type: "HeadingElement";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IContentData_HeadingElement_Fragment" };

type IContentData_Image_Fragment = {
  __typename?: "Image";
  _type: "Image";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IContentData_Image_Fragment" };

type IContentData_ImageBackground_Fragment = {
  __typename?: "ImageBackground";
  _type: "ImageBackground";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IContentData_ImageBackground_Fragment" };

type IContentData_ImageItemElement_Fragment = {
  __typename?: "ImageItemElement";
  _type: "ImageItemElement";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IContentData_ImageItemElement_Fragment" };

type IContentData_ImageMedia_Fragment = {
  __typename?: "ImageMedia";
  _type: "ImageMedia";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IContentData_ImageMedia_Fragment" };

type IContentData_ImageTextItemElement_Fragment = {
  __typename?: "ImageTextItemElement";
  _type: "ImageTextItemElement";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IContentData_ImageTextItemElement_Fragment" };

type IContentData_LandingPage_Fragment = {
  __typename?: "LandingPage";
  _type: "LandingPage";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IContentData_LandingPage_Fragment" };

type IContentData_MegaMenuGroupBlock_Fragment = {
  __typename?: "MegaMenuGroupBlock";
  _type: "MegaMenuGroupBlock";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IContentData_MegaMenuGroupBlock_Fragment" };

type IContentData_NavigationMenuBlock_Fragment = {
  __typename?: "NavigationMenuBlock";
  _type: "NavigationMenuBlock";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IContentData_NavigationMenuBlock_Fragment" };

type IContentData_OfficeLocation_Fragment = {
  __typename?: "OfficeLocation";
  _type: "OfficeLocation";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IContentData_OfficeLocation_Fragment" };

type IContentData_PDPCarouselElement_Fragment = {
  __typename?: "PDPCarouselElement";
  _type: "PDPCarouselElement";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IContentData_PDPCarouselElement_Fragment" };

type IContentData_PDPGalleryElement_Fragment = {
  __typename?: "PDPGalleryElement";
  _type: "PDPGalleryElement";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IContentData_PDPGalleryElement_Fragment" };

type IContentData_PDPHeroElement_Fragment = {
  __typename?: "PDPHeroElement";
  _type: "PDPHeroElement";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IContentData_PDPHeroElement_Fragment" };

type IContentData_PDPSpecificationsElement_Fragment = {
  __typename?: "PDPSpecificationsElement";
  _type: "PDPSpecificationsElement";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IContentData_PDPSpecificationsElement_Fragment" };

type IContentData_PageSeoSettings_Fragment = {
  __typename?: "PageSeoSettings";
  _type: "PageSeoSettings";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IContentData_PageSeoSettings_Fragment" };

type IContentData_ParagraphElement_Fragment = {
  __typename?: "ParagraphElement";
  _type: "ParagraphElement";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IContentData_ParagraphElement_Fragment" };

type IContentData_ProductCardElement_Fragment = {
  __typename?: "ProductCardElement";
  _type: "ProductCardElement";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IContentData_ProductCardElement_Fragment" };

type IContentData_ProductCardListElement_Fragment = {
  __typename?: "ProductCardListElement";
  _type: "ProductCardListElement";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IContentData_ProductCardListElement_Fragment" };

type IContentData_ProductCardListSection_Fragment = {
  __typename?: "ProductCardListSection";
  _type: "ProductCardListSection";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IContentData_ProductCardListSection_Fragment" };

type IContentData_ProductCarouselElement_Fragment = {
  __typename?: "ProductCarouselElement";
  _type: "ProductCarouselElement";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IContentData_ProductCarouselElement_Fragment" };

type IContentData_ProductCarouselSection_Fragment = {
  __typename?: "ProductCarouselSection";
  _type: "ProductCarouselSection";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IContentData_ProductCarouselSection_Fragment" };

type IContentData_ProductDetail_Fragment = {
  __typename?: "ProductDetail";
  _type: "ProductDetail";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IContentData_ProductDetail_Fragment" };

type IContentData_ProductDetailExperience_Fragment = {
  __typename?: "ProductDetailExperience";
  _type: "ProductDetailExperience";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IContentData_ProductDetailExperience_Fragment" };

type IContentData_ProductList_Fragment = {
  __typename?: "ProductList";
  _type: "ProductList";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IContentData_ProductList_Fragment" };

type IContentData_ProductListingEPage_Fragment = {
  __typename?: "ProductListingEPage";
  _type: "ProductListingEPage";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IContentData_ProductListingEPage_Fragment" };

type IContentData_ProductVisibleElements_Fragment = {
  __typename?: "ProductVisibleElements";
  _type: "ProductVisibleElements";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IContentData_ProductVisibleElements_Fragment" };

type IContentData_Section_Fragment = {
  __typename?: "Section";
  _type: "Section";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IContentData_Section_Fragment" };

type IContentData_SocialMediaBlock_Fragment = {
  __typename?: "SocialMediaBlock";
  _type: "SocialMediaBlock";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IContentData_SocialMediaBlock_Fragment" };

type IContentData_SocialMediaBlocks_Fragment = {
  __typename?: "SocialMediaBlocks";
  _type: "SocialMediaBlocks";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IContentData_SocialMediaBlocks_Fragment" };

type IContentData_SysContentFolder_Fragment = {
  __typename?: "SysContentFolder";
  _type: "SysContentFolder";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IContentData_SysContentFolder_Fragment" };

type IContentData_TopHeaderContainer_Fragment = {
  __typename?: "TopHeaderContainer";
  _type: "TopHeaderContainer";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IContentData_TopHeaderContainer_Fragment" };

type IContentData_VideoElement_Fragment = {
  __typename?: "VideoElement";
  _type: "VideoElement";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IContentData_VideoElement_Fragment" };

type IContentData_VideoMedia_Fragment = {
  __typename?: "VideoMedia";
  _type: "VideoMedia";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IContentData_VideoMedia_Fragment" };

type IContentData_WebFooterConfigrationBlock_Fragment = {
  __typename?: "WebFooterConfigrationBlock";
  _type: "WebFooterConfigrationBlock";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IContentData_WebFooterConfigrationBlock_Fragment" };

type IContentData_WebHeaderConfigrationBlock_Fragment = {
  __typename?: "WebHeaderConfigrationBlock";
  _type: "WebHeaderConfigrationBlock";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IContentData_WebHeaderConfigrationBlock_Fragment" };

type IContentData__Component_Fragment = {
  __typename?: "_Component";
  _type: "_Component";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IContentData__Component_Fragment" };

type IContentData__Content_Fragment = {
  __typename?: "_Content";
  _type: "_Content";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IContentData__Content_Fragment" };

type IContentData__Experience_Fragment = {
  __typename?: "_Experience";
  _type: "_Experience";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IContentData__Experience_Fragment" };

type IContentData__Folder_Fragment = {
  __typename?: "_Folder";
  _type: "_Folder";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IContentData__Folder_Fragment" };

type IContentData__Image_Fragment = {
  __typename?: "_Image";
  _type: "_Image";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IContentData__Image_Fragment" };

type IContentData__Media_Fragment = {
  __typename?: "_Media";
  _type: "_Media";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IContentData__Media_Fragment" };

type IContentData__Page_Fragment = {
  __typename?: "_Page";
  _type: "_Page";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IContentData__Page_Fragment" };

type IContentData__Section_Fragment = {
  __typename?: "_Section";
  _type: "_Section";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IContentData__Section_Fragment" };

type IContentData__Video_Fragment = {
  __typename?: "_Video";
  _type: "_Video";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IContentData__Video_Fragment" };

type IContentData_test_Fragment = {
  __typename?: "test";
  _type: "test";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IContentData_test_Fragment" };

export type IContentDataFragment =
  | IContentData_BannerItemElement_Fragment
  | IContentData_BlankExperience_Fragment
  | IContentData_BlankSection_Fragment
  | IContentData_ButtonElement_Fragment
  | IContentData_CTAElement_Fragment
  | IContentData_Company_Fragment
  | IContentData_ContainerElement_Fragment
  | IContentData_ContentTextElement_Fragment
  | IContentData_DefaultVideo_Fragment
  | IContentData_Dictionary_Fragment
  | IContentData_DictionaryItem_Fragment
  | IContentData_ExpandableText_Fragment
  | IContentData_FAQsSection_Fragment
  | IContentData_GenericMedia_Fragment
  | IContentData_HeadingElement_Fragment
  | IContentData_Image_Fragment
  | IContentData_ImageBackground_Fragment
  | IContentData_ImageItemElement_Fragment
  | IContentData_ImageMedia_Fragment
  | IContentData_ImageTextItemElement_Fragment
  | IContentData_LandingPage_Fragment
  | IContentData_MegaMenuGroupBlock_Fragment
  | IContentData_NavigationMenuBlock_Fragment
  | IContentData_OfficeLocation_Fragment
  | IContentData_PDPCarouselElement_Fragment
  | IContentData_PDPGalleryElement_Fragment
  | IContentData_PDPHeroElement_Fragment
  | IContentData_PDPSpecificationsElement_Fragment
  | IContentData_PageSeoSettings_Fragment
  | IContentData_ParagraphElement_Fragment
  | IContentData_ProductCardElement_Fragment
  | IContentData_ProductCardListElement_Fragment
  | IContentData_ProductCardListSection_Fragment
  | IContentData_ProductCarouselElement_Fragment
  | IContentData_ProductCarouselSection_Fragment
  | IContentData_ProductDetail_Fragment
  | IContentData_ProductDetailExperience_Fragment
  | IContentData_ProductList_Fragment
  | IContentData_ProductListingEPage_Fragment
  | IContentData_ProductVisibleElements_Fragment
  | IContentData_Section_Fragment
  | IContentData_SocialMediaBlock_Fragment
  | IContentData_SocialMediaBlocks_Fragment
  | IContentData_SysContentFolder_Fragment
  | IContentData_TopHeaderContainer_Fragment
  | IContentData_VideoElement_Fragment
  | IContentData_VideoMedia_Fragment
  | IContentData_WebFooterConfigrationBlock_Fragment
  | IContentData_WebHeaderConfigrationBlock_Fragment
  | IContentData__Component_Fragment
  | IContentData__Content_Fragment
  | IContentData__Experience_Fragment
  | IContentData__Folder_Fragment
  | IContentData__Image_Fragment
  | IContentData__Media_Fragment
  | IContentData__Page_Fragment
  | IContentData__Section_Fragment
  | IContentData__Video_Fragment
  | IContentData_test_Fragment;

type IElementData_BannerItemElement_Fragment = {
  __typename?: "BannerItemElement";
  _type: "BannerItemElement";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IElementData_BannerItemElement_Fragment" };

type IElementData_BlankSection_Fragment = {
  __typename?: "BlankSection";
  _type: "BlankSection";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IElementData_BlankSection_Fragment" };

type IElementData_ButtonElement_Fragment = {
  __typename?: "ButtonElement";
  _type: "ButtonElement";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IElementData_ButtonElement_Fragment" };

type IElementData_CTAElement_Fragment = {
  __typename?: "CTAElement";
  _type: "CTAElement";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IElementData_CTAElement_Fragment" };

type IElementData_Company_Fragment = {
  __typename?: "Company";
  _type: "Company";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IElementData_Company_Fragment" };

type IElementData_ContainerElement_Fragment = {
  __typename?: "ContainerElement";
  _type: "ContainerElement";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IElementData_ContainerElement_Fragment" };

type IElementData_ContentTextElement_Fragment = {
  __typename?: "ContentTextElement";
  _type: "ContentTextElement";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IElementData_ContentTextElement_Fragment" };

type IElementData_Dictionary_Fragment = {
  __typename?: "Dictionary";
  _type: "Dictionary";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IElementData_Dictionary_Fragment" };

type IElementData_DictionaryItem_Fragment = {
  __typename?: "DictionaryItem";
  _type: "DictionaryItem";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IElementData_DictionaryItem_Fragment" };

type IElementData_ExpandableText_Fragment = {
  __typename?: "ExpandableText";
  _type: "ExpandableText";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IElementData_ExpandableText_Fragment" };

type IElementData_FAQsSection_Fragment = {
  __typename?: "FAQsSection";
  _type: "FAQsSection";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IElementData_FAQsSection_Fragment" };

type IElementData_HeadingElement_Fragment = {
  __typename?: "HeadingElement";
  _type: "HeadingElement";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IElementData_HeadingElement_Fragment" };

type IElementData_ImageBackground_Fragment = {
  __typename?: "ImageBackground";
  _type: "ImageBackground";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IElementData_ImageBackground_Fragment" };

type IElementData_ImageItemElement_Fragment = {
  __typename?: "ImageItemElement";
  _type: "ImageItemElement";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IElementData_ImageItemElement_Fragment" };

type IElementData_ImageTextItemElement_Fragment = {
  __typename?: "ImageTextItemElement";
  _type: "ImageTextItemElement";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IElementData_ImageTextItemElement_Fragment" };

type IElementData_MegaMenuGroupBlock_Fragment = {
  __typename?: "MegaMenuGroupBlock";
  _type: "MegaMenuGroupBlock";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IElementData_MegaMenuGroupBlock_Fragment" };

type IElementData_NavigationMenuBlock_Fragment = {
  __typename?: "NavigationMenuBlock";
  _type: "NavigationMenuBlock";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IElementData_NavigationMenuBlock_Fragment" };

type IElementData_OfficeLocation_Fragment = {
  __typename?: "OfficeLocation";
  _type: "OfficeLocation";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IElementData_OfficeLocation_Fragment" };

type IElementData_PDPCarouselElement_Fragment = {
  __typename?: "PDPCarouselElement";
  _type: "PDPCarouselElement";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IElementData_PDPCarouselElement_Fragment" };

type IElementData_PDPGalleryElement_Fragment = {
  __typename?: "PDPGalleryElement";
  _type: "PDPGalleryElement";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IElementData_PDPGalleryElement_Fragment" };

type IElementData_PDPHeroElement_Fragment = {
  __typename?: "PDPHeroElement";
  _type: "PDPHeroElement";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IElementData_PDPHeroElement_Fragment" };

type IElementData_PDPSpecificationsElement_Fragment = {
  __typename?: "PDPSpecificationsElement";
  _type: "PDPSpecificationsElement";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IElementData_PDPSpecificationsElement_Fragment" };

type IElementData_PageSeoSettings_Fragment = {
  __typename?: "PageSeoSettings";
  _type: "PageSeoSettings";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IElementData_PageSeoSettings_Fragment" };

type IElementData_ParagraphElement_Fragment = {
  __typename?: "ParagraphElement";
  _type: "ParagraphElement";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IElementData_ParagraphElement_Fragment" };

type IElementData_ProductCardElement_Fragment = {
  __typename?: "ProductCardElement";
  _type: "ProductCardElement";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IElementData_ProductCardElement_Fragment" };

type IElementData_ProductCardListElement_Fragment = {
  __typename?: "ProductCardListElement";
  _type: "ProductCardListElement";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IElementData_ProductCardListElement_Fragment" };

type IElementData_ProductCardListSection_Fragment = {
  __typename?: "ProductCardListSection";
  _type: "ProductCardListSection";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IElementData_ProductCardListSection_Fragment" };

type IElementData_ProductCarouselElement_Fragment = {
  __typename?: "ProductCarouselElement";
  _type: "ProductCarouselElement";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IElementData_ProductCarouselElement_Fragment" };

type IElementData_ProductCarouselSection_Fragment = {
  __typename?: "ProductCarouselSection";
  _type: "ProductCarouselSection";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IElementData_ProductCarouselSection_Fragment" };

type IElementData_ProductList_Fragment = {
  __typename?: "ProductList";
  _type: "ProductList";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IElementData_ProductList_Fragment" };

type IElementData_ProductVisibleElements_Fragment = {
  __typename?: "ProductVisibleElements";
  _type: "ProductVisibleElements";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IElementData_ProductVisibleElements_Fragment" };

type IElementData_SocialMediaBlock_Fragment = {
  __typename?: "SocialMediaBlock";
  _type: "SocialMediaBlock";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IElementData_SocialMediaBlock_Fragment" };

type IElementData_SocialMediaBlocks_Fragment = {
  __typename?: "SocialMediaBlocks";
  _type: "SocialMediaBlocks";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IElementData_SocialMediaBlocks_Fragment" };

type IElementData_TopHeaderContainer_Fragment = {
  __typename?: "TopHeaderContainer";
  _type: "TopHeaderContainer";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IElementData_TopHeaderContainer_Fragment" };

type IElementData_VideoElement_Fragment = {
  __typename?: "VideoElement";
  _type: "VideoElement";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IElementData_VideoElement_Fragment" };

type IElementData_WebFooterConfigrationBlock_Fragment = {
  __typename?: "WebFooterConfigrationBlock";
  _type: "WebFooterConfigrationBlock";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IElementData_WebFooterConfigrationBlock_Fragment" };

type IElementData_WebHeaderConfigrationBlock_Fragment = {
  __typename?: "WebHeaderConfigrationBlock";
  _type: "WebHeaderConfigrationBlock";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IElementData_WebHeaderConfigrationBlock_Fragment" };

type IElementData__Component_Fragment = {
  __typename?: "_Component";
  _type: "_Component";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IElementData__Component_Fragment" };

type IElementData__Section_Fragment = {
  __typename?: "_Section";
  _type: "_Section";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IElementData__Section_Fragment" };

type IElementData_test_Fragment = {
  __typename?: "test";
  _type: "test";
  _metadata?:
    | ({ __typename?: "ContentMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ContentMetadata_Fragment: IContentInfo_ContentMetadata_Fragment;
        };
      })
    | ({ __typename?: "InstanceMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_InstanceMetadata_Fragment: IContentInfo_InstanceMetadata_Fragment;
        };
      })
    | ({ __typename?: "ItemMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_ItemMetadata_Fragment: IContentInfo_ItemMetadata_Fragment;
        };
      })
    | ({ __typename?: "MediaMetadata" } & {
        " $fragmentRefs"?: {
          IContentInfo_MediaMetadata_Fragment: IContentInfo_MediaMetadata_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "IElementData_test_Fragment" };

export type IElementDataFragment =
  | IElementData_BannerItemElement_Fragment
  | IElementData_BlankSection_Fragment
  | IElementData_ButtonElement_Fragment
  | IElementData_CTAElement_Fragment
  | IElementData_Company_Fragment
  | IElementData_ContainerElement_Fragment
  | IElementData_ContentTextElement_Fragment
  | IElementData_Dictionary_Fragment
  | IElementData_DictionaryItem_Fragment
  | IElementData_ExpandableText_Fragment
  | IElementData_FAQsSection_Fragment
  | IElementData_HeadingElement_Fragment
  | IElementData_ImageBackground_Fragment
  | IElementData_ImageItemElement_Fragment
  | IElementData_ImageTextItemElement_Fragment
  | IElementData_MegaMenuGroupBlock_Fragment
  | IElementData_NavigationMenuBlock_Fragment
  | IElementData_OfficeLocation_Fragment
  | IElementData_PDPCarouselElement_Fragment
  | IElementData_PDPGalleryElement_Fragment
  | IElementData_PDPHeroElement_Fragment
  | IElementData_PDPSpecificationsElement_Fragment
  | IElementData_PageSeoSettings_Fragment
  | IElementData_ParagraphElement_Fragment
  | IElementData_ProductCardElement_Fragment
  | IElementData_ProductCardListElement_Fragment
  | IElementData_ProductCardListSection_Fragment
  | IElementData_ProductCarouselElement_Fragment
  | IElementData_ProductCarouselSection_Fragment
  | IElementData_ProductList_Fragment
  | IElementData_ProductVisibleElements_Fragment
  | IElementData_SocialMediaBlock_Fragment
  | IElementData_SocialMediaBlocks_Fragment
  | IElementData_TopHeaderContainer_Fragment
  | IElementData_VideoElement_Fragment
  | IElementData_WebFooterConfigrationBlock_Fragment
  | IElementData_WebHeaderConfigrationBlock_Fragment
  | IElementData__Component_Fragment
  | IElementData__Section_Fragment
  | IElementData_test_Fragment;

type ElementData_BannerItemElement_Fragment = ({
  __typename?: "BannerItemElement";
} & {
  " $fragmentRefs"?: {
    IElementData_BannerItemElement_Fragment: IElementData_BannerItemElement_Fragment;
  };
}) & { " $fragmentName"?: "ElementData_BannerItemElement_Fragment" };

type ElementData_BlankSection_Fragment = ({ __typename?: "BlankSection" } & {
  " $fragmentRefs"?: {
    IElementData_BlankSection_Fragment: IElementData_BlankSection_Fragment;
  };
}) & { " $fragmentName"?: "ElementData_BlankSection_Fragment" };

type ElementData_ButtonElement_Fragment = ({ __typename?: "ButtonElement" } & {
  " $fragmentRefs"?: {
    IElementData_ButtonElement_Fragment: IElementData_ButtonElement_Fragment;
  };
}) & { " $fragmentName"?: "ElementData_ButtonElement_Fragment" };

type ElementData_CTAElement_Fragment = ({ __typename?: "CTAElement" } & {
  " $fragmentRefs"?: {
    IElementData_CTAElement_Fragment: IElementData_CTAElement_Fragment;
  };
}) & { " $fragmentName"?: "ElementData_CTAElement_Fragment" };

type ElementData_Company_Fragment = ({ __typename?: "Company" } & {
  " $fragmentRefs"?: {
    IElementData_Company_Fragment: IElementData_Company_Fragment;
  };
}) & { " $fragmentName"?: "ElementData_Company_Fragment" };

type ElementData_ContainerElement_Fragment = ({
  __typename?: "ContainerElement";
} & {
  " $fragmentRefs"?: {
    IElementData_ContainerElement_Fragment: IElementData_ContainerElement_Fragment;
  };
}) & { " $fragmentName"?: "ElementData_ContainerElement_Fragment" };

type ElementData_ContentTextElement_Fragment = ({
  __typename?: "ContentTextElement";
} & {
  " $fragmentRefs"?: {
    IElementData_ContentTextElement_Fragment: IElementData_ContentTextElement_Fragment;
  };
}) & { " $fragmentName"?: "ElementData_ContentTextElement_Fragment" };

type ElementData_Dictionary_Fragment = ({ __typename?: "Dictionary" } & {
  " $fragmentRefs"?: {
    IElementData_Dictionary_Fragment: IElementData_Dictionary_Fragment;
  };
}) & { " $fragmentName"?: "ElementData_Dictionary_Fragment" };

type ElementData_DictionaryItem_Fragment = ({
  __typename?: "DictionaryItem";
} & {
  " $fragmentRefs"?: {
    IElementData_DictionaryItem_Fragment: IElementData_DictionaryItem_Fragment;
  };
}) & { " $fragmentName"?: "ElementData_DictionaryItem_Fragment" };

type ElementData_ExpandableText_Fragment = ({
  __typename?: "ExpandableText";
} & {
  " $fragmentRefs"?: {
    IElementData_ExpandableText_Fragment: IElementData_ExpandableText_Fragment;
  };
}) & { " $fragmentName"?: "ElementData_ExpandableText_Fragment" };

type ElementData_FAQsSection_Fragment = ({ __typename?: "FAQsSection" } & {
  " $fragmentRefs"?: {
    IElementData_FAQsSection_Fragment: IElementData_FAQsSection_Fragment;
  };
}) & { " $fragmentName"?: "ElementData_FAQsSection_Fragment" };

type ElementData_HeadingElement_Fragment = ({
  __typename?: "HeadingElement";
} & {
  " $fragmentRefs"?: {
    IElementData_HeadingElement_Fragment: IElementData_HeadingElement_Fragment;
  };
}) & { " $fragmentName"?: "ElementData_HeadingElement_Fragment" };

type ElementData_ImageBackground_Fragment = ({
  __typename?: "ImageBackground";
} & {
  " $fragmentRefs"?: {
    IElementData_ImageBackground_Fragment: IElementData_ImageBackground_Fragment;
  };
}) & { " $fragmentName"?: "ElementData_ImageBackground_Fragment" };

type ElementData_ImageItemElement_Fragment = ({
  __typename?: "ImageItemElement";
} & {
  " $fragmentRefs"?: {
    IElementData_ImageItemElement_Fragment: IElementData_ImageItemElement_Fragment;
  };
}) & { " $fragmentName"?: "ElementData_ImageItemElement_Fragment" };

type ElementData_ImageTextItemElement_Fragment = ({
  __typename?: "ImageTextItemElement";
} & {
  " $fragmentRefs"?: {
    IElementData_ImageTextItemElement_Fragment: IElementData_ImageTextItemElement_Fragment;
  };
}) & { " $fragmentName"?: "ElementData_ImageTextItemElement_Fragment" };

type ElementData_MegaMenuGroupBlock_Fragment = ({
  __typename?: "MegaMenuGroupBlock";
} & {
  " $fragmentRefs"?: {
    IElementData_MegaMenuGroupBlock_Fragment: IElementData_MegaMenuGroupBlock_Fragment;
  };
}) & { " $fragmentName"?: "ElementData_MegaMenuGroupBlock_Fragment" };

type ElementData_NavigationMenuBlock_Fragment = ({
  __typename?: "NavigationMenuBlock";
} & {
  " $fragmentRefs"?: {
    IElementData_NavigationMenuBlock_Fragment: IElementData_NavigationMenuBlock_Fragment;
  };
}) & { " $fragmentName"?: "ElementData_NavigationMenuBlock_Fragment" };

type ElementData_OfficeLocation_Fragment = ({
  __typename?: "OfficeLocation";
} & {
  " $fragmentRefs"?: {
    IElementData_OfficeLocation_Fragment: IElementData_OfficeLocation_Fragment;
  };
}) & { " $fragmentName"?: "ElementData_OfficeLocation_Fragment" };

type ElementData_PDPCarouselElement_Fragment = ({
  __typename?: "PDPCarouselElement";
} & {
  " $fragmentRefs"?: {
    IElementData_PDPCarouselElement_Fragment: IElementData_PDPCarouselElement_Fragment;
  };
}) & { " $fragmentName"?: "ElementData_PDPCarouselElement_Fragment" };

type ElementData_PDPGalleryElement_Fragment = ({
  __typename?: "PDPGalleryElement";
} & {
  " $fragmentRefs"?: {
    IElementData_PDPGalleryElement_Fragment: IElementData_PDPGalleryElement_Fragment;
  };
}) & { " $fragmentName"?: "ElementData_PDPGalleryElement_Fragment" };

type ElementData_PDPHeroElement_Fragment = ({
  __typename?: "PDPHeroElement";
} & {
  " $fragmentRefs"?: {
    IElementData_PDPHeroElement_Fragment: IElementData_PDPHeroElement_Fragment;
  };
}) & { " $fragmentName"?: "ElementData_PDPHeroElement_Fragment" };

type ElementData_PDPSpecificationsElement_Fragment = ({
  __typename?: "PDPSpecificationsElement";
} & {
  " $fragmentRefs"?: {
    IElementData_PDPSpecificationsElement_Fragment: IElementData_PDPSpecificationsElement_Fragment;
  };
}) & { " $fragmentName"?: "ElementData_PDPSpecificationsElement_Fragment" };

type ElementData_PageSeoSettings_Fragment = ({
  __typename?: "PageSeoSettings";
} & {
  " $fragmentRefs"?: {
    IElementData_PageSeoSettings_Fragment: IElementData_PageSeoSettings_Fragment;
  };
}) & { " $fragmentName"?: "ElementData_PageSeoSettings_Fragment" };

type ElementData_ParagraphElement_Fragment = ({
  __typename?: "ParagraphElement";
} & {
  " $fragmentRefs"?: {
    IElementData_ParagraphElement_Fragment: IElementData_ParagraphElement_Fragment;
  };
}) & { " $fragmentName"?: "ElementData_ParagraphElement_Fragment" };

type ElementData_ProductCardElement_Fragment = ({
  __typename?: "ProductCardElement";
} & {
  " $fragmentRefs"?: {
    IElementData_ProductCardElement_Fragment: IElementData_ProductCardElement_Fragment;
  };
}) & { " $fragmentName"?: "ElementData_ProductCardElement_Fragment" };

type ElementData_ProductCardListElement_Fragment = ({
  __typename?: "ProductCardListElement";
} & {
  " $fragmentRefs"?: {
    IElementData_ProductCardListElement_Fragment: IElementData_ProductCardListElement_Fragment;
  };
}) & { " $fragmentName"?: "ElementData_ProductCardListElement_Fragment" };

type ElementData_ProductCardListSection_Fragment = ({
  __typename?: "ProductCardListSection";
} & {
  " $fragmentRefs"?: {
    IElementData_ProductCardListSection_Fragment: IElementData_ProductCardListSection_Fragment;
  };
}) & { " $fragmentName"?: "ElementData_ProductCardListSection_Fragment" };

type ElementData_ProductCarouselElement_Fragment = ({
  __typename?: "ProductCarouselElement";
} & {
  " $fragmentRefs"?: {
    IElementData_ProductCarouselElement_Fragment: IElementData_ProductCarouselElement_Fragment;
  };
}) & { " $fragmentName"?: "ElementData_ProductCarouselElement_Fragment" };

type ElementData_ProductCarouselSection_Fragment = ({
  __typename?: "ProductCarouselSection";
} & {
  " $fragmentRefs"?: {
    IElementData_ProductCarouselSection_Fragment: IElementData_ProductCarouselSection_Fragment;
  };
}) & { " $fragmentName"?: "ElementData_ProductCarouselSection_Fragment" };

type ElementData_ProductList_Fragment = ({ __typename?: "ProductList" } & {
  " $fragmentRefs"?: {
    IElementData_ProductList_Fragment: IElementData_ProductList_Fragment;
  };
}) & { " $fragmentName"?: "ElementData_ProductList_Fragment" };

type ElementData_ProductVisibleElements_Fragment = ({
  __typename?: "ProductVisibleElements";
} & {
  " $fragmentRefs"?: {
    IElementData_ProductVisibleElements_Fragment: IElementData_ProductVisibleElements_Fragment;
  };
}) & { " $fragmentName"?: "ElementData_ProductVisibleElements_Fragment" };

type ElementData_SocialMediaBlock_Fragment = ({
  __typename?: "SocialMediaBlock";
} & {
  " $fragmentRefs"?: {
    IElementData_SocialMediaBlock_Fragment: IElementData_SocialMediaBlock_Fragment;
  };
}) & { " $fragmentName"?: "ElementData_SocialMediaBlock_Fragment" };

type ElementData_SocialMediaBlocks_Fragment = ({
  __typename?: "SocialMediaBlocks";
} & {
  " $fragmentRefs"?: {
    IElementData_SocialMediaBlocks_Fragment: IElementData_SocialMediaBlocks_Fragment;
  };
}) & { " $fragmentName"?: "ElementData_SocialMediaBlocks_Fragment" };

type ElementData_TopHeaderContainer_Fragment = ({
  __typename?: "TopHeaderContainer";
} & {
  " $fragmentRefs"?: {
    IElementData_TopHeaderContainer_Fragment: IElementData_TopHeaderContainer_Fragment;
  };
}) & { " $fragmentName"?: "ElementData_TopHeaderContainer_Fragment" };

type ElementData_VideoElement_Fragment = ({ __typename?: "VideoElement" } & {
  " $fragmentRefs"?: {
    IElementData_VideoElement_Fragment: IElementData_VideoElement_Fragment;
  };
}) & { " $fragmentName"?: "ElementData_VideoElement_Fragment" };

type ElementData_WebFooterConfigrationBlock_Fragment = ({
  __typename?: "WebFooterConfigrationBlock";
} & {
  " $fragmentRefs"?: {
    IElementData_WebFooterConfigrationBlock_Fragment: IElementData_WebFooterConfigrationBlock_Fragment;
  };
}) & { " $fragmentName"?: "ElementData_WebFooterConfigrationBlock_Fragment" };

type ElementData_WebHeaderConfigrationBlock_Fragment = ({
  __typename?: "WebHeaderConfigrationBlock";
} & {
  " $fragmentRefs"?: {
    IElementData_WebHeaderConfigrationBlock_Fragment: IElementData_WebHeaderConfigrationBlock_Fragment;
  };
}) & { " $fragmentName"?: "ElementData_WebHeaderConfigrationBlock_Fragment" };

type ElementData__Component_Fragment = ({ __typename?: "_Component" } & {
  " $fragmentRefs"?: {
    IElementData__Component_Fragment: IElementData__Component_Fragment;
  };
}) & { " $fragmentName"?: "ElementData__Component_Fragment" };

type ElementData__Section_Fragment = ({ __typename?: "_Section" } & {
  " $fragmentRefs"?: {
    IElementData__Section_Fragment: IElementData__Section_Fragment;
  };
}) & { " $fragmentName"?: "ElementData__Section_Fragment" };

type ElementData_test_Fragment = ({ __typename?: "test" } & {
  " $fragmentRefs"?: { IElementData_test_Fragment: IElementData_test_Fragment };
}) & { " $fragmentName"?: "ElementData_test_Fragment" };

export type ElementDataFragment =
  | ElementData_BannerItemElement_Fragment
  | ElementData_BlankSection_Fragment
  | ElementData_ButtonElement_Fragment
  | ElementData_CTAElement_Fragment
  | ElementData_Company_Fragment
  | ElementData_ContainerElement_Fragment
  | ElementData_ContentTextElement_Fragment
  | ElementData_Dictionary_Fragment
  | ElementData_DictionaryItem_Fragment
  | ElementData_ExpandableText_Fragment
  | ElementData_FAQsSection_Fragment
  | ElementData_HeadingElement_Fragment
  | ElementData_ImageBackground_Fragment
  | ElementData_ImageItemElement_Fragment
  | ElementData_ImageTextItemElement_Fragment
  | ElementData_MegaMenuGroupBlock_Fragment
  | ElementData_NavigationMenuBlock_Fragment
  | ElementData_OfficeLocation_Fragment
  | ElementData_PDPCarouselElement_Fragment
  | ElementData_PDPGalleryElement_Fragment
  | ElementData_PDPHeroElement_Fragment
  | ElementData_PDPSpecificationsElement_Fragment
  | ElementData_PageSeoSettings_Fragment
  | ElementData_ParagraphElement_Fragment
  | ElementData_ProductCardElement_Fragment
  | ElementData_ProductCardListElement_Fragment
  | ElementData_ProductCardListSection_Fragment
  | ElementData_ProductCarouselElement_Fragment
  | ElementData_ProductCarouselSection_Fragment
  | ElementData_ProductList_Fragment
  | ElementData_ProductVisibleElements_Fragment
  | ElementData_SocialMediaBlock_Fragment
  | ElementData_SocialMediaBlocks_Fragment
  | ElementData_TopHeaderContainer_Fragment
  | ElementData_VideoElement_Fragment
  | ElementData_WebFooterConfigrationBlock_Fragment
  | ElementData_WebHeaderConfigrationBlock_Fragment
  | ElementData__Component_Fragment
  | ElementData__Section_Fragment
  | ElementData_test_Fragment;

type BlockData_BannerItemElement_Fragment = ({
  __typename?: "BannerItemElement";
} & {
  " $fragmentRefs"?: {
    IContentData_BannerItemElement_Fragment: IContentData_BannerItemElement_Fragment;
  };
}) & { " $fragmentName"?: "BlockData_BannerItemElement_Fragment" };

type BlockData_BlankSection_Fragment = ({ __typename?: "BlankSection" } & {
  " $fragmentRefs"?: {
    IContentData_BlankSection_Fragment: IContentData_BlankSection_Fragment;
  };
}) & { " $fragmentName"?: "BlockData_BlankSection_Fragment" };

type BlockData_ButtonElement_Fragment = ({ __typename?: "ButtonElement" } & {
  " $fragmentRefs"?: {
    IContentData_ButtonElement_Fragment: IContentData_ButtonElement_Fragment;
  };
}) & { " $fragmentName"?: "BlockData_ButtonElement_Fragment" };

type BlockData_CTAElement_Fragment = ({ __typename?: "CTAElement" } & {
  " $fragmentRefs"?: {
    IContentData_CTAElement_Fragment: IContentData_CTAElement_Fragment;
  };
}) & { " $fragmentName"?: "BlockData_CTAElement_Fragment" };

type BlockData_Company_Fragment = ({ __typename?: "Company" } & {
  " $fragmentRefs"?: {
    IContentData_Company_Fragment: IContentData_Company_Fragment;
  };
}) & { " $fragmentName"?: "BlockData_Company_Fragment" };

type BlockData_ContainerElement_Fragment = ({
  __typename?: "ContainerElement";
} & {
  " $fragmentRefs"?: {
    IContentData_ContainerElement_Fragment: IContentData_ContainerElement_Fragment;
  };
}) & { " $fragmentName"?: "BlockData_ContainerElement_Fragment" };

type BlockData_ContentTextElement_Fragment = ({
  __typename?: "ContentTextElement";
} & {
  " $fragmentRefs"?: {
    IContentData_ContentTextElement_Fragment: IContentData_ContentTextElement_Fragment;
  };
}) & { " $fragmentName"?: "BlockData_ContentTextElement_Fragment" };

type BlockData_Dictionary_Fragment = ({ __typename?: "Dictionary" } & {
  " $fragmentRefs"?: {
    IContentData_Dictionary_Fragment: IContentData_Dictionary_Fragment;
  };
}) & { " $fragmentName"?: "BlockData_Dictionary_Fragment" };

type BlockData_DictionaryItem_Fragment = ({ __typename?: "DictionaryItem" } & {
  " $fragmentRefs"?: {
    IContentData_DictionaryItem_Fragment: IContentData_DictionaryItem_Fragment;
  };
}) & { " $fragmentName"?: "BlockData_DictionaryItem_Fragment" };

type BlockData_ExpandableText_Fragment = ({ __typename?: "ExpandableText" } & {
  " $fragmentRefs"?: {
    IContentData_ExpandableText_Fragment: IContentData_ExpandableText_Fragment;
  };
}) & { " $fragmentName"?: "BlockData_ExpandableText_Fragment" };

type BlockData_FAQsSection_Fragment = ({ __typename?: "FAQsSection" } & {
  " $fragmentRefs"?: {
    IContentData_FAQsSection_Fragment: IContentData_FAQsSection_Fragment;
  };
}) & { " $fragmentName"?: "BlockData_FAQsSection_Fragment" };

type BlockData_HeadingElement_Fragment = ({ __typename?: "HeadingElement" } & {
  " $fragmentRefs"?: {
    IContentData_HeadingElement_Fragment: IContentData_HeadingElement_Fragment;
  };
}) & { " $fragmentName"?: "BlockData_HeadingElement_Fragment" };

type BlockData_ImageBackground_Fragment = ({
  __typename?: "ImageBackground";
} & {
  " $fragmentRefs"?: {
    IContentData_ImageBackground_Fragment: IContentData_ImageBackground_Fragment;
  };
}) & { " $fragmentName"?: "BlockData_ImageBackground_Fragment" };

type BlockData_ImageItemElement_Fragment = ({
  __typename?: "ImageItemElement";
} & {
  " $fragmentRefs"?: {
    IContentData_ImageItemElement_Fragment: IContentData_ImageItemElement_Fragment;
  };
}) & { " $fragmentName"?: "BlockData_ImageItemElement_Fragment" };

type BlockData_ImageTextItemElement_Fragment = ({
  __typename?: "ImageTextItemElement";
} & {
  " $fragmentRefs"?: {
    IContentData_ImageTextItemElement_Fragment: IContentData_ImageTextItemElement_Fragment;
  };
}) & { " $fragmentName"?: "BlockData_ImageTextItemElement_Fragment" };

type BlockData_MegaMenuGroupBlock_Fragment = ({
  __typename?: "MegaMenuGroupBlock";
} & {
  " $fragmentRefs"?: {
    IContentData_MegaMenuGroupBlock_Fragment: IContentData_MegaMenuGroupBlock_Fragment;
  };
}) & { " $fragmentName"?: "BlockData_MegaMenuGroupBlock_Fragment" };

type BlockData_NavigationMenuBlock_Fragment = ({
  __typename?: "NavigationMenuBlock";
} & {
  " $fragmentRefs"?: {
    IContentData_NavigationMenuBlock_Fragment: IContentData_NavigationMenuBlock_Fragment;
  };
}) & { " $fragmentName"?: "BlockData_NavigationMenuBlock_Fragment" };

type BlockData_OfficeLocation_Fragment = ({ __typename?: "OfficeLocation" } & {
  " $fragmentRefs"?: {
    IContentData_OfficeLocation_Fragment: IContentData_OfficeLocation_Fragment;
  };
}) & { " $fragmentName"?: "BlockData_OfficeLocation_Fragment" };

type BlockData_PDPCarouselElement_Fragment = ({
  __typename?: "PDPCarouselElement";
} & {
  " $fragmentRefs"?: {
    IContentData_PDPCarouselElement_Fragment: IContentData_PDPCarouselElement_Fragment;
  };
}) & { " $fragmentName"?: "BlockData_PDPCarouselElement_Fragment" };

type BlockData_PDPGalleryElement_Fragment = ({
  __typename?: "PDPGalleryElement";
} & {
  " $fragmentRefs"?: {
    IContentData_PDPGalleryElement_Fragment: IContentData_PDPGalleryElement_Fragment;
  };
}) & { " $fragmentName"?: "BlockData_PDPGalleryElement_Fragment" };

type BlockData_PDPHeroElement_Fragment = ({ __typename?: "PDPHeroElement" } & {
  " $fragmentRefs"?: {
    IContentData_PDPHeroElement_Fragment: IContentData_PDPHeroElement_Fragment;
  };
}) & { " $fragmentName"?: "BlockData_PDPHeroElement_Fragment" };

type BlockData_PDPSpecificationsElement_Fragment = ({
  __typename?: "PDPSpecificationsElement";
} & {
  " $fragmentRefs"?: {
    IContentData_PDPSpecificationsElement_Fragment: IContentData_PDPSpecificationsElement_Fragment;
  };
}) & { " $fragmentName"?: "BlockData_PDPSpecificationsElement_Fragment" };

type BlockData_PageSeoSettings_Fragment = ({
  __typename?: "PageSeoSettings";
} & {
  " $fragmentRefs"?: {
    IContentData_PageSeoSettings_Fragment: IContentData_PageSeoSettings_Fragment;
  };
}) & { " $fragmentName"?: "BlockData_PageSeoSettings_Fragment" };

type BlockData_ParagraphElement_Fragment = ({
  __typename?: "ParagraphElement";
} & {
  " $fragmentRefs"?: {
    IContentData_ParagraphElement_Fragment: IContentData_ParagraphElement_Fragment;
  };
}) & { " $fragmentName"?: "BlockData_ParagraphElement_Fragment" };

type BlockData_ProductCardElement_Fragment = ({
  __typename?: "ProductCardElement";
} & {
  " $fragmentRefs"?: {
    IContentData_ProductCardElement_Fragment: IContentData_ProductCardElement_Fragment;
  };
}) & { " $fragmentName"?: "BlockData_ProductCardElement_Fragment" };

type BlockData_ProductCardListElement_Fragment = ({
  __typename?: "ProductCardListElement";
} & {
  " $fragmentRefs"?: {
    IContentData_ProductCardListElement_Fragment: IContentData_ProductCardListElement_Fragment;
  };
}) & { " $fragmentName"?: "BlockData_ProductCardListElement_Fragment" };

type BlockData_ProductCardListSection_Fragment = ({
  __typename?: "ProductCardListSection";
} & {
  " $fragmentRefs"?: {
    IContentData_ProductCardListSection_Fragment: IContentData_ProductCardListSection_Fragment;
  };
}) & { " $fragmentName"?: "BlockData_ProductCardListSection_Fragment" };

type BlockData_ProductCarouselElement_Fragment = ({
  __typename?: "ProductCarouselElement";
} & {
  " $fragmentRefs"?: {
    IContentData_ProductCarouselElement_Fragment: IContentData_ProductCarouselElement_Fragment;
  };
}) & { " $fragmentName"?: "BlockData_ProductCarouselElement_Fragment" };

type BlockData_ProductCarouselSection_Fragment = ({
  __typename?: "ProductCarouselSection";
} & {
  " $fragmentRefs"?: {
    IContentData_ProductCarouselSection_Fragment: IContentData_ProductCarouselSection_Fragment;
  };
}) & { " $fragmentName"?: "BlockData_ProductCarouselSection_Fragment" };

type BlockData_ProductList_Fragment = ({ __typename?: "ProductList" } & {
  " $fragmentRefs"?: {
    IContentData_ProductList_Fragment: IContentData_ProductList_Fragment;
  };
}) & { " $fragmentName"?: "BlockData_ProductList_Fragment" };

type BlockData_ProductVisibleElements_Fragment = ({
  __typename?: "ProductVisibleElements";
} & {
  " $fragmentRefs"?: {
    IContentData_ProductVisibleElements_Fragment: IContentData_ProductVisibleElements_Fragment;
  };
}) & { " $fragmentName"?: "BlockData_ProductVisibleElements_Fragment" };

type BlockData_SocialMediaBlock_Fragment = ({
  __typename?: "SocialMediaBlock";
} & {
  " $fragmentRefs"?: {
    IContentData_SocialMediaBlock_Fragment: IContentData_SocialMediaBlock_Fragment;
  };
}) & { " $fragmentName"?: "BlockData_SocialMediaBlock_Fragment" };

type BlockData_SocialMediaBlocks_Fragment = ({
  __typename?: "SocialMediaBlocks";
} & {
  " $fragmentRefs"?: {
    IContentData_SocialMediaBlocks_Fragment: IContentData_SocialMediaBlocks_Fragment;
  };
}) & { " $fragmentName"?: "BlockData_SocialMediaBlocks_Fragment" };

type BlockData_TopHeaderContainer_Fragment = ({
  __typename?: "TopHeaderContainer";
} & {
  " $fragmentRefs"?: {
    IContentData_TopHeaderContainer_Fragment: IContentData_TopHeaderContainer_Fragment;
  };
}) & { " $fragmentName"?: "BlockData_TopHeaderContainer_Fragment" };

type BlockData_VideoElement_Fragment = ({ __typename?: "VideoElement" } & {
  " $fragmentRefs"?: {
    IContentData_VideoElement_Fragment: IContentData_VideoElement_Fragment;
  };
}) & { " $fragmentName"?: "BlockData_VideoElement_Fragment" };

type BlockData_WebFooterConfigrationBlock_Fragment = ({
  __typename?: "WebFooterConfigrationBlock";
} & {
  " $fragmentRefs"?: {
    IContentData_WebFooterConfigrationBlock_Fragment: IContentData_WebFooterConfigrationBlock_Fragment;
  };
}) & { " $fragmentName"?: "BlockData_WebFooterConfigrationBlock_Fragment" };

type BlockData_WebHeaderConfigrationBlock_Fragment = ({
  __typename?: "WebHeaderConfigrationBlock";
} & {
  " $fragmentRefs"?: {
    IContentData_WebHeaderConfigrationBlock_Fragment: IContentData_WebHeaderConfigrationBlock_Fragment;
  };
}) & { " $fragmentName"?: "BlockData_WebHeaderConfigrationBlock_Fragment" };

type BlockData__Component_Fragment = ({ __typename?: "_Component" } & {
  " $fragmentRefs"?: {
    IContentData__Component_Fragment: IContentData__Component_Fragment;
  };
}) & { " $fragmentName"?: "BlockData__Component_Fragment" };

type BlockData__Section_Fragment = ({ __typename?: "_Section" } & {
  " $fragmentRefs"?: {
    IContentData__Section_Fragment: IContentData__Section_Fragment;
  };
}) & { " $fragmentName"?: "BlockData__Section_Fragment" };

type BlockData_test_Fragment = ({ __typename?: "test" } & {
  " $fragmentRefs"?: { IContentData_test_Fragment: IContentData_test_Fragment };
}) & { " $fragmentName"?: "BlockData_test_Fragment" };

export type BlockDataFragment =
  | BlockData_BannerItemElement_Fragment
  | BlockData_BlankSection_Fragment
  | BlockData_ButtonElement_Fragment
  | BlockData_CTAElement_Fragment
  | BlockData_Company_Fragment
  | BlockData_ContainerElement_Fragment
  | BlockData_ContentTextElement_Fragment
  | BlockData_Dictionary_Fragment
  | BlockData_DictionaryItem_Fragment
  | BlockData_ExpandableText_Fragment
  | BlockData_FAQsSection_Fragment
  | BlockData_HeadingElement_Fragment
  | BlockData_ImageBackground_Fragment
  | BlockData_ImageItemElement_Fragment
  | BlockData_ImageTextItemElement_Fragment
  | BlockData_MegaMenuGroupBlock_Fragment
  | BlockData_NavigationMenuBlock_Fragment
  | BlockData_OfficeLocation_Fragment
  | BlockData_PDPCarouselElement_Fragment
  | BlockData_PDPGalleryElement_Fragment
  | BlockData_PDPHeroElement_Fragment
  | BlockData_PDPSpecificationsElement_Fragment
  | BlockData_PageSeoSettings_Fragment
  | BlockData_ParagraphElement_Fragment
  | BlockData_ProductCardElement_Fragment
  | BlockData_ProductCardListElement_Fragment
  | BlockData_ProductCardListSection_Fragment
  | BlockData_ProductCarouselElement_Fragment
  | BlockData_ProductCarouselSection_Fragment
  | BlockData_ProductList_Fragment
  | BlockData_ProductVisibleElements_Fragment
  | BlockData_SocialMediaBlock_Fragment
  | BlockData_SocialMediaBlocks_Fragment
  | BlockData_TopHeaderContainer_Fragment
  | BlockData_VideoElement_Fragment
  | BlockData_WebFooterConfigrationBlock_Fragment
  | BlockData_WebHeaderConfigrationBlock_Fragment
  | BlockData__Component_Fragment
  | BlockData__Section_Fragment
  | BlockData_test_Fragment;

type PageData_BannerItemElement_Fragment = ({
  __typename?: "BannerItemElement";
} & {
  " $fragmentRefs"?: {
    IContentData_BannerItemElement_Fragment: IContentData_BannerItemElement_Fragment;
  };
}) & { " $fragmentName"?: "PageData_BannerItemElement_Fragment" };

type PageData_BlankExperience_Fragment = ({ __typename?: "BlankExperience" } & {
  " $fragmentRefs"?: {
    IContentData_BlankExperience_Fragment: IContentData_BlankExperience_Fragment;
  };
}) & { " $fragmentName"?: "PageData_BlankExperience_Fragment" };

type PageData_BlankSection_Fragment = ({ __typename?: "BlankSection" } & {
  " $fragmentRefs"?: {
    IContentData_BlankSection_Fragment: IContentData_BlankSection_Fragment;
  };
}) & { " $fragmentName"?: "PageData_BlankSection_Fragment" };

type PageData_ButtonElement_Fragment = ({ __typename?: "ButtonElement" } & {
  " $fragmentRefs"?: {
    IContentData_ButtonElement_Fragment: IContentData_ButtonElement_Fragment;
  };
}) & { " $fragmentName"?: "PageData_ButtonElement_Fragment" };

type PageData_CTAElement_Fragment = ({ __typename?: "CTAElement" } & {
  " $fragmentRefs"?: {
    IContentData_CTAElement_Fragment: IContentData_CTAElement_Fragment;
  };
}) & { " $fragmentName"?: "PageData_CTAElement_Fragment" };

type PageData_Company_Fragment = ({ __typename?: "Company" } & {
  " $fragmentRefs"?: {
    IContentData_Company_Fragment: IContentData_Company_Fragment;
  };
}) & { " $fragmentName"?: "PageData_Company_Fragment" };

type PageData_ContainerElement_Fragment = ({
  __typename?: "ContainerElement";
} & {
  " $fragmentRefs"?: {
    IContentData_ContainerElement_Fragment: IContentData_ContainerElement_Fragment;
  };
}) & { " $fragmentName"?: "PageData_ContainerElement_Fragment" };

type PageData_ContentTextElement_Fragment = ({
  __typename?: "ContentTextElement";
} & {
  " $fragmentRefs"?: {
    IContentData_ContentTextElement_Fragment: IContentData_ContentTextElement_Fragment;
  };
}) & { " $fragmentName"?: "PageData_ContentTextElement_Fragment" };

type PageData_DefaultVideo_Fragment = ({ __typename?: "DefaultVideo" } & {
  " $fragmentRefs"?: {
    IContentData_DefaultVideo_Fragment: IContentData_DefaultVideo_Fragment;
  };
}) & { " $fragmentName"?: "PageData_DefaultVideo_Fragment" };

type PageData_Dictionary_Fragment = ({ __typename?: "Dictionary" } & {
  " $fragmentRefs"?: {
    IContentData_Dictionary_Fragment: IContentData_Dictionary_Fragment;
  };
}) & { " $fragmentName"?: "PageData_Dictionary_Fragment" };

type PageData_DictionaryItem_Fragment = ({ __typename?: "DictionaryItem" } & {
  " $fragmentRefs"?: {
    IContentData_DictionaryItem_Fragment: IContentData_DictionaryItem_Fragment;
  };
}) & { " $fragmentName"?: "PageData_DictionaryItem_Fragment" };

type PageData_ExpandableText_Fragment = ({ __typename?: "ExpandableText" } & {
  " $fragmentRefs"?: {
    IContentData_ExpandableText_Fragment: IContentData_ExpandableText_Fragment;
  };
}) & { " $fragmentName"?: "PageData_ExpandableText_Fragment" };

type PageData_FAQsSection_Fragment = ({ __typename?: "FAQsSection" } & {
  " $fragmentRefs"?: {
    IContentData_FAQsSection_Fragment: IContentData_FAQsSection_Fragment;
  };
}) & { " $fragmentName"?: "PageData_FAQsSection_Fragment" };

type PageData_GenericMedia_Fragment = ({ __typename?: "GenericMedia" } & {
  " $fragmentRefs"?: {
    IContentData_GenericMedia_Fragment: IContentData_GenericMedia_Fragment;
  };
}) & { " $fragmentName"?: "PageData_GenericMedia_Fragment" };

type PageData_HeadingElement_Fragment = ({ __typename?: "HeadingElement" } & {
  " $fragmentRefs"?: {
    IContentData_HeadingElement_Fragment: IContentData_HeadingElement_Fragment;
  };
}) & { " $fragmentName"?: "PageData_HeadingElement_Fragment" };

type PageData_Image_Fragment = ({ __typename?: "Image" } & {
  " $fragmentRefs"?: {
    IContentData_Image_Fragment: IContentData_Image_Fragment;
  };
}) & { " $fragmentName"?: "PageData_Image_Fragment" };

type PageData_ImageBackground_Fragment = ({ __typename?: "ImageBackground" } & {
  " $fragmentRefs"?: {
    IContentData_ImageBackground_Fragment: IContentData_ImageBackground_Fragment;
  };
}) & { " $fragmentName"?: "PageData_ImageBackground_Fragment" };

type PageData_ImageItemElement_Fragment = ({
  __typename?: "ImageItemElement";
} & {
  " $fragmentRefs"?: {
    IContentData_ImageItemElement_Fragment: IContentData_ImageItemElement_Fragment;
  };
}) & { " $fragmentName"?: "PageData_ImageItemElement_Fragment" };

type PageData_ImageMedia_Fragment = ({ __typename?: "ImageMedia" } & {
  " $fragmentRefs"?: {
    IContentData_ImageMedia_Fragment: IContentData_ImageMedia_Fragment;
  };
}) & { " $fragmentName"?: "PageData_ImageMedia_Fragment" };

type PageData_ImageTextItemElement_Fragment = ({
  __typename?: "ImageTextItemElement";
} & {
  " $fragmentRefs"?: {
    IContentData_ImageTextItemElement_Fragment: IContentData_ImageTextItemElement_Fragment;
  };
}) & { " $fragmentName"?: "PageData_ImageTextItemElement_Fragment" };

type PageData_LandingPage_Fragment = ({ __typename?: "LandingPage" } & {
  " $fragmentRefs"?: {
    IContentData_LandingPage_Fragment: IContentData_LandingPage_Fragment;
  };
}) & { " $fragmentName"?: "PageData_LandingPage_Fragment" };

type PageData_MegaMenuGroupBlock_Fragment = ({
  __typename?: "MegaMenuGroupBlock";
} & {
  " $fragmentRefs"?: {
    IContentData_MegaMenuGroupBlock_Fragment: IContentData_MegaMenuGroupBlock_Fragment;
  };
}) & { " $fragmentName"?: "PageData_MegaMenuGroupBlock_Fragment" };

type PageData_NavigationMenuBlock_Fragment = ({
  __typename?: "NavigationMenuBlock";
} & {
  " $fragmentRefs"?: {
    IContentData_NavigationMenuBlock_Fragment: IContentData_NavigationMenuBlock_Fragment;
  };
}) & { " $fragmentName"?: "PageData_NavigationMenuBlock_Fragment" };

type PageData_OfficeLocation_Fragment = ({ __typename?: "OfficeLocation" } & {
  " $fragmentRefs"?: {
    IContentData_OfficeLocation_Fragment: IContentData_OfficeLocation_Fragment;
  };
}) & { " $fragmentName"?: "PageData_OfficeLocation_Fragment" };

type PageData_PDPCarouselElement_Fragment = ({
  __typename?: "PDPCarouselElement";
} & {
  " $fragmentRefs"?: {
    IContentData_PDPCarouselElement_Fragment: IContentData_PDPCarouselElement_Fragment;
  };
}) & { " $fragmentName"?: "PageData_PDPCarouselElement_Fragment" };

type PageData_PDPGalleryElement_Fragment = ({
  __typename?: "PDPGalleryElement";
} & {
  " $fragmentRefs"?: {
    IContentData_PDPGalleryElement_Fragment: IContentData_PDPGalleryElement_Fragment;
  };
}) & { " $fragmentName"?: "PageData_PDPGalleryElement_Fragment" };

type PageData_PDPHeroElement_Fragment = ({ __typename?: "PDPHeroElement" } & {
  " $fragmentRefs"?: {
    IContentData_PDPHeroElement_Fragment: IContentData_PDPHeroElement_Fragment;
  };
}) & { " $fragmentName"?: "PageData_PDPHeroElement_Fragment" };

type PageData_PDPSpecificationsElement_Fragment = ({
  __typename?: "PDPSpecificationsElement";
} & {
  " $fragmentRefs"?: {
    IContentData_PDPSpecificationsElement_Fragment: IContentData_PDPSpecificationsElement_Fragment;
  };
}) & { " $fragmentName"?: "PageData_PDPSpecificationsElement_Fragment" };

type PageData_PageSeoSettings_Fragment = ({ __typename?: "PageSeoSettings" } & {
  " $fragmentRefs"?: {
    IContentData_PageSeoSettings_Fragment: IContentData_PageSeoSettings_Fragment;
  };
}) & { " $fragmentName"?: "PageData_PageSeoSettings_Fragment" };

type PageData_ParagraphElement_Fragment = ({
  __typename?: "ParagraphElement";
} & {
  " $fragmentRefs"?: {
    IContentData_ParagraphElement_Fragment: IContentData_ParagraphElement_Fragment;
  };
}) & { " $fragmentName"?: "PageData_ParagraphElement_Fragment" };

type PageData_ProductCardElement_Fragment = ({
  __typename?: "ProductCardElement";
} & {
  " $fragmentRefs"?: {
    IContentData_ProductCardElement_Fragment: IContentData_ProductCardElement_Fragment;
  };
}) & { " $fragmentName"?: "PageData_ProductCardElement_Fragment" };

type PageData_ProductCardListElement_Fragment = ({
  __typename?: "ProductCardListElement";
} & {
  " $fragmentRefs"?: {
    IContentData_ProductCardListElement_Fragment: IContentData_ProductCardListElement_Fragment;
  };
}) & { " $fragmentName"?: "PageData_ProductCardListElement_Fragment" };

type PageData_ProductCardListSection_Fragment = ({
  __typename?: "ProductCardListSection";
} & {
  " $fragmentRefs"?: {
    IContentData_ProductCardListSection_Fragment: IContentData_ProductCardListSection_Fragment;
  };
}) & { " $fragmentName"?: "PageData_ProductCardListSection_Fragment" };

type PageData_ProductCarouselElement_Fragment = ({
  __typename?: "ProductCarouselElement";
} & {
  " $fragmentRefs"?: {
    IContentData_ProductCarouselElement_Fragment: IContentData_ProductCarouselElement_Fragment;
  };
}) & { " $fragmentName"?: "PageData_ProductCarouselElement_Fragment" };

type PageData_ProductCarouselSection_Fragment = ({
  __typename?: "ProductCarouselSection";
} & {
  " $fragmentRefs"?: {
    IContentData_ProductCarouselSection_Fragment: IContentData_ProductCarouselSection_Fragment;
  };
}) & { " $fragmentName"?: "PageData_ProductCarouselSection_Fragment" };

type PageData_ProductDetail_Fragment = ({ __typename?: "ProductDetail" } & {
  " $fragmentRefs"?: {
    IContentData_ProductDetail_Fragment: IContentData_ProductDetail_Fragment;
  };
}) & { " $fragmentName"?: "PageData_ProductDetail_Fragment" };

type PageData_ProductDetailExperience_Fragment = ({
  __typename?: "ProductDetailExperience";
} & {
  " $fragmentRefs"?: {
    IContentData_ProductDetailExperience_Fragment: IContentData_ProductDetailExperience_Fragment;
  };
}) & { " $fragmentName"?: "PageData_ProductDetailExperience_Fragment" };

type PageData_ProductList_Fragment = ({ __typename?: "ProductList" } & {
  " $fragmentRefs"?: {
    IContentData_ProductList_Fragment: IContentData_ProductList_Fragment;
  };
}) & { " $fragmentName"?: "PageData_ProductList_Fragment" };

type PageData_ProductListingEPage_Fragment = ({
  __typename?: "ProductListingEPage";
} & {
  " $fragmentRefs"?: {
    IContentData_ProductListingEPage_Fragment: IContentData_ProductListingEPage_Fragment;
  };
}) & { " $fragmentName"?: "PageData_ProductListingEPage_Fragment" };

type PageData_ProductVisibleElements_Fragment = ({
  __typename?: "ProductVisibleElements";
} & {
  " $fragmentRefs"?: {
    IContentData_ProductVisibleElements_Fragment: IContentData_ProductVisibleElements_Fragment;
  };
}) & { " $fragmentName"?: "PageData_ProductVisibleElements_Fragment" };

type PageData_Section_Fragment = ({ __typename?: "Section" } & {
  " $fragmentRefs"?: {
    IContentData_Section_Fragment: IContentData_Section_Fragment;
  };
}) & { " $fragmentName"?: "PageData_Section_Fragment" };

type PageData_SocialMediaBlock_Fragment = ({
  __typename?: "SocialMediaBlock";
} & {
  " $fragmentRefs"?: {
    IContentData_SocialMediaBlock_Fragment: IContentData_SocialMediaBlock_Fragment;
  };
}) & { " $fragmentName"?: "PageData_SocialMediaBlock_Fragment" };

type PageData_SocialMediaBlocks_Fragment = ({
  __typename?: "SocialMediaBlocks";
} & {
  " $fragmentRefs"?: {
    IContentData_SocialMediaBlocks_Fragment: IContentData_SocialMediaBlocks_Fragment;
  };
}) & { " $fragmentName"?: "PageData_SocialMediaBlocks_Fragment" };

type PageData_SysContentFolder_Fragment = ({
  __typename?: "SysContentFolder";
} & {
  " $fragmentRefs"?: {
    IContentData_SysContentFolder_Fragment: IContentData_SysContentFolder_Fragment;
  };
}) & { " $fragmentName"?: "PageData_SysContentFolder_Fragment" };

type PageData_TopHeaderContainer_Fragment = ({
  __typename?: "TopHeaderContainer";
} & {
  " $fragmentRefs"?: {
    IContentData_TopHeaderContainer_Fragment: IContentData_TopHeaderContainer_Fragment;
  };
}) & { " $fragmentName"?: "PageData_TopHeaderContainer_Fragment" };

type PageData_VideoElement_Fragment = ({ __typename?: "VideoElement" } & {
  " $fragmentRefs"?: {
    IContentData_VideoElement_Fragment: IContentData_VideoElement_Fragment;
  };
}) & { " $fragmentName"?: "PageData_VideoElement_Fragment" };

type PageData_VideoMedia_Fragment = ({ __typename?: "VideoMedia" } & {
  " $fragmentRefs"?: {
    IContentData_VideoMedia_Fragment: IContentData_VideoMedia_Fragment;
  };
}) & { " $fragmentName"?: "PageData_VideoMedia_Fragment" };

type PageData_WebFooterConfigrationBlock_Fragment = ({
  __typename?: "WebFooterConfigrationBlock";
} & {
  " $fragmentRefs"?: {
    IContentData_WebFooterConfigrationBlock_Fragment: IContentData_WebFooterConfigrationBlock_Fragment;
  };
}) & { " $fragmentName"?: "PageData_WebFooterConfigrationBlock_Fragment" };

type PageData_WebHeaderConfigrationBlock_Fragment = ({
  __typename?: "WebHeaderConfigrationBlock";
} & {
  " $fragmentRefs"?: {
    IContentData_WebHeaderConfigrationBlock_Fragment: IContentData_WebHeaderConfigrationBlock_Fragment;
  };
}) & { " $fragmentName"?: "PageData_WebHeaderConfigrationBlock_Fragment" };

type PageData__Component_Fragment = ({ __typename?: "_Component" } & {
  " $fragmentRefs"?: {
    IContentData__Component_Fragment: IContentData__Component_Fragment;
  };
}) & { " $fragmentName"?: "PageData__Component_Fragment" };

type PageData__Content_Fragment = ({ __typename?: "_Content" } & {
  " $fragmentRefs"?: {
    IContentData__Content_Fragment: IContentData__Content_Fragment;
  };
}) & { " $fragmentName"?: "PageData__Content_Fragment" };

type PageData__Experience_Fragment = ({ __typename?: "_Experience" } & {
  " $fragmentRefs"?: {
    IContentData__Experience_Fragment: IContentData__Experience_Fragment;
  };
}) & { " $fragmentName"?: "PageData__Experience_Fragment" };

type PageData__Folder_Fragment = ({ __typename?: "_Folder" } & {
  " $fragmentRefs"?: {
    IContentData__Folder_Fragment: IContentData__Folder_Fragment;
  };
}) & { " $fragmentName"?: "PageData__Folder_Fragment" };

type PageData__Image_Fragment = ({ __typename?: "_Image" } & {
  " $fragmentRefs"?: {
    IContentData__Image_Fragment: IContentData__Image_Fragment;
  };
}) & { " $fragmentName"?: "PageData__Image_Fragment" };

type PageData__Media_Fragment = ({ __typename?: "_Media" } & {
  " $fragmentRefs"?: {
    IContentData__Media_Fragment: IContentData__Media_Fragment;
  };
}) & { " $fragmentName"?: "PageData__Media_Fragment" };

type PageData__Page_Fragment = ({ __typename?: "_Page" } & {
  " $fragmentRefs"?: {
    IContentData__Page_Fragment: IContentData__Page_Fragment;
  };
}) & { " $fragmentName"?: "PageData__Page_Fragment" };

type PageData__Section_Fragment = ({ __typename?: "_Section" } & {
  " $fragmentRefs"?: {
    IContentData__Section_Fragment: IContentData__Section_Fragment;
  };
}) & { " $fragmentName"?: "PageData__Section_Fragment" };

type PageData__Video_Fragment = ({ __typename?: "_Video" } & {
  " $fragmentRefs"?: {
    IContentData__Video_Fragment: IContentData__Video_Fragment;
  };
}) & { " $fragmentName"?: "PageData__Video_Fragment" };

type PageData_test_Fragment = ({ __typename?: "test" } & {
  " $fragmentRefs"?: { IContentData_test_Fragment: IContentData_test_Fragment };
}) & { " $fragmentName"?: "PageData_test_Fragment" };

export type PageDataFragment =
  | PageData_BannerItemElement_Fragment
  | PageData_BlankExperience_Fragment
  | PageData_BlankSection_Fragment
  | PageData_ButtonElement_Fragment
  | PageData_CTAElement_Fragment
  | PageData_Company_Fragment
  | PageData_ContainerElement_Fragment
  | PageData_ContentTextElement_Fragment
  | PageData_DefaultVideo_Fragment
  | PageData_Dictionary_Fragment
  | PageData_DictionaryItem_Fragment
  | PageData_ExpandableText_Fragment
  | PageData_FAQsSection_Fragment
  | PageData_GenericMedia_Fragment
  | PageData_HeadingElement_Fragment
  | PageData_Image_Fragment
  | PageData_ImageBackground_Fragment
  | PageData_ImageItemElement_Fragment
  | PageData_ImageMedia_Fragment
  | PageData_ImageTextItemElement_Fragment
  | PageData_LandingPage_Fragment
  | PageData_MegaMenuGroupBlock_Fragment
  | PageData_NavigationMenuBlock_Fragment
  | PageData_OfficeLocation_Fragment
  | PageData_PDPCarouselElement_Fragment
  | PageData_PDPGalleryElement_Fragment
  | PageData_PDPHeroElement_Fragment
  | PageData_PDPSpecificationsElement_Fragment
  | PageData_PageSeoSettings_Fragment
  | PageData_ParagraphElement_Fragment
  | PageData_ProductCardElement_Fragment
  | PageData_ProductCardListElement_Fragment
  | PageData_ProductCardListSection_Fragment
  | PageData_ProductCarouselElement_Fragment
  | PageData_ProductCarouselSection_Fragment
  | PageData_ProductDetail_Fragment
  | PageData_ProductDetailExperience_Fragment
  | PageData_ProductList_Fragment
  | PageData_ProductListingEPage_Fragment
  | PageData_ProductVisibleElements_Fragment
  | PageData_Section_Fragment
  | PageData_SocialMediaBlock_Fragment
  | PageData_SocialMediaBlocks_Fragment
  | PageData_SysContentFolder_Fragment
  | PageData_TopHeaderContainer_Fragment
  | PageData_VideoElement_Fragment
  | PageData_VideoMedia_Fragment
  | PageData_WebFooterConfigrationBlock_Fragment
  | PageData_WebHeaderConfigrationBlock_Fragment
  | PageData__Component_Fragment
  | PageData__Content_Fragment
  | PageData__Experience_Fragment
  | PageData__Folder_Fragment
  | PageData__Image_Fragment
  | PageData__Media_Fragment
  | PageData__Page_Fragment
  | PageData__Section_Fragment
  | PageData__Video_Fragment
  | PageData_test_Fragment;

export type LinkDataFragment = {
  __typename?: "ContentUrl";
  type?: string | null;
  base?: string | null;
  default?: string | null;
} & { " $fragmentName"?: "LinkDataFragment" };

export type ReferenceDataFragment = {
  __typename?: "ContentReference";
  key?: string | null;
  url?:
    | ({ __typename?: "ContentUrl" } & {
        " $fragmentRefs"?: { LinkDataFragment: LinkDataFragment };
      })
    | null;
} & { " $fragmentName"?: "ReferenceDataFragment" };

type IContentInfo_ContentMetadata_Fragment = {
  __typename?: "ContentMetadata";
  key?: string | null;
  locale?: string | null;
  types?: Array<string | null> | null;
  displayName?: string | null;
  version?: string | null;
  url?:
    | ({ __typename?: "ContentUrl" } & {
        " $fragmentRefs"?: { LinkDataFragment: LinkDataFragment };
      })
    | null;
} & { " $fragmentName"?: "IContentInfo_ContentMetadata_Fragment" };

type IContentInfo_InstanceMetadata_Fragment = {
  __typename?: "InstanceMetadata";
  key?: string | null;
  locale?: string | null;
  types?: Array<string | null> | null;
  displayName?: string | null;
  version?: string | null;
  url?:
    | ({ __typename?: "ContentUrl" } & {
        " $fragmentRefs"?: { LinkDataFragment: LinkDataFragment };
      })
    | null;
} & { " $fragmentName"?: "IContentInfo_InstanceMetadata_Fragment" };

type IContentInfo_ItemMetadata_Fragment = {
  __typename?: "ItemMetadata";
  key?: string | null;
  locale?: string | null;
  types?: Array<string | null> | null;
  displayName?: string | null;
  version?: string | null;
  url?:
    | ({ __typename?: "ContentUrl" } & {
        " $fragmentRefs"?: { LinkDataFragment: LinkDataFragment };
      })
    | null;
} & { " $fragmentName"?: "IContentInfo_ItemMetadata_Fragment" };

type IContentInfo_MediaMetadata_Fragment = {
  __typename?: "MediaMetadata";
  key?: string | null;
  locale?: string | null;
  types?: Array<string | null> | null;
  displayName?: string | null;
  version?: string | null;
  url?:
    | ({ __typename?: "ContentUrl" } & {
        " $fragmentRefs"?: { LinkDataFragment: LinkDataFragment };
      })
    | null;
} & { " $fragmentName"?: "IContentInfo_MediaMetadata_Fragment" };

export type IContentInfoFragment =
  | IContentInfo_ContentMetadata_Fragment
  | IContentInfo_InstanceMetadata_Fragment
  | IContentInfo_ItemMetadata_Fragment
  | IContentInfo_MediaMetadata_Fragment;

type IContentListItem_BannerItemElement_Fragment = ({
  __typename?: "BannerItemElement";
} & {
  " $fragmentRefs"?: {
    IContentData_BannerItemElement_Fragment: IContentData_BannerItemElement_Fragment;
  };
}) & { " $fragmentName"?: "IContentListItem_BannerItemElement_Fragment" };

type IContentListItem_BlankExperience_Fragment = ({
  __typename?: "BlankExperience";
} & {
  " $fragmentRefs"?: {
    IContentData_BlankExperience_Fragment: IContentData_BlankExperience_Fragment;
  };
}) & { " $fragmentName"?: "IContentListItem_BlankExperience_Fragment" };

type IContentListItem_BlankSection_Fragment = ({
  __typename?: "BlankSection";
} & {
  " $fragmentRefs"?: {
    IContentData_BlankSection_Fragment: IContentData_BlankSection_Fragment;
  };
}) & { " $fragmentName"?: "IContentListItem_BlankSection_Fragment" };

type IContentListItem_ButtonElement_Fragment = ({
  __typename?: "ButtonElement";
} & {
  " $fragmentRefs"?: {
    IContentData_ButtonElement_Fragment: IContentData_ButtonElement_Fragment;
  };
}) & { " $fragmentName"?: "IContentListItem_ButtonElement_Fragment" };

type IContentListItem_CTAElement_Fragment = ({ __typename?: "CTAElement" } & {
  " $fragmentRefs"?: {
    IContentData_CTAElement_Fragment: IContentData_CTAElement_Fragment;
  };
}) & { " $fragmentName"?: "IContentListItem_CTAElement_Fragment" };

type IContentListItem_Company_Fragment = ({ __typename?: "Company" } & {
  " $fragmentRefs"?: {
    IContentData_Company_Fragment: IContentData_Company_Fragment;
  };
}) & { " $fragmentName"?: "IContentListItem_Company_Fragment" };

type IContentListItem_ContainerElement_Fragment = ({
  __typename?: "ContainerElement";
} & {
  " $fragmentRefs"?: {
    IContentData_ContainerElement_Fragment: IContentData_ContainerElement_Fragment;
  };
}) & { " $fragmentName"?: "IContentListItem_ContainerElement_Fragment" };

type IContentListItem_ContentTextElement_Fragment = ({
  __typename?: "ContentTextElement";
} & {
  " $fragmentRefs"?: {
    IContentData_ContentTextElement_Fragment: IContentData_ContentTextElement_Fragment;
  };
}) & { " $fragmentName"?: "IContentListItem_ContentTextElement_Fragment" };

type IContentListItem_DefaultVideo_Fragment = ({
  __typename?: "DefaultVideo";
} & {
  " $fragmentRefs"?: {
    IContentData_DefaultVideo_Fragment: IContentData_DefaultVideo_Fragment;
  };
}) & { " $fragmentName"?: "IContentListItem_DefaultVideo_Fragment" };

type IContentListItem_Dictionary_Fragment = ({ __typename?: "Dictionary" } & {
  " $fragmentRefs"?: {
    IContentData_Dictionary_Fragment: IContentData_Dictionary_Fragment;
  };
}) & { " $fragmentName"?: "IContentListItem_Dictionary_Fragment" };

type IContentListItem_DictionaryItem_Fragment = ({
  __typename?: "DictionaryItem";
} & {
  " $fragmentRefs"?: {
    IContentData_DictionaryItem_Fragment: IContentData_DictionaryItem_Fragment;
  };
}) & { " $fragmentName"?: "IContentListItem_DictionaryItem_Fragment" };

type IContentListItem_ExpandableText_Fragment = ({
  __typename?: "ExpandableText";
} & {
  " $fragmentRefs"?: {
    IContentData_ExpandableText_Fragment: IContentData_ExpandableText_Fragment;
  };
}) & { " $fragmentName"?: "IContentListItem_ExpandableText_Fragment" };

type IContentListItem_FAQsSection_Fragment = ({ __typename?: "FAQsSection" } & {
  " $fragmentRefs"?: {
    IContentData_FAQsSection_Fragment: IContentData_FAQsSection_Fragment;
  };
}) & { " $fragmentName"?: "IContentListItem_FAQsSection_Fragment" };

type IContentListItem_GenericMedia_Fragment = ({
  __typename?: "GenericMedia";
} & {
  " $fragmentRefs"?: {
    IContentData_GenericMedia_Fragment: IContentData_GenericMedia_Fragment;
  };
}) & { " $fragmentName"?: "IContentListItem_GenericMedia_Fragment" };

type IContentListItem_HeadingElement_Fragment = ({
  __typename?: "HeadingElement";
} & {
  " $fragmentRefs"?: {
    IContentData_HeadingElement_Fragment: IContentData_HeadingElement_Fragment;
  };
}) & { " $fragmentName"?: "IContentListItem_HeadingElement_Fragment" };

type IContentListItem_Image_Fragment = ({ __typename?: "Image" } & {
  " $fragmentRefs"?: {
    IContentData_Image_Fragment: IContentData_Image_Fragment;
  };
}) & { " $fragmentName"?: "IContentListItem_Image_Fragment" };

type IContentListItem_ImageBackground_Fragment = ({
  __typename?: "ImageBackground";
} & {
  " $fragmentRefs"?: {
    IContentData_ImageBackground_Fragment: IContentData_ImageBackground_Fragment;
  };
}) & { " $fragmentName"?: "IContentListItem_ImageBackground_Fragment" };

type IContentListItem_ImageItemElement_Fragment = ({
  __typename?: "ImageItemElement";
} & {
  " $fragmentRefs"?: {
    IContentData_ImageItemElement_Fragment: IContentData_ImageItemElement_Fragment;
  };
}) & { " $fragmentName"?: "IContentListItem_ImageItemElement_Fragment" };

type IContentListItem_ImageMedia_Fragment = ({ __typename?: "ImageMedia" } & {
  " $fragmentRefs"?: {
    IContentData_ImageMedia_Fragment: IContentData_ImageMedia_Fragment;
  };
}) & { " $fragmentName"?: "IContentListItem_ImageMedia_Fragment" };

type IContentListItem_ImageTextItemElement_Fragment = ({
  __typename?: "ImageTextItemElement";
} & {
  " $fragmentRefs"?: {
    IContentData_ImageTextItemElement_Fragment: IContentData_ImageTextItemElement_Fragment;
  };
}) & { " $fragmentName"?: "IContentListItem_ImageTextItemElement_Fragment" };

type IContentListItem_LandingPage_Fragment = ({ __typename?: "LandingPage" } & {
  " $fragmentRefs"?: {
    IContentData_LandingPage_Fragment: IContentData_LandingPage_Fragment;
  };
}) & { " $fragmentName"?: "IContentListItem_LandingPage_Fragment" };

type IContentListItem_MegaMenuGroupBlock_Fragment = ({
  __typename?: "MegaMenuGroupBlock";
} & {
  " $fragmentRefs"?: {
    IContentData_MegaMenuGroupBlock_Fragment: IContentData_MegaMenuGroupBlock_Fragment;
  };
}) & { " $fragmentName"?: "IContentListItem_MegaMenuGroupBlock_Fragment" };

type IContentListItem_NavigationMenuBlock_Fragment = ({
  __typename?: "NavigationMenuBlock";
} & {
  " $fragmentRefs"?: {
    IContentData_NavigationMenuBlock_Fragment: IContentData_NavigationMenuBlock_Fragment;
  };
}) & { " $fragmentName"?: "IContentListItem_NavigationMenuBlock_Fragment" };

type IContentListItem_OfficeLocation_Fragment = ({
  __typename?: "OfficeLocation";
} & {
  " $fragmentRefs"?: {
    IContentData_OfficeLocation_Fragment: IContentData_OfficeLocation_Fragment;
  };
}) & { " $fragmentName"?: "IContentListItem_OfficeLocation_Fragment" };

type IContentListItem_PDPCarouselElement_Fragment = ({
  __typename?: "PDPCarouselElement";
} & {
  " $fragmentRefs"?: {
    IContentData_PDPCarouselElement_Fragment: IContentData_PDPCarouselElement_Fragment;
  };
}) & { " $fragmentName"?: "IContentListItem_PDPCarouselElement_Fragment" };

type IContentListItem_PDPGalleryElement_Fragment = ({
  __typename?: "PDPGalleryElement";
} & {
  " $fragmentRefs"?: {
    IContentData_PDPGalleryElement_Fragment: IContentData_PDPGalleryElement_Fragment;
  };
}) & { " $fragmentName"?: "IContentListItem_PDPGalleryElement_Fragment" };

type IContentListItem_PDPHeroElement_Fragment = ({
  __typename?: "PDPHeroElement";
} & {
  " $fragmentRefs"?: {
    IContentData_PDPHeroElement_Fragment: IContentData_PDPHeroElement_Fragment;
  };
}) & { " $fragmentName"?: "IContentListItem_PDPHeroElement_Fragment" };

type IContentListItem_PDPSpecificationsElement_Fragment = ({
  __typename?: "PDPSpecificationsElement";
} & {
  " $fragmentRefs"?: {
    IContentData_PDPSpecificationsElement_Fragment: IContentData_PDPSpecificationsElement_Fragment;
  };
}) & {
  " $fragmentName"?: "IContentListItem_PDPSpecificationsElement_Fragment";
};

type IContentListItem_PageSeoSettings_Fragment = ({
  __typename?: "PageSeoSettings";
} & {
  " $fragmentRefs"?: {
    IContentData_PageSeoSettings_Fragment: IContentData_PageSeoSettings_Fragment;
  };
}) & { " $fragmentName"?: "IContentListItem_PageSeoSettings_Fragment" };

type IContentListItem_ParagraphElement_Fragment = ({
  __typename?: "ParagraphElement";
} & {
  " $fragmentRefs"?: {
    IContentData_ParagraphElement_Fragment: IContentData_ParagraphElement_Fragment;
  };
}) & { " $fragmentName"?: "IContentListItem_ParagraphElement_Fragment" };

type IContentListItem_ProductCardElement_Fragment = ({
  __typename?: "ProductCardElement";
} & {
  " $fragmentRefs"?: {
    IContentData_ProductCardElement_Fragment: IContentData_ProductCardElement_Fragment;
  };
}) & { " $fragmentName"?: "IContentListItem_ProductCardElement_Fragment" };

type IContentListItem_ProductCardListElement_Fragment = ({
  __typename?: "ProductCardListElement";
} & {
  " $fragmentRefs"?: {
    IContentData_ProductCardListElement_Fragment: IContentData_ProductCardListElement_Fragment;
  };
}) & { " $fragmentName"?: "IContentListItem_ProductCardListElement_Fragment" };

type IContentListItem_ProductCardListSection_Fragment = ({
  __typename?: "ProductCardListSection";
} & {
  " $fragmentRefs"?: {
    IContentData_ProductCardListSection_Fragment: IContentData_ProductCardListSection_Fragment;
  };
}) & { " $fragmentName"?: "IContentListItem_ProductCardListSection_Fragment" };

type IContentListItem_ProductCarouselElement_Fragment = ({
  __typename?: "ProductCarouselElement";
} & {
  " $fragmentRefs"?: {
    IContentData_ProductCarouselElement_Fragment: IContentData_ProductCarouselElement_Fragment;
  };
}) & { " $fragmentName"?: "IContentListItem_ProductCarouselElement_Fragment" };

type IContentListItem_ProductCarouselSection_Fragment = ({
  __typename?: "ProductCarouselSection";
} & {
  " $fragmentRefs"?: {
    IContentData_ProductCarouselSection_Fragment: IContentData_ProductCarouselSection_Fragment;
  };
}) & { " $fragmentName"?: "IContentListItem_ProductCarouselSection_Fragment" };

type IContentListItem_ProductDetail_Fragment = ({
  __typename?: "ProductDetail";
} & {
  " $fragmentRefs"?: {
    IContentData_ProductDetail_Fragment: IContentData_ProductDetail_Fragment;
  };
}) & { " $fragmentName"?: "IContentListItem_ProductDetail_Fragment" };

type IContentListItem_ProductDetailExperience_Fragment = ({
  __typename?: "ProductDetailExperience";
} & {
  " $fragmentRefs"?: {
    IContentData_ProductDetailExperience_Fragment: IContentData_ProductDetailExperience_Fragment;
  };
}) & { " $fragmentName"?: "IContentListItem_ProductDetailExperience_Fragment" };

type IContentListItem_ProductList_Fragment = ({ __typename?: "ProductList" } & {
  " $fragmentRefs"?: {
    IContentData_ProductList_Fragment: IContentData_ProductList_Fragment;
  };
}) & { " $fragmentName"?: "IContentListItem_ProductList_Fragment" };

type IContentListItem_ProductListingEPage_Fragment = ({
  __typename?: "ProductListingEPage";
} & {
  " $fragmentRefs"?: {
    IContentData_ProductListingEPage_Fragment: IContentData_ProductListingEPage_Fragment;
  };
}) & { " $fragmentName"?: "IContentListItem_ProductListingEPage_Fragment" };

type IContentListItem_ProductVisibleElements_Fragment = ({
  __typename?: "ProductVisibleElements";
} & {
  " $fragmentRefs"?: {
    IContentData_ProductVisibleElements_Fragment: IContentData_ProductVisibleElements_Fragment;
  };
}) & { " $fragmentName"?: "IContentListItem_ProductVisibleElements_Fragment" };

type IContentListItem_Section_Fragment = ({ __typename?: "Section" } & {
  " $fragmentRefs"?: {
    IContentData_Section_Fragment: IContentData_Section_Fragment;
  };
}) & { " $fragmentName"?: "IContentListItem_Section_Fragment" };

type IContentListItem_SocialMediaBlock_Fragment = ({
  __typename?: "SocialMediaBlock";
} & {
  " $fragmentRefs"?: {
    IContentData_SocialMediaBlock_Fragment: IContentData_SocialMediaBlock_Fragment;
  };
}) & { " $fragmentName"?: "IContentListItem_SocialMediaBlock_Fragment" };

type IContentListItem_SocialMediaBlocks_Fragment = ({
  __typename?: "SocialMediaBlocks";
} & {
  " $fragmentRefs"?: {
    IContentData_SocialMediaBlocks_Fragment: IContentData_SocialMediaBlocks_Fragment;
  };
}) & { " $fragmentName"?: "IContentListItem_SocialMediaBlocks_Fragment" };

type IContentListItem_SysContentFolder_Fragment = ({
  __typename?: "SysContentFolder";
} & {
  " $fragmentRefs"?: {
    IContentData_SysContentFolder_Fragment: IContentData_SysContentFolder_Fragment;
  };
}) & { " $fragmentName"?: "IContentListItem_SysContentFolder_Fragment" };

type IContentListItem_TopHeaderContainer_Fragment = ({
  __typename?: "TopHeaderContainer";
} & {
  " $fragmentRefs"?: {
    IContentData_TopHeaderContainer_Fragment: IContentData_TopHeaderContainer_Fragment;
  };
}) & { " $fragmentName"?: "IContentListItem_TopHeaderContainer_Fragment" };

type IContentListItem_VideoElement_Fragment = ({
  __typename?: "VideoElement";
} & {
  " $fragmentRefs"?: {
    IContentData_VideoElement_Fragment: IContentData_VideoElement_Fragment;
  };
}) & { " $fragmentName"?: "IContentListItem_VideoElement_Fragment" };

type IContentListItem_VideoMedia_Fragment = ({ __typename?: "VideoMedia" } & {
  " $fragmentRefs"?: {
    IContentData_VideoMedia_Fragment: IContentData_VideoMedia_Fragment;
  };
}) & { " $fragmentName"?: "IContentListItem_VideoMedia_Fragment" };

type IContentListItem_WebFooterConfigrationBlock_Fragment = ({
  __typename?: "WebFooterConfigrationBlock";
} & {
  " $fragmentRefs"?: {
    IContentData_WebFooterConfigrationBlock_Fragment: IContentData_WebFooterConfigrationBlock_Fragment;
  };
}) & {
  " $fragmentName"?: "IContentListItem_WebFooterConfigrationBlock_Fragment";
};

type IContentListItem_WebHeaderConfigrationBlock_Fragment = ({
  __typename?: "WebHeaderConfigrationBlock";
} & {
  " $fragmentRefs"?: {
    IContentData_WebHeaderConfigrationBlock_Fragment: IContentData_WebHeaderConfigrationBlock_Fragment;
  };
}) & {
  " $fragmentName"?: "IContentListItem_WebHeaderConfigrationBlock_Fragment";
};

type IContentListItem__Component_Fragment = ({ __typename?: "_Component" } & {
  " $fragmentRefs"?: {
    IContentData__Component_Fragment: IContentData__Component_Fragment;
  };
}) & { " $fragmentName"?: "IContentListItem__Component_Fragment" };

type IContentListItem__Content_Fragment = ({ __typename?: "_Content" } & {
  " $fragmentRefs"?: {
    IContentData__Content_Fragment: IContentData__Content_Fragment;
  };
}) & { " $fragmentName"?: "IContentListItem__Content_Fragment" };

type IContentListItem__Experience_Fragment = ({ __typename?: "_Experience" } & {
  " $fragmentRefs"?: {
    IContentData__Experience_Fragment: IContentData__Experience_Fragment;
  };
}) & { " $fragmentName"?: "IContentListItem__Experience_Fragment" };

type IContentListItem__Folder_Fragment = ({ __typename?: "_Folder" } & {
  " $fragmentRefs"?: {
    IContentData__Folder_Fragment: IContentData__Folder_Fragment;
  };
}) & { " $fragmentName"?: "IContentListItem__Folder_Fragment" };

type IContentListItem__Image_Fragment = ({ __typename?: "_Image" } & {
  " $fragmentRefs"?: {
    IContentData__Image_Fragment: IContentData__Image_Fragment;
  };
}) & { " $fragmentName"?: "IContentListItem__Image_Fragment" };

type IContentListItem__Media_Fragment = ({ __typename?: "_Media" } & {
  " $fragmentRefs"?: {
    IContentData__Media_Fragment: IContentData__Media_Fragment;
  };
}) & { " $fragmentName"?: "IContentListItem__Media_Fragment" };

type IContentListItem__Page_Fragment = ({ __typename?: "_Page" } & {
  " $fragmentRefs"?: {
    IContentData__Page_Fragment: IContentData__Page_Fragment;
  };
}) & { " $fragmentName"?: "IContentListItem__Page_Fragment" };

type IContentListItem__Section_Fragment = ({ __typename?: "_Section" } & {
  " $fragmentRefs"?: {
    IContentData__Section_Fragment: IContentData__Section_Fragment;
  };
}) & { " $fragmentName"?: "IContentListItem__Section_Fragment" };

type IContentListItem__Video_Fragment = ({ __typename?: "_Video" } & {
  " $fragmentRefs"?: {
    IContentData__Video_Fragment: IContentData__Video_Fragment;
  };
}) & { " $fragmentName"?: "IContentListItem__Video_Fragment" };

type IContentListItem_test_Fragment = ({ __typename?: "test" } & {
  " $fragmentRefs"?: { IContentData_test_Fragment: IContentData_test_Fragment };
}) & { " $fragmentName"?: "IContentListItem_test_Fragment" };

export type IContentListItemFragment =
  | IContentListItem_BannerItemElement_Fragment
  | IContentListItem_BlankExperience_Fragment
  | IContentListItem_BlankSection_Fragment
  | IContentListItem_ButtonElement_Fragment
  | IContentListItem_CTAElement_Fragment
  | IContentListItem_Company_Fragment
  | IContentListItem_ContainerElement_Fragment
  | IContentListItem_ContentTextElement_Fragment
  | IContentListItem_DefaultVideo_Fragment
  | IContentListItem_Dictionary_Fragment
  | IContentListItem_DictionaryItem_Fragment
  | IContentListItem_ExpandableText_Fragment
  | IContentListItem_FAQsSection_Fragment
  | IContentListItem_GenericMedia_Fragment
  | IContentListItem_HeadingElement_Fragment
  | IContentListItem_Image_Fragment
  | IContentListItem_ImageBackground_Fragment
  | IContentListItem_ImageItemElement_Fragment
  | IContentListItem_ImageMedia_Fragment
  | IContentListItem_ImageTextItemElement_Fragment
  | IContentListItem_LandingPage_Fragment
  | IContentListItem_MegaMenuGroupBlock_Fragment
  | IContentListItem_NavigationMenuBlock_Fragment
  | IContentListItem_OfficeLocation_Fragment
  | IContentListItem_PDPCarouselElement_Fragment
  | IContentListItem_PDPGalleryElement_Fragment
  | IContentListItem_PDPHeroElement_Fragment
  | IContentListItem_PDPSpecificationsElement_Fragment
  | IContentListItem_PageSeoSettings_Fragment
  | IContentListItem_ParagraphElement_Fragment
  | IContentListItem_ProductCardElement_Fragment
  | IContentListItem_ProductCardListElement_Fragment
  | IContentListItem_ProductCardListSection_Fragment
  | IContentListItem_ProductCarouselElement_Fragment
  | IContentListItem_ProductCarouselSection_Fragment
  | IContentListItem_ProductDetail_Fragment
  | IContentListItem_ProductDetailExperience_Fragment
  | IContentListItem_ProductList_Fragment
  | IContentListItem_ProductListingEPage_Fragment
  | IContentListItem_ProductVisibleElements_Fragment
  | IContentListItem_Section_Fragment
  | IContentListItem_SocialMediaBlock_Fragment
  | IContentListItem_SocialMediaBlocks_Fragment
  | IContentListItem_SysContentFolder_Fragment
  | IContentListItem_TopHeaderContainer_Fragment
  | IContentListItem_VideoElement_Fragment
  | IContentListItem_VideoMedia_Fragment
  | IContentListItem_WebFooterConfigrationBlock_Fragment
  | IContentListItem_WebHeaderConfigrationBlock_Fragment
  | IContentListItem__Component_Fragment
  | IContentListItem__Content_Fragment
  | IContentListItem__Experience_Fragment
  | IContentListItem__Folder_Fragment
  | IContentListItem__Image_Fragment
  | IContentListItem__Media_Fragment
  | IContentListItem__Page_Fragment
  | IContentListItem__Section_Fragment
  | IContentListItem__Video_Fragment
  | IContentListItem_test_Fragment;

type ExperienceData_BlankExperience_Fragment = {
  __typename?: "BlankExperience";
  composition?:
    | ({
        __typename?: "CompositionStructureNode";
        nodes?: Array<
          | ({ __typename?: "CompositionComponentNode" } & {
              " $fragmentRefs"?: {
                CompositionNodeData_CompositionComponentNode_Fragment: CompositionNodeData_CompositionComponentNode_Fragment;
                CompositionComponentNodeDataFragment: CompositionComponentNodeDataFragment;
              };
            })
          | ({ __typename?: "CompositionNode" } & {
              " $fragmentRefs"?: {
                CompositionNodeData_CompositionNode_Fragment: CompositionNodeData_CompositionNode_Fragment;
              };
            })
          | ({
              __typename?: "CompositionStructureNode";
              nodes?: Array<
                | ({ __typename?: "CompositionComponentNode" } & {
                    " $fragmentRefs"?: {
                      CompositionNodeData_CompositionComponentNode_Fragment: CompositionNodeData_CompositionComponentNode_Fragment;
                    };
                  })
                | ({ __typename?: "CompositionNode" } & {
                    " $fragmentRefs"?: {
                      CompositionNodeData_CompositionNode_Fragment: CompositionNodeData_CompositionNode_Fragment;
                    };
                  })
                | ({
                    __typename?: "CompositionStructureNode";
                    nodes?: Array<
                      | ({ __typename?: "CompositionComponentNode" } & {
                          " $fragmentRefs"?: {
                            CompositionNodeData_CompositionComponentNode_Fragment: CompositionNodeData_CompositionComponentNode_Fragment;
                          };
                        })
                      | ({ __typename?: "CompositionNode" } & {
                          " $fragmentRefs"?: {
                            CompositionNodeData_CompositionNode_Fragment: CompositionNodeData_CompositionNode_Fragment;
                          };
                        })
                      | ({
                          __typename?: "CompositionStructureNode";
                          nodes?: Array<
                            | ({ __typename?: "CompositionComponentNode" } & {
                                " $fragmentRefs"?: {
                                  CompositionNodeData_CompositionComponentNode_Fragment: CompositionNodeData_CompositionComponentNode_Fragment;
                                  CompositionComponentNodeDataFragment: CompositionComponentNodeDataFragment;
                                };
                              })
                            | ({ __typename?: "CompositionNode" } & {
                                " $fragmentRefs"?: {
                                  CompositionNodeData_CompositionNode_Fragment: CompositionNodeData_CompositionNode_Fragment;
                                };
                              })
                            | ({ __typename?: "CompositionStructureNode" } & {
                                " $fragmentRefs"?: {
                                  CompositionNodeData_CompositionStructureNode_Fragment: CompositionNodeData_CompositionStructureNode_Fragment;
                                };
                              })
                            | null
                          > | null;
                        } & {
                          " $fragmentRefs"?: {
                            CompositionNodeData_CompositionStructureNode_Fragment: CompositionNodeData_CompositionStructureNode_Fragment;
                          };
                        })
                      | null
                    > | null;
                  } & {
                    " $fragmentRefs"?: {
                      CompositionNodeData_CompositionStructureNode_Fragment: CompositionNodeData_CompositionStructureNode_Fragment;
                    };
                  })
                | null
              > | null;
            } & {
              " $fragmentRefs"?: {
                CompositionNodeData_CompositionStructureNode_Fragment: CompositionNodeData_CompositionStructureNode_Fragment;
              };
            })
          | null
        > | null;
      } & {
        " $fragmentRefs"?: {
          CompositionNodeData_CompositionStructureNode_Fragment: CompositionNodeData_CompositionStructureNode_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "ExperienceData_BlankExperience_Fragment" };

type ExperienceData_ProductDetailExperience_Fragment = {
  __typename?: "ProductDetailExperience";
  composition?:
    | ({
        __typename?: "CompositionStructureNode";
        nodes?: Array<
          | ({ __typename?: "CompositionComponentNode" } & {
              " $fragmentRefs"?: {
                CompositionNodeData_CompositionComponentNode_Fragment: CompositionNodeData_CompositionComponentNode_Fragment;
                CompositionComponentNodeDataFragment: CompositionComponentNodeDataFragment;
              };
            })
          | ({ __typename?: "CompositionNode" } & {
              " $fragmentRefs"?: {
                CompositionNodeData_CompositionNode_Fragment: CompositionNodeData_CompositionNode_Fragment;
              };
            })
          | ({
              __typename?: "CompositionStructureNode";
              nodes?: Array<
                | ({ __typename?: "CompositionComponentNode" } & {
                    " $fragmentRefs"?: {
                      CompositionNodeData_CompositionComponentNode_Fragment: CompositionNodeData_CompositionComponentNode_Fragment;
                    };
                  })
                | ({ __typename?: "CompositionNode" } & {
                    " $fragmentRefs"?: {
                      CompositionNodeData_CompositionNode_Fragment: CompositionNodeData_CompositionNode_Fragment;
                    };
                  })
                | ({
                    __typename?: "CompositionStructureNode";
                    nodes?: Array<
                      | ({ __typename?: "CompositionComponentNode" } & {
                          " $fragmentRefs"?: {
                            CompositionNodeData_CompositionComponentNode_Fragment: CompositionNodeData_CompositionComponentNode_Fragment;
                          };
                        })
                      | ({ __typename?: "CompositionNode" } & {
                          " $fragmentRefs"?: {
                            CompositionNodeData_CompositionNode_Fragment: CompositionNodeData_CompositionNode_Fragment;
                          };
                        })
                      | ({
                          __typename?: "CompositionStructureNode";
                          nodes?: Array<
                            | ({ __typename?: "CompositionComponentNode" } & {
                                " $fragmentRefs"?: {
                                  CompositionNodeData_CompositionComponentNode_Fragment: CompositionNodeData_CompositionComponentNode_Fragment;
                                  CompositionComponentNodeDataFragment: CompositionComponentNodeDataFragment;
                                };
                              })
                            | ({ __typename?: "CompositionNode" } & {
                                " $fragmentRefs"?: {
                                  CompositionNodeData_CompositionNode_Fragment: CompositionNodeData_CompositionNode_Fragment;
                                };
                              })
                            | ({ __typename?: "CompositionStructureNode" } & {
                                " $fragmentRefs"?: {
                                  CompositionNodeData_CompositionStructureNode_Fragment: CompositionNodeData_CompositionStructureNode_Fragment;
                                };
                              })
                            | null
                          > | null;
                        } & {
                          " $fragmentRefs"?: {
                            CompositionNodeData_CompositionStructureNode_Fragment: CompositionNodeData_CompositionStructureNode_Fragment;
                          };
                        })
                      | null
                    > | null;
                  } & {
                    " $fragmentRefs"?: {
                      CompositionNodeData_CompositionStructureNode_Fragment: CompositionNodeData_CompositionStructureNode_Fragment;
                    };
                  })
                | null
              > | null;
            } & {
              " $fragmentRefs"?: {
                CompositionNodeData_CompositionStructureNode_Fragment: CompositionNodeData_CompositionStructureNode_Fragment;
              };
            })
          | null
        > | null;
      } & {
        " $fragmentRefs"?: {
          CompositionNodeData_CompositionStructureNode_Fragment: CompositionNodeData_CompositionStructureNode_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "ExperienceData_ProductDetailExperience_Fragment" };

type ExperienceData_ProductListingEPage_Fragment = {
  __typename?: "ProductListingEPage";
  composition?:
    | ({
        __typename?: "CompositionStructureNode";
        nodes?: Array<
          | ({ __typename?: "CompositionComponentNode" } & {
              " $fragmentRefs"?: {
                CompositionNodeData_CompositionComponentNode_Fragment: CompositionNodeData_CompositionComponentNode_Fragment;
                CompositionComponentNodeDataFragment: CompositionComponentNodeDataFragment;
              };
            })
          | ({ __typename?: "CompositionNode" } & {
              " $fragmentRefs"?: {
                CompositionNodeData_CompositionNode_Fragment: CompositionNodeData_CompositionNode_Fragment;
              };
            })
          | ({
              __typename?: "CompositionStructureNode";
              nodes?: Array<
                | ({ __typename?: "CompositionComponentNode" } & {
                    " $fragmentRefs"?: {
                      CompositionNodeData_CompositionComponentNode_Fragment: CompositionNodeData_CompositionComponentNode_Fragment;
                    };
                  })
                | ({ __typename?: "CompositionNode" } & {
                    " $fragmentRefs"?: {
                      CompositionNodeData_CompositionNode_Fragment: CompositionNodeData_CompositionNode_Fragment;
                    };
                  })
                | ({
                    __typename?: "CompositionStructureNode";
                    nodes?: Array<
                      | ({ __typename?: "CompositionComponentNode" } & {
                          " $fragmentRefs"?: {
                            CompositionNodeData_CompositionComponentNode_Fragment: CompositionNodeData_CompositionComponentNode_Fragment;
                          };
                        })
                      | ({ __typename?: "CompositionNode" } & {
                          " $fragmentRefs"?: {
                            CompositionNodeData_CompositionNode_Fragment: CompositionNodeData_CompositionNode_Fragment;
                          };
                        })
                      | ({
                          __typename?: "CompositionStructureNode";
                          nodes?: Array<
                            | ({ __typename?: "CompositionComponentNode" } & {
                                " $fragmentRefs"?: {
                                  CompositionNodeData_CompositionComponentNode_Fragment: CompositionNodeData_CompositionComponentNode_Fragment;
                                  CompositionComponentNodeDataFragment: CompositionComponentNodeDataFragment;
                                };
                              })
                            | ({ __typename?: "CompositionNode" } & {
                                " $fragmentRefs"?: {
                                  CompositionNodeData_CompositionNode_Fragment: CompositionNodeData_CompositionNode_Fragment;
                                };
                              })
                            | ({ __typename?: "CompositionStructureNode" } & {
                                " $fragmentRefs"?: {
                                  CompositionNodeData_CompositionStructureNode_Fragment: CompositionNodeData_CompositionStructureNode_Fragment;
                                };
                              })
                            | null
                          > | null;
                        } & {
                          " $fragmentRefs"?: {
                            CompositionNodeData_CompositionStructureNode_Fragment: CompositionNodeData_CompositionStructureNode_Fragment;
                          };
                        })
                      | null
                    > | null;
                  } & {
                    " $fragmentRefs"?: {
                      CompositionNodeData_CompositionStructureNode_Fragment: CompositionNodeData_CompositionStructureNode_Fragment;
                    };
                  })
                | null
              > | null;
            } & {
              " $fragmentRefs"?: {
                CompositionNodeData_CompositionStructureNode_Fragment: CompositionNodeData_CompositionStructureNode_Fragment;
              };
            })
          | null
        > | null;
      } & {
        " $fragmentRefs"?: {
          CompositionNodeData_CompositionStructureNode_Fragment: CompositionNodeData_CompositionStructureNode_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "ExperienceData_ProductListingEPage_Fragment" };

type ExperienceData__Experience_Fragment = {
  __typename?: "_Experience";
  composition?:
    | ({
        __typename?: "CompositionStructureNode";
        nodes?: Array<
          | ({ __typename?: "CompositionComponentNode" } & {
              " $fragmentRefs"?: {
                CompositionNodeData_CompositionComponentNode_Fragment: CompositionNodeData_CompositionComponentNode_Fragment;
                CompositionComponentNodeDataFragment: CompositionComponentNodeDataFragment;
              };
            })
          | ({ __typename?: "CompositionNode" } & {
              " $fragmentRefs"?: {
                CompositionNodeData_CompositionNode_Fragment: CompositionNodeData_CompositionNode_Fragment;
              };
            })
          | ({
              __typename?: "CompositionStructureNode";
              nodes?: Array<
                | ({ __typename?: "CompositionComponentNode" } & {
                    " $fragmentRefs"?: {
                      CompositionNodeData_CompositionComponentNode_Fragment: CompositionNodeData_CompositionComponentNode_Fragment;
                    };
                  })
                | ({ __typename?: "CompositionNode" } & {
                    " $fragmentRefs"?: {
                      CompositionNodeData_CompositionNode_Fragment: CompositionNodeData_CompositionNode_Fragment;
                    };
                  })
                | ({
                    __typename?: "CompositionStructureNode";
                    nodes?: Array<
                      | ({ __typename?: "CompositionComponentNode" } & {
                          " $fragmentRefs"?: {
                            CompositionNodeData_CompositionComponentNode_Fragment: CompositionNodeData_CompositionComponentNode_Fragment;
                          };
                        })
                      | ({ __typename?: "CompositionNode" } & {
                          " $fragmentRefs"?: {
                            CompositionNodeData_CompositionNode_Fragment: CompositionNodeData_CompositionNode_Fragment;
                          };
                        })
                      | ({
                          __typename?: "CompositionStructureNode";
                          nodes?: Array<
                            | ({ __typename?: "CompositionComponentNode" } & {
                                " $fragmentRefs"?: {
                                  CompositionNodeData_CompositionComponentNode_Fragment: CompositionNodeData_CompositionComponentNode_Fragment;
                                  CompositionComponentNodeDataFragment: CompositionComponentNodeDataFragment;
                                };
                              })
                            | ({ __typename?: "CompositionNode" } & {
                                " $fragmentRefs"?: {
                                  CompositionNodeData_CompositionNode_Fragment: CompositionNodeData_CompositionNode_Fragment;
                                };
                              })
                            | ({ __typename?: "CompositionStructureNode" } & {
                                " $fragmentRefs"?: {
                                  CompositionNodeData_CompositionStructureNode_Fragment: CompositionNodeData_CompositionStructureNode_Fragment;
                                };
                              })
                            | null
                          > | null;
                        } & {
                          " $fragmentRefs"?: {
                            CompositionNodeData_CompositionStructureNode_Fragment: CompositionNodeData_CompositionStructureNode_Fragment;
                          };
                        })
                      | null
                    > | null;
                  } & {
                    " $fragmentRefs"?: {
                      CompositionNodeData_CompositionStructureNode_Fragment: CompositionNodeData_CompositionStructureNode_Fragment;
                    };
                  })
                | null
              > | null;
            } & {
              " $fragmentRefs"?: {
                CompositionNodeData_CompositionStructureNode_Fragment: CompositionNodeData_CompositionStructureNode_Fragment;
              };
            })
          | null
        > | null;
      } & {
        " $fragmentRefs"?: {
          CompositionNodeData_CompositionStructureNode_Fragment: CompositionNodeData_CompositionStructureNode_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "ExperienceData__Experience_Fragment" };

export type ExperienceDataFragment =
  | ExperienceData_BlankExperience_Fragment
  | ExperienceData_ProductDetailExperience_Fragment
  | ExperienceData_ProductListingEPage_Fragment
  | ExperienceData__Experience_Fragment;

type CompositionNodeData_CompositionComponentNode_Fragment = {
  __typename?: "CompositionComponentNode";
  type?: string | null;
  key?: string | null;
  name?: string | null;
  layoutType?: string | null;
  template?: string | null;
  settings?: Array<{
    __typename?: "CompositionDisplaySetting";
    key?: string | null;
    value?: string | null;
  } | null> | null;
} & {
  " $fragmentName"?: "CompositionNodeData_CompositionComponentNode_Fragment";
};

type CompositionNodeData_CompositionNode_Fragment = {
  __typename?: "CompositionNode";
  type?: string | null;
  key?: string | null;
  name?: string | null;
  layoutType?: string | null;
  template?: string | null;
  settings?: Array<{
    __typename?: "CompositionDisplaySetting";
    key?: string | null;
    value?: string | null;
  } | null> | null;
} & { " $fragmentName"?: "CompositionNodeData_CompositionNode_Fragment" };

type CompositionNodeData_CompositionStructureNode_Fragment = {
  __typename?: "CompositionStructureNode";
  type?: string | null;
  key?: string | null;
  name?: string | null;
  layoutType?: string | null;
  template?: string | null;
  settings?: Array<{
    __typename?: "CompositionDisplaySetting";
    key?: string | null;
    value?: string | null;
  } | null> | null;
} & {
  " $fragmentName"?: "CompositionNodeData_CompositionStructureNode_Fragment";
};

export type CompositionNodeDataFragment =
  | CompositionNodeData_CompositionComponentNode_Fragment
  | CompositionNodeData_CompositionNode_Fragment
  | CompositionNodeData_CompositionStructureNode_Fragment;

export type CompositionComponentNodeDataFragment = {
  __typename?: "CompositionComponentNode";
  component?:
    | ({ __typename?: "BannerItemElement" } & {
        " $fragmentRefs"?: {
          BlockData_BannerItemElement_Fragment: BlockData_BannerItemElement_Fragment;
          ElementData_BannerItemElement_Fragment: ElementData_BannerItemElement_Fragment;
          BannerItemElementDataFragment: BannerItemElementDataFragment;
        };
      })
    | ({ __typename?: "BlankSection" } & {
        " $fragmentRefs"?: {
          BlockData_BlankSection_Fragment: BlockData_BlankSection_Fragment;
          ElementData_BlankSection_Fragment: ElementData_BlankSection_Fragment;
        };
      })
    | ({ __typename?: "ButtonElement" } & {
        " $fragmentRefs"?: {
          BlockData_ButtonElement_Fragment: BlockData_ButtonElement_Fragment;
          ElementData_ButtonElement_Fragment: ElementData_ButtonElement_Fragment;
          ButtonElementDataFragment: ButtonElementDataFragment;
        };
      })
    | ({ __typename?: "CTAElement" } & {
        " $fragmentRefs"?: {
          BlockData_CTAElement_Fragment: BlockData_CTAElement_Fragment;
          ElementData_CTAElement_Fragment: ElementData_CTAElement_Fragment;
        };
      })
    | ({ __typename?: "Company" } & {
        " $fragmentRefs"?: {
          BlockData_Company_Fragment: BlockData_Company_Fragment;
          ElementData_Company_Fragment: ElementData_Company_Fragment;
          CompanyDataFragment: CompanyDataFragment;
        };
      })
    | ({ __typename?: "ContainerElement" } & {
        " $fragmentRefs"?: {
          BlockData_ContainerElement_Fragment: BlockData_ContainerElement_Fragment;
          ElementData_ContainerElement_Fragment: ElementData_ContainerElement_Fragment;
          ContainerElementDataFragment: ContainerElementDataFragment;
        };
      })
    | ({ __typename?: "ContentTextElement" } & {
        " $fragmentRefs"?: {
          BlockData_ContentTextElement_Fragment: BlockData_ContentTextElement_Fragment;
          ElementData_ContentTextElement_Fragment: ElementData_ContentTextElement_Fragment;
          ContentTextElementDataFragment: ContentTextElementDataFragment;
        };
      })
    | ({ __typename?: "Dictionary" } & {
        " $fragmentRefs"?: {
          BlockData_Dictionary_Fragment: BlockData_Dictionary_Fragment;
          ElementData_Dictionary_Fragment: ElementData_Dictionary_Fragment;
          DictionaryDataFragment: DictionaryDataFragment;
        };
      })
    | ({ __typename?: "DictionaryItem" } & {
        " $fragmentRefs"?: {
          BlockData_DictionaryItem_Fragment: BlockData_DictionaryItem_Fragment;
          ElementData_DictionaryItem_Fragment: ElementData_DictionaryItem_Fragment;
          DictionaryItemDataFragment: DictionaryItemDataFragment;
        };
      })
    | ({ __typename?: "ExpandableText" } & {
        " $fragmentRefs"?: {
          BlockData_ExpandableText_Fragment: BlockData_ExpandableText_Fragment;
          ElementData_ExpandableText_Fragment: ElementData_ExpandableText_Fragment;
          ExpandableTextDataFragment: ExpandableTextDataFragment;
        };
      })
    | ({ __typename?: "FAQsSection" } & {
        " $fragmentRefs"?: {
          BlockData_FAQsSection_Fragment: BlockData_FAQsSection_Fragment;
          ElementData_FAQsSection_Fragment: ElementData_FAQsSection_Fragment;
          FAQsSectionDataFragment: FAQsSectionDataFragment;
        };
      })
    | ({ __typename?: "HeadingElement" } & {
        " $fragmentRefs"?: {
          BlockData_HeadingElement_Fragment: BlockData_HeadingElement_Fragment;
          ElementData_HeadingElement_Fragment: ElementData_HeadingElement_Fragment;
          HeadingElementDataFragment: HeadingElementDataFragment;
        };
      })
    | ({ __typename?: "ImageBackground" } & {
        " $fragmentRefs"?: {
          BlockData_ImageBackground_Fragment: BlockData_ImageBackground_Fragment;
          ElementData_ImageBackground_Fragment: ElementData_ImageBackground_Fragment;
          ImageBackgroundDataFragment: ImageBackgroundDataFragment;
        };
      })
    | ({ __typename?: "ImageItemElement" } & {
        " $fragmentRefs"?: {
          BlockData_ImageItemElement_Fragment: BlockData_ImageItemElement_Fragment;
          ElementData_ImageItemElement_Fragment: ElementData_ImageItemElement_Fragment;
          ImageItemElementDataFragment: ImageItemElementDataFragment;
        };
      })
    | ({ __typename?: "ImageTextItemElement" } & {
        " $fragmentRefs"?: {
          BlockData_ImageTextItemElement_Fragment: BlockData_ImageTextItemElement_Fragment;
          ElementData_ImageTextItemElement_Fragment: ElementData_ImageTextItemElement_Fragment;
          ImageTextItemElementDataFragment: ImageTextItemElementDataFragment;
        };
      })
    | ({ __typename?: "MegaMenuGroupBlock" } & {
        " $fragmentRefs"?: {
          BlockData_MegaMenuGroupBlock_Fragment: BlockData_MegaMenuGroupBlock_Fragment;
          ElementData_MegaMenuGroupBlock_Fragment: ElementData_MegaMenuGroupBlock_Fragment;
          MegaMenuGroupBlockDataFragment: MegaMenuGroupBlockDataFragment;
        };
      })
    | ({ __typename?: "NavigationMenuBlock" } & {
        " $fragmentRefs"?: {
          BlockData_NavigationMenuBlock_Fragment: BlockData_NavigationMenuBlock_Fragment;
          ElementData_NavigationMenuBlock_Fragment: ElementData_NavigationMenuBlock_Fragment;
          NavigationMenuBlockDataFragment: NavigationMenuBlockDataFragment;
          NavigationMenuBlockFieldsFragment: NavigationMenuBlockFieldsFragment;
        };
      })
    | ({ __typename?: "OfficeLocation" } & {
        " $fragmentRefs"?: {
          BlockData_OfficeLocation_Fragment: BlockData_OfficeLocation_Fragment;
          ElementData_OfficeLocation_Fragment: ElementData_OfficeLocation_Fragment;
          OfficeLocationDataFragment: OfficeLocationDataFragment;
        };
      })
    | ({ __typename?: "PDPCarouselElement" } & {
        " $fragmentRefs"?: {
          BlockData_PDPCarouselElement_Fragment: BlockData_PDPCarouselElement_Fragment;
          ElementData_PDPCarouselElement_Fragment: ElementData_PDPCarouselElement_Fragment;
        };
      })
    | ({ __typename?: "PDPGalleryElement" } & {
        " $fragmentRefs"?: {
          BlockData_PDPGalleryElement_Fragment: BlockData_PDPGalleryElement_Fragment;
          ElementData_PDPGalleryElement_Fragment: ElementData_PDPGalleryElement_Fragment;
        };
      })
    | ({ __typename?: "PDPHeroElement" } & {
        " $fragmentRefs"?: {
          BlockData_PDPHeroElement_Fragment: BlockData_PDPHeroElement_Fragment;
          ElementData_PDPHeroElement_Fragment: ElementData_PDPHeroElement_Fragment;
        };
      })
    | ({ __typename?: "PDPSpecificationsElement" } & {
        " $fragmentRefs"?: {
          BlockData_PDPSpecificationsElement_Fragment: BlockData_PDPSpecificationsElement_Fragment;
          ElementData_PDPSpecificationsElement_Fragment: ElementData_PDPSpecificationsElement_Fragment;
          PDPSpecificationsElementDataFragment: PDPSpecificationsElementDataFragment;
        };
      })
    | ({ __typename?: "PageSeoSettings" } & {
        " $fragmentRefs"?: {
          BlockData_PageSeoSettings_Fragment: BlockData_PageSeoSettings_Fragment;
          ElementData_PageSeoSettings_Fragment: ElementData_PageSeoSettings_Fragment;
          PageSeoSettingsDataFragment: PageSeoSettingsDataFragment;
        };
      })
    | ({ __typename?: "ParagraphElement" } & {
        " $fragmentRefs"?: {
          BlockData_ParagraphElement_Fragment: BlockData_ParagraphElement_Fragment;
          ElementData_ParagraphElement_Fragment: ElementData_ParagraphElement_Fragment;
          ParagraphElementDataFragment: ParagraphElementDataFragment;
        };
      })
    | ({ __typename?: "ProductCardElement" } & {
        " $fragmentRefs"?: {
          BlockData_ProductCardElement_Fragment: BlockData_ProductCardElement_Fragment;
          ElementData_ProductCardElement_Fragment: ElementData_ProductCardElement_Fragment;
          ProductCardElementDataFragment: ProductCardElementDataFragment;
        };
      })
    | ({ __typename?: "ProductCardListElement" } & {
        " $fragmentRefs"?: {
          BlockData_ProductCardListElement_Fragment: BlockData_ProductCardListElement_Fragment;
          ElementData_ProductCardListElement_Fragment: ElementData_ProductCardListElement_Fragment;
          ProductCardListElementDataFragment: ProductCardListElementDataFragment;
        };
      })
    | ({ __typename?: "ProductCardListSection" } & {
        " $fragmentRefs"?: {
          BlockData_ProductCardListSection_Fragment: BlockData_ProductCardListSection_Fragment;
          ElementData_ProductCardListSection_Fragment: ElementData_ProductCardListSection_Fragment;
        };
      })
    | ({ __typename?: "ProductCarouselElement" } & {
        " $fragmentRefs"?: {
          BlockData_ProductCarouselElement_Fragment: BlockData_ProductCarouselElement_Fragment;
          ElementData_ProductCarouselElement_Fragment: ElementData_ProductCarouselElement_Fragment;
          ProductCarouselElementDataFragment: ProductCarouselElementDataFragment;
        };
      })
    | ({ __typename?: "ProductCarouselSection" } & {
        " $fragmentRefs"?: {
          BlockData_ProductCarouselSection_Fragment: BlockData_ProductCarouselSection_Fragment;
          ElementData_ProductCarouselSection_Fragment: ElementData_ProductCarouselSection_Fragment;
        };
      })
    | ({ __typename?: "ProductList" } & {
        " $fragmentRefs"?: {
          BlockData_ProductList_Fragment: BlockData_ProductList_Fragment;
          ElementData_ProductList_Fragment: ElementData_ProductList_Fragment;
        };
      })
    | ({ __typename?: "ProductVisibleElements" } & {
        " $fragmentRefs"?: {
          BlockData_ProductVisibleElements_Fragment: BlockData_ProductVisibleElements_Fragment;
          ElementData_ProductVisibleElements_Fragment: ElementData_ProductVisibleElements_Fragment;
        };
      })
    | ({ __typename?: "SocialMediaBlock" } & {
        " $fragmentRefs"?: {
          BlockData_SocialMediaBlock_Fragment: BlockData_SocialMediaBlock_Fragment;
          ElementData_SocialMediaBlock_Fragment: ElementData_SocialMediaBlock_Fragment;
          SocialMediaBlockDataFragment: SocialMediaBlockDataFragment;
        };
      })
    | ({ __typename?: "SocialMediaBlocks" } & {
        " $fragmentRefs"?: {
          BlockData_SocialMediaBlocks_Fragment: BlockData_SocialMediaBlocks_Fragment;
          ElementData_SocialMediaBlocks_Fragment: ElementData_SocialMediaBlocks_Fragment;
          SocialMediaBlocksDataFragment: SocialMediaBlocksDataFragment;
        };
      })
    | ({ __typename?: "TopHeaderContainer" } & {
        " $fragmentRefs"?: {
          BlockData_TopHeaderContainer_Fragment: BlockData_TopHeaderContainer_Fragment;
          ElementData_TopHeaderContainer_Fragment: ElementData_TopHeaderContainer_Fragment;
          TopHeaderContainerDataFragment: TopHeaderContainerDataFragment;
        };
      })
    | ({ __typename?: "VideoElement" } & {
        " $fragmentRefs"?: {
          BlockData_VideoElement_Fragment: BlockData_VideoElement_Fragment;
          ElementData_VideoElement_Fragment: ElementData_VideoElement_Fragment;
          VideoElementDataFragment: VideoElementDataFragment;
        };
      })
    | ({ __typename?: "WebFooterConfigrationBlock" } & {
        " $fragmentRefs"?: {
          BlockData_WebFooterConfigrationBlock_Fragment: BlockData_WebFooterConfigrationBlock_Fragment;
          ElementData_WebFooterConfigrationBlock_Fragment: ElementData_WebFooterConfigrationBlock_Fragment;
          WebFooterConfigrationBlockDataFragment: WebFooterConfigrationBlockDataFragment;
        };
      })
    | ({ __typename?: "WebHeaderConfigrationBlock" } & {
        " $fragmentRefs"?: {
          BlockData_WebHeaderConfigrationBlock_Fragment: BlockData_WebHeaderConfigrationBlock_Fragment;
          ElementData_WebHeaderConfigrationBlock_Fragment: ElementData_WebHeaderConfigrationBlock_Fragment;
          WebHeaderConfigrationBlockDataFragment: WebHeaderConfigrationBlockDataFragment;
        };
      })
    | ({ __typename?: "_Component" } & {
        " $fragmentRefs"?: {
          BlockData__Component_Fragment: BlockData__Component_Fragment;
          ElementData__Component_Fragment: ElementData__Component_Fragment;
        };
      })
    | ({ __typename?: "_Section" } & {
        " $fragmentRefs"?: {
          BlockData__Section_Fragment: BlockData__Section_Fragment;
          ElementData__Section_Fragment: ElementData__Section_Fragment;
        };
      })
    | ({ __typename?: "test" } & {
        " $fragmentRefs"?: {
          BlockData_test_Fragment: BlockData_test_Fragment;
          ElementData_test_Fragment: ElementData_test_Fragment;
        };
      })
    | null;
} & { " $fragmentName"?: "CompositionComponentNodeDataFragment" };

export type LinkItemDataFragment = {
  __typename?: "Link";
  title?: string | null;
  text?: string | null;
  target?: string | null;
  url?:
    | ({ __typename?: "ContentUrl" } & {
        " $fragmentRefs"?: { LinkDataFragment: LinkDataFragment };
      })
    | null;
} & { " $fragmentName"?: "LinkItemDataFragment" };

export type getContentByIdQueryVariables = Exact<{
  key: Scalars["String"]["input"];
  version?: InputMaybe<Scalars["String"]["input"]>;
  locale?: InputMaybe<Array<Locales> | Locales>;
  path?: InputMaybe<Scalars["String"]["input"]>;
  domain?: InputMaybe<Scalars["String"]["input"]>;
  changeset?: InputMaybe<Scalars["String"]["input"]>;
}>;

export type getContentByIdQuery = {
  __typename?: "Query";
  content?: {
    __typename?: "_ContentOutput";
    total?: number | null;
    items?:
      | ({ __typename?: "BannerItemElement" } & {
          " $fragmentRefs"?: {
            IContentData_BannerItemElement_Fragment: IContentData_BannerItemElement_Fragment;
            BlockData_BannerItemElement_Fragment: BlockData_BannerItemElement_Fragment;
            PageData_BannerItemElement_Fragment: PageData_BannerItemElement_Fragment;
            BannerItemElementDataFragment: BannerItemElementDataFragment;
          };
        })
      | ({ __typename?: "BlankExperience" } & {
          " $fragmentRefs"?: {
            IContentData_BlankExperience_Fragment: IContentData_BlankExperience_Fragment;
            PageData_BlankExperience_Fragment: PageData_BlankExperience_Fragment;
            BlankExperienceDataFragment: BlankExperienceDataFragment;
          };
        })
      | ({ __typename?: "BlankSection" } & {
          " $fragmentRefs"?: {
            IContentData_BlankSection_Fragment: IContentData_BlankSection_Fragment;
            BlockData_BlankSection_Fragment: BlockData_BlankSection_Fragment;
            PageData_BlankSection_Fragment: PageData_BlankSection_Fragment;
          };
        })
      | ({ __typename?: "ButtonElement" } & {
          " $fragmentRefs"?: {
            IContentData_ButtonElement_Fragment: IContentData_ButtonElement_Fragment;
            BlockData_ButtonElement_Fragment: BlockData_ButtonElement_Fragment;
            PageData_ButtonElement_Fragment: PageData_ButtonElement_Fragment;
            ButtonElementDataFragment: ButtonElementDataFragment;
          };
        })
      | ({ __typename?: "CTAElement" } & {
          " $fragmentRefs"?: {
            IContentData_CTAElement_Fragment: IContentData_CTAElement_Fragment;
            BlockData_CTAElement_Fragment: BlockData_CTAElement_Fragment;
            PageData_CTAElement_Fragment: PageData_CTAElement_Fragment;
          };
        })
      | ({ __typename?: "Company" } & {
          " $fragmentRefs"?: {
            IContentData_Company_Fragment: IContentData_Company_Fragment;
            BlockData_Company_Fragment: BlockData_Company_Fragment;
            PageData_Company_Fragment: PageData_Company_Fragment;
            CompanyDataFragment: CompanyDataFragment;
          };
        })
      | ({ __typename?: "ContainerElement" } & {
          " $fragmentRefs"?: {
            IContentData_ContainerElement_Fragment: IContentData_ContainerElement_Fragment;
            BlockData_ContainerElement_Fragment: BlockData_ContainerElement_Fragment;
            PageData_ContainerElement_Fragment: PageData_ContainerElement_Fragment;
            ContainerElementDataFragment: ContainerElementDataFragment;
          };
        })
      | ({ __typename?: "ContentTextElement" } & {
          " $fragmentRefs"?: {
            IContentData_ContentTextElement_Fragment: IContentData_ContentTextElement_Fragment;
            BlockData_ContentTextElement_Fragment: BlockData_ContentTextElement_Fragment;
            PageData_ContentTextElement_Fragment: PageData_ContentTextElement_Fragment;
            ContentTextElementDataFragment: ContentTextElementDataFragment;
          };
        })
      | ({ __typename?: "DefaultVideo" } & {
          " $fragmentRefs"?: {
            IContentData_DefaultVideo_Fragment: IContentData_DefaultVideo_Fragment;
            PageData_DefaultVideo_Fragment: PageData_DefaultVideo_Fragment;
          };
        })
      | ({ __typename?: "Dictionary" } & {
          " $fragmentRefs"?: {
            IContentData_Dictionary_Fragment: IContentData_Dictionary_Fragment;
            BlockData_Dictionary_Fragment: BlockData_Dictionary_Fragment;
            PageData_Dictionary_Fragment: PageData_Dictionary_Fragment;
            DictionaryDataFragment: DictionaryDataFragment;
          };
        })
      | ({ __typename?: "DictionaryItem" } & {
          " $fragmentRefs"?: {
            IContentData_DictionaryItem_Fragment: IContentData_DictionaryItem_Fragment;
            BlockData_DictionaryItem_Fragment: BlockData_DictionaryItem_Fragment;
            PageData_DictionaryItem_Fragment: PageData_DictionaryItem_Fragment;
            DictionaryItemDataFragment: DictionaryItemDataFragment;
          };
        })
      | ({ __typename?: "ExpandableText" } & {
          " $fragmentRefs"?: {
            IContentData_ExpandableText_Fragment: IContentData_ExpandableText_Fragment;
            BlockData_ExpandableText_Fragment: BlockData_ExpandableText_Fragment;
            PageData_ExpandableText_Fragment: PageData_ExpandableText_Fragment;
            ExpandableTextDataFragment: ExpandableTextDataFragment;
          };
        })
      | ({ __typename?: "FAQsSection" } & {
          " $fragmentRefs"?: {
            IContentData_FAQsSection_Fragment: IContentData_FAQsSection_Fragment;
            BlockData_FAQsSection_Fragment: BlockData_FAQsSection_Fragment;
            PageData_FAQsSection_Fragment: PageData_FAQsSection_Fragment;
            FAQsSectionDataFragment: FAQsSectionDataFragment;
          };
        })
      | ({ __typename?: "GenericMedia" } & {
          " $fragmentRefs"?: {
            IContentData_GenericMedia_Fragment: IContentData_GenericMedia_Fragment;
            PageData_GenericMedia_Fragment: PageData_GenericMedia_Fragment;
          };
        })
      | ({ __typename?: "HeadingElement" } & {
          " $fragmentRefs"?: {
            IContentData_HeadingElement_Fragment: IContentData_HeadingElement_Fragment;
            BlockData_HeadingElement_Fragment: BlockData_HeadingElement_Fragment;
            PageData_HeadingElement_Fragment: PageData_HeadingElement_Fragment;
            HeadingElementDataFragment: HeadingElementDataFragment;
          };
        })
      | ({ __typename?: "Image" } & {
          " $fragmentRefs"?: {
            IContentData_Image_Fragment: IContentData_Image_Fragment;
            PageData_Image_Fragment: PageData_Image_Fragment;
          };
        })
      | ({ __typename?: "ImageBackground" } & {
          " $fragmentRefs"?: {
            IContentData_ImageBackground_Fragment: IContentData_ImageBackground_Fragment;
            BlockData_ImageBackground_Fragment: BlockData_ImageBackground_Fragment;
            PageData_ImageBackground_Fragment: PageData_ImageBackground_Fragment;
            ImageBackgroundDataFragment: ImageBackgroundDataFragment;
          };
        })
      | ({ __typename?: "ImageItemElement" } & {
          " $fragmentRefs"?: {
            IContentData_ImageItemElement_Fragment: IContentData_ImageItemElement_Fragment;
            BlockData_ImageItemElement_Fragment: BlockData_ImageItemElement_Fragment;
            PageData_ImageItemElement_Fragment: PageData_ImageItemElement_Fragment;
            ImageItemElementDataFragment: ImageItemElementDataFragment;
          };
        })
      | ({ __typename?: "ImageMedia" } & {
          " $fragmentRefs"?: {
            IContentData_ImageMedia_Fragment: IContentData_ImageMedia_Fragment;
            PageData_ImageMedia_Fragment: PageData_ImageMedia_Fragment;
          };
        })
      | ({ __typename?: "ImageTextItemElement" } & {
          " $fragmentRefs"?: {
            IContentData_ImageTextItemElement_Fragment: IContentData_ImageTextItemElement_Fragment;
            BlockData_ImageTextItemElement_Fragment: BlockData_ImageTextItemElement_Fragment;
            PageData_ImageTextItemElement_Fragment: PageData_ImageTextItemElement_Fragment;
            ImageTextItemElementDataFragment: ImageTextItemElementDataFragment;
          };
        })
      | ({ __typename?: "LandingPage" } & {
          " $fragmentRefs"?: {
            IContentData_LandingPage_Fragment: IContentData_LandingPage_Fragment;
            PageData_LandingPage_Fragment: PageData_LandingPage_Fragment;
          };
        })
      | ({ __typename?: "MegaMenuGroupBlock" } & {
          " $fragmentRefs"?: {
            IContentData_MegaMenuGroupBlock_Fragment: IContentData_MegaMenuGroupBlock_Fragment;
            BlockData_MegaMenuGroupBlock_Fragment: BlockData_MegaMenuGroupBlock_Fragment;
            PageData_MegaMenuGroupBlock_Fragment: PageData_MegaMenuGroupBlock_Fragment;
            MegaMenuGroupBlockDataFragment: MegaMenuGroupBlockDataFragment;
          };
        })
      | ({ __typename?: "NavigationMenuBlock" } & {
          " $fragmentRefs"?: {
            IContentData_NavigationMenuBlock_Fragment: IContentData_NavigationMenuBlock_Fragment;
            BlockData_NavigationMenuBlock_Fragment: BlockData_NavigationMenuBlock_Fragment;
            PageData_NavigationMenuBlock_Fragment: PageData_NavigationMenuBlock_Fragment;
            NavigationMenuBlockDataFragment: NavigationMenuBlockDataFragment;
            NavigationMenuBlockFieldsFragment: NavigationMenuBlockFieldsFragment;
          };
        })
      | ({ __typename?: "OfficeLocation" } & {
          " $fragmentRefs"?: {
            IContentData_OfficeLocation_Fragment: IContentData_OfficeLocation_Fragment;
            BlockData_OfficeLocation_Fragment: BlockData_OfficeLocation_Fragment;
            PageData_OfficeLocation_Fragment: PageData_OfficeLocation_Fragment;
            OfficeLocationDataFragment: OfficeLocationDataFragment;
          };
        })
      | ({ __typename?: "PDPCarouselElement" } & {
          " $fragmentRefs"?: {
            IContentData_PDPCarouselElement_Fragment: IContentData_PDPCarouselElement_Fragment;
            BlockData_PDPCarouselElement_Fragment: BlockData_PDPCarouselElement_Fragment;
            PageData_PDPCarouselElement_Fragment: PageData_PDPCarouselElement_Fragment;
          };
        })
      | ({ __typename?: "PDPGalleryElement" } & {
          " $fragmentRefs"?: {
            IContentData_PDPGalleryElement_Fragment: IContentData_PDPGalleryElement_Fragment;
            BlockData_PDPGalleryElement_Fragment: BlockData_PDPGalleryElement_Fragment;
            PageData_PDPGalleryElement_Fragment: PageData_PDPGalleryElement_Fragment;
          };
        })
      | ({ __typename?: "PDPHeroElement" } & {
          " $fragmentRefs"?: {
            IContentData_PDPHeroElement_Fragment: IContentData_PDPHeroElement_Fragment;
            BlockData_PDPHeroElement_Fragment: BlockData_PDPHeroElement_Fragment;
            PageData_PDPHeroElement_Fragment: PageData_PDPHeroElement_Fragment;
          };
        })
      | ({ __typename?: "PDPSpecificationsElement" } & {
          " $fragmentRefs"?: {
            IContentData_PDPSpecificationsElement_Fragment: IContentData_PDPSpecificationsElement_Fragment;
            BlockData_PDPSpecificationsElement_Fragment: BlockData_PDPSpecificationsElement_Fragment;
            PageData_PDPSpecificationsElement_Fragment: PageData_PDPSpecificationsElement_Fragment;
            PDPSpecificationsElementDataFragment: PDPSpecificationsElementDataFragment;
          };
        })
      | ({ __typename?: "PageSeoSettings" } & {
          " $fragmentRefs"?: {
            IContentData_PageSeoSettings_Fragment: IContentData_PageSeoSettings_Fragment;
            BlockData_PageSeoSettings_Fragment: BlockData_PageSeoSettings_Fragment;
            PageData_PageSeoSettings_Fragment: PageData_PageSeoSettings_Fragment;
            PageSeoSettingsDataFragment: PageSeoSettingsDataFragment;
          };
        })
      | ({ __typename?: "ParagraphElement" } & {
          " $fragmentRefs"?: {
            IContentData_ParagraphElement_Fragment: IContentData_ParagraphElement_Fragment;
            BlockData_ParagraphElement_Fragment: BlockData_ParagraphElement_Fragment;
            PageData_ParagraphElement_Fragment: PageData_ParagraphElement_Fragment;
            ParagraphElementDataFragment: ParagraphElementDataFragment;
          };
        })
      | ({ __typename?: "ProductCardElement" } & {
          " $fragmentRefs"?: {
            IContentData_ProductCardElement_Fragment: IContentData_ProductCardElement_Fragment;
            BlockData_ProductCardElement_Fragment: BlockData_ProductCardElement_Fragment;
            PageData_ProductCardElement_Fragment: PageData_ProductCardElement_Fragment;
            ProductCardElementDataFragment: ProductCardElementDataFragment;
          };
        })
      | ({ __typename?: "ProductCardListElement" } & {
          " $fragmentRefs"?: {
            IContentData_ProductCardListElement_Fragment: IContentData_ProductCardListElement_Fragment;
            BlockData_ProductCardListElement_Fragment: BlockData_ProductCardListElement_Fragment;
            PageData_ProductCardListElement_Fragment: PageData_ProductCardListElement_Fragment;
            ProductCardListElementDataFragment: ProductCardListElementDataFragment;
          };
        })
      | ({ __typename?: "ProductCardListSection" } & {
          " $fragmentRefs"?: {
            IContentData_ProductCardListSection_Fragment: IContentData_ProductCardListSection_Fragment;
            BlockData_ProductCardListSection_Fragment: BlockData_ProductCardListSection_Fragment;
            PageData_ProductCardListSection_Fragment: PageData_ProductCardListSection_Fragment;
          };
        })
      | ({ __typename?: "ProductCarouselElement" } & {
          " $fragmentRefs"?: {
            IContentData_ProductCarouselElement_Fragment: IContentData_ProductCarouselElement_Fragment;
            BlockData_ProductCarouselElement_Fragment: BlockData_ProductCarouselElement_Fragment;
            PageData_ProductCarouselElement_Fragment: PageData_ProductCarouselElement_Fragment;
            ProductCarouselElementDataFragment: ProductCarouselElementDataFragment;
          };
        })
      | ({ __typename?: "ProductCarouselSection" } & {
          " $fragmentRefs"?: {
            IContentData_ProductCarouselSection_Fragment: IContentData_ProductCarouselSection_Fragment;
            BlockData_ProductCarouselSection_Fragment: BlockData_ProductCarouselSection_Fragment;
            PageData_ProductCarouselSection_Fragment: PageData_ProductCarouselSection_Fragment;
          };
        })
      | ({ __typename?: "ProductDetail" } & {
          " $fragmentRefs"?: {
            IContentData_ProductDetail_Fragment: IContentData_ProductDetail_Fragment;
            PageData_ProductDetail_Fragment: PageData_ProductDetail_Fragment;
          };
        })
      | ({ __typename?: "ProductDetailExperience" } & {
          " $fragmentRefs"?: {
            IContentData_ProductDetailExperience_Fragment: IContentData_ProductDetailExperience_Fragment;
            PageData_ProductDetailExperience_Fragment: PageData_ProductDetailExperience_Fragment;
            ProductDetailExperienceDataFragment: ProductDetailExperienceDataFragment;
          };
        })
      | ({ __typename?: "ProductList" } & {
          " $fragmentRefs"?: {
            IContentData_ProductList_Fragment: IContentData_ProductList_Fragment;
            BlockData_ProductList_Fragment: BlockData_ProductList_Fragment;
            PageData_ProductList_Fragment: PageData_ProductList_Fragment;
          };
        })
      | ({ __typename?: "ProductListingEPage" } & {
          " $fragmentRefs"?: {
            IContentData_ProductListingEPage_Fragment: IContentData_ProductListingEPage_Fragment;
            PageData_ProductListingEPage_Fragment: PageData_ProductListingEPage_Fragment;
            ProductListingEPageDataFragment: ProductListingEPageDataFragment;
          };
        })
      | ({ __typename?: "ProductVisibleElements" } & {
          " $fragmentRefs"?: {
            IContentData_ProductVisibleElements_Fragment: IContentData_ProductVisibleElements_Fragment;
            BlockData_ProductVisibleElements_Fragment: BlockData_ProductVisibleElements_Fragment;
            PageData_ProductVisibleElements_Fragment: PageData_ProductVisibleElements_Fragment;
          };
        })
      | ({ __typename?: "Section" } & {
          " $fragmentRefs"?: {
            IContentData_Section_Fragment: IContentData_Section_Fragment;
            PageData_Section_Fragment: PageData_Section_Fragment;
            SectionDataFragment: SectionDataFragment;
          };
        })
      | ({ __typename?: "SocialMediaBlock" } & {
          " $fragmentRefs"?: {
            IContentData_SocialMediaBlock_Fragment: IContentData_SocialMediaBlock_Fragment;
            BlockData_SocialMediaBlock_Fragment: BlockData_SocialMediaBlock_Fragment;
            PageData_SocialMediaBlock_Fragment: PageData_SocialMediaBlock_Fragment;
            SocialMediaBlockDataFragment: SocialMediaBlockDataFragment;
          };
        })
      | ({ __typename?: "SocialMediaBlocks" } & {
          " $fragmentRefs"?: {
            IContentData_SocialMediaBlocks_Fragment: IContentData_SocialMediaBlocks_Fragment;
            BlockData_SocialMediaBlocks_Fragment: BlockData_SocialMediaBlocks_Fragment;
            PageData_SocialMediaBlocks_Fragment: PageData_SocialMediaBlocks_Fragment;
            SocialMediaBlocksDataFragment: SocialMediaBlocksDataFragment;
          };
        })
      | ({ __typename?: "SysContentFolder" } & {
          " $fragmentRefs"?: {
            IContentData_SysContentFolder_Fragment: IContentData_SysContentFolder_Fragment;
            PageData_SysContentFolder_Fragment: PageData_SysContentFolder_Fragment;
          };
        })
      | ({ __typename?: "TopHeaderContainer" } & {
          " $fragmentRefs"?: {
            IContentData_TopHeaderContainer_Fragment: IContentData_TopHeaderContainer_Fragment;
            BlockData_TopHeaderContainer_Fragment: BlockData_TopHeaderContainer_Fragment;
            PageData_TopHeaderContainer_Fragment: PageData_TopHeaderContainer_Fragment;
            TopHeaderContainerDataFragment: TopHeaderContainerDataFragment;
          };
        })
      | ({ __typename?: "VideoElement" } & {
          " $fragmentRefs"?: {
            IContentData_VideoElement_Fragment: IContentData_VideoElement_Fragment;
            BlockData_VideoElement_Fragment: BlockData_VideoElement_Fragment;
            PageData_VideoElement_Fragment: PageData_VideoElement_Fragment;
            VideoElementDataFragment: VideoElementDataFragment;
          };
        })
      | ({ __typename?: "VideoMedia" } & {
          " $fragmentRefs"?: {
            IContentData_VideoMedia_Fragment: IContentData_VideoMedia_Fragment;
            PageData_VideoMedia_Fragment: PageData_VideoMedia_Fragment;
          };
        })
      | ({ __typename?: "WebFooterConfigrationBlock" } & {
          " $fragmentRefs"?: {
            IContentData_WebFooterConfigrationBlock_Fragment: IContentData_WebFooterConfigrationBlock_Fragment;
            BlockData_WebFooterConfigrationBlock_Fragment: BlockData_WebFooterConfigrationBlock_Fragment;
            PageData_WebFooterConfigrationBlock_Fragment: PageData_WebFooterConfigrationBlock_Fragment;
            WebFooterConfigrationBlockDataFragment: WebFooterConfigrationBlockDataFragment;
          };
        })
      | ({ __typename?: "WebHeaderConfigrationBlock" } & {
          " $fragmentRefs"?: {
            IContentData_WebHeaderConfigrationBlock_Fragment: IContentData_WebHeaderConfigrationBlock_Fragment;
            BlockData_WebHeaderConfigrationBlock_Fragment: BlockData_WebHeaderConfigrationBlock_Fragment;
            PageData_WebHeaderConfigrationBlock_Fragment: PageData_WebHeaderConfigrationBlock_Fragment;
            WebHeaderConfigrationBlockDataFragment: WebHeaderConfigrationBlockDataFragment;
          };
        })
      | ({ __typename?: "_Component" } & {
          " $fragmentRefs"?: {
            IContentData__Component_Fragment: IContentData__Component_Fragment;
            BlockData__Component_Fragment: BlockData__Component_Fragment;
            PageData__Component_Fragment: PageData__Component_Fragment;
          };
        })
      | ({ __typename?: "_Content" } & {
          " $fragmentRefs"?: {
            IContentData__Content_Fragment: IContentData__Content_Fragment;
            PageData__Content_Fragment: PageData__Content_Fragment;
          };
        })
      | ({ __typename?: "_Experience" } & {
          " $fragmentRefs"?: {
            IContentData__Experience_Fragment: IContentData__Experience_Fragment;
            PageData__Experience_Fragment: PageData__Experience_Fragment;
          };
        })
      | ({ __typename?: "_Folder" } & {
          " $fragmentRefs"?: {
            IContentData__Folder_Fragment: IContentData__Folder_Fragment;
            PageData__Folder_Fragment: PageData__Folder_Fragment;
          };
        })
      | ({ __typename?: "_Image" } & {
          " $fragmentRefs"?: {
            IContentData__Image_Fragment: IContentData__Image_Fragment;
            PageData__Image_Fragment: PageData__Image_Fragment;
          };
        })
      | ({ __typename?: "_Media" } & {
          " $fragmentRefs"?: {
            IContentData__Media_Fragment: IContentData__Media_Fragment;
            PageData__Media_Fragment: PageData__Media_Fragment;
          };
        })
      | ({ __typename?: "_Page" } & {
          " $fragmentRefs"?: {
            IContentData__Page_Fragment: IContentData__Page_Fragment;
            PageData__Page_Fragment: PageData__Page_Fragment;
          };
        })
      | ({ __typename?: "_Section" } & {
          " $fragmentRefs"?: {
            IContentData__Section_Fragment: IContentData__Section_Fragment;
            BlockData__Section_Fragment: BlockData__Section_Fragment;
            PageData__Section_Fragment: PageData__Section_Fragment;
          };
        })
      | ({ __typename?: "_Video" } & {
          " $fragmentRefs"?: {
            IContentData__Video_Fragment: IContentData__Video_Fragment;
            PageData__Video_Fragment: PageData__Video_Fragment;
          };
        })
      | ({ __typename?: "test" } & {
          " $fragmentRefs"?: {
            IContentData_test_Fragment: IContentData_test_Fragment;
            BlockData_test_Fragment: BlockData_test_Fragment;
            PageData_test_Fragment: PageData_test_Fragment;
          };
        })
      | null;
  } | null;
};

export type getContentByPathQueryVariables = Exact<{
  path: Array<Scalars["String"]["input"]> | Scalars["String"]["input"];
  locale?: InputMaybe<Array<Locales> | Locales>;
  siteId?: InputMaybe<Scalars["String"]["input"]>;
  changeset?: InputMaybe<Scalars["String"]["input"]>;
}>;

export type getContentByPathQuery = {
  __typename?: "Query";
  content?: {
    __typename?: "_ContentOutput";
    total?: number | null;
    items?:
      | ({ __typename?: "BannerItemElement" } & {
          " $fragmentRefs"?: {
            IContentData_BannerItemElement_Fragment: IContentData_BannerItemElement_Fragment;
            PageData_BannerItemElement_Fragment: PageData_BannerItemElement_Fragment;
          };
        })
      | ({ __typename?: "BlankExperience" } & {
          " $fragmentRefs"?: {
            IContentData_BlankExperience_Fragment: IContentData_BlankExperience_Fragment;
            PageData_BlankExperience_Fragment: PageData_BlankExperience_Fragment;
            BlankExperienceDataFragment: BlankExperienceDataFragment;
          };
        })
      | ({ __typename?: "BlankSection" } & {
          " $fragmentRefs"?: {
            IContentData_BlankSection_Fragment: IContentData_BlankSection_Fragment;
            PageData_BlankSection_Fragment: PageData_BlankSection_Fragment;
          };
        })
      | ({ __typename?: "ButtonElement" } & {
          " $fragmentRefs"?: {
            IContentData_ButtonElement_Fragment: IContentData_ButtonElement_Fragment;
            PageData_ButtonElement_Fragment: PageData_ButtonElement_Fragment;
          };
        })
      | ({ __typename?: "CTAElement" } & {
          " $fragmentRefs"?: {
            IContentData_CTAElement_Fragment: IContentData_CTAElement_Fragment;
            PageData_CTAElement_Fragment: PageData_CTAElement_Fragment;
          };
        })
      | ({ __typename?: "Company" } & {
          " $fragmentRefs"?: {
            IContentData_Company_Fragment: IContentData_Company_Fragment;
            PageData_Company_Fragment: PageData_Company_Fragment;
          };
        })
      | ({ __typename?: "ContainerElement" } & {
          " $fragmentRefs"?: {
            IContentData_ContainerElement_Fragment: IContentData_ContainerElement_Fragment;
            PageData_ContainerElement_Fragment: PageData_ContainerElement_Fragment;
          };
        })
      | ({ __typename?: "ContentTextElement" } & {
          " $fragmentRefs"?: {
            IContentData_ContentTextElement_Fragment: IContentData_ContentTextElement_Fragment;
            PageData_ContentTextElement_Fragment: PageData_ContentTextElement_Fragment;
          };
        })
      | ({ __typename?: "DefaultVideo" } & {
          " $fragmentRefs"?: {
            IContentData_DefaultVideo_Fragment: IContentData_DefaultVideo_Fragment;
            PageData_DefaultVideo_Fragment: PageData_DefaultVideo_Fragment;
          };
        })
      | ({ __typename?: "Dictionary" } & {
          " $fragmentRefs"?: {
            IContentData_Dictionary_Fragment: IContentData_Dictionary_Fragment;
            PageData_Dictionary_Fragment: PageData_Dictionary_Fragment;
          };
        })
      | ({ __typename?: "DictionaryItem" } & {
          " $fragmentRefs"?: {
            IContentData_DictionaryItem_Fragment: IContentData_DictionaryItem_Fragment;
            PageData_DictionaryItem_Fragment: PageData_DictionaryItem_Fragment;
          };
        })
      | ({ __typename?: "ExpandableText" } & {
          " $fragmentRefs"?: {
            IContentData_ExpandableText_Fragment: IContentData_ExpandableText_Fragment;
            PageData_ExpandableText_Fragment: PageData_ExpandableText_Fragment;
          };
        })
      | ({ __typename?: "FAQsSection" } & {
          " $fragmentRefs"?: {
            IContentData_FAQsSection_Fragment: IContentData_FAQsSection_Fragment;
            PageData_FAQsSection_Fragment: PageData_FAQsSection_Fragment;
          };
        })
      | ({ __typename?: "GenericMedia" } & {
          " $fragmentRefs"?: {
            IContentData_GenericMedia_Fragment: IContentData_GenericMedia_Fragment;
            PageData_GenericMedia_Fragment: PageData_GenericMedia_Fragment;
          };
        })
      | ({ __typename?: "HeadingElement" } & {
          " $fragmentRefs"?: {
            IContentData_HeadingElement_Fragment: IContentData_HeadingElement_Fragment;
            PageData_HeadingElement_Fragment: PageData_HeadingElement_Fragment;
          };
        })
      | ({ __typename?: "Image" } & {
          " $fragmentRefs"?: {
            IContentData_Image_Fragment: IContentData_Image_Fragment;
            PageData_Image_Fragment: PageData_Image_Fragment;
          };
        })
      | ({ __typename?: "ImageBackground" } & {
          " $fragmentRefs"?: {
            IContentData_ImageBackground_Fragment: IContentData_ImageBackground_Fragment;
            PageData_ImageBackground_Fragment: PageData_ImageBackground_Fragment;
          };
        })
      | ({ __typename?: "ImageItemElement" } & {
          " $fragmentRefs"?: {
            IContentData_ImageItemElement_Fragment: IContentData_ImageItemElement_Fragment;
            PageData_ImageItemElement_Fragment: PageData_ImageItemElement_Fragment;
          };
        })
      | ({ __typename?: "ImageMedia" } & {
          " $fragmentRefs"?: {
            IContentData_ImageMedia_Fragment: IContentData_ImageMedia_Fragment;
            PageData_ImageMedia_Fragment: PageData_ImageMedia_Fragment;
          };
        })
      | ({ __typename?: "ImageTextItemElement" } & {
          " $fragmentRefs"?: {
            IContentData_ImageTextItemElement_Fragment: IContentData_ImageTextItemElement_Fragment;
            PageData_ImageTextItemElement_Fragment: PageData_ImageTextItemElement_Fragment;
          };
        })
      | ({ __typename?: "LandingPage" } & {
          " $fragmentRefs"?: {
            IContentData_LandingPage_Fragment: IContentData_LandingPage_Fragment;
            PageData_LandingPage_Fragment: PageData_LandingPage_Fragment;
          };
        })
      | ({ __typename?: "MegaMenuGroupBlock" } & {
          " $fragmentRefs"?: {
            IContentData_MegaMenuGroupBlock_Fragment: IContentData_MegaMenuGroupBlock_Fragment;
            PageData_MegaMenuGroupBlock_Fragment: PageData_MegaMenuGroupBlock_Fragment;
          };
        })
      | ({ __typename?: "NavigationMenuBlock" } & {
          " $fragmentRefs"?: {
            IContentData_NavigationMenuBlock_Fragment: IContentData_NavigationMenuBlock_Fragment;
            PageData_NavigationMenuBlock_Fragment: PageData_NavigationMenuBlock_Fragment;
          };
        })
      | ({ __typename?: "OfficeLocation" } & {
          " $fragmentRefs"?: {
            IContentData_OfficeLocation_Fragment: IContentData_OfficeLocation_Fragment;
            PageData_OfficeLocation_Fragment: PageData_OfficeLocation_Fragment;
          };
        })
      | ({ __typename?: "PDPCarouselElement" } & {
          " $fragmentRefs"?: {
            IContentData_PDPCarouselElement_Fragment: IContentData_PDPCarouselElement_Fragment;
            PageData_PDPCarouselElement_Fragment: PageData_PDPCarouselElement_Fragment;
          };
        })
      | ({ __typename?: "PDPGalleryElement" } & {
          " $fragmentRefs"?: {
            IContentData_PDPGalleryElement_Fragment: IContentData_PDPGalleryElement_Fragment;
            PageData_PDPGalleryElement_Fragment: PageData_PDPGalleryElement_Fragment;
          };
        })
      | ({ __typename?: "PDPHeroElement" } & {
          " $fragmentRefs"?: {
            IContentData_PDPHeroElement_Fragment: IContentData_PDPHeroElement_Fragment;
            PageData_PDPHeroElement_Fragment: PageData_PDPHeroElement_Fragment;
          };
        })
      | ({ __typename?: "PDPSpecificationsElement" } & {
          " $fragmentRefs"?: {
            IContentData_PDPSpecificationsElement_Fragment: IContentData_PDPSpecificationsElement_Fragment;
            PageData_PDPSpecificationsElement_Fragment: PageData_PDPSpecificationsElement_Fragment;
          };
        })
      | ({ __typename?: "PageSeoSettings" } & {
          " $fragmentRefs"?: {
            IContentData_PageSeoSettings_Fragment: IContentData_PageSeoSettings_Fragment;
            PageData_PageSeoSettings_Fragment: PageData_PageSeoSettings_Fragment;
          };
        })
      | ({ __typename?: "ParagraphElement" } & {
          " $fragmentRefs"?: {
            IContentData_ParagraphElement_Fragment: IContentData_ParagraphElement_Fragment;
            PageData_ParagraphElement_Fragment: PageData_ParagraphElement_Fragment;
          };
        })
      | ({ __typename?: "ProductCardElement" } & {
          " $fragmentRefs"?: {
            IContentData_ProductCardElement_Fragment: IContentData_ProductCardElement_Fragment;
            PageData_ProductCardElement_Fragment: PageData_ProductCardElement_Fragment;
          };
        })
      | ({ __typename?: "ProductCardListElement" } & {
          " $fragmentRefs"?: {
            IContentData_ProductCardListElement_Fragment: IContentData_ProductCardListElement_Fragment;
            PageData_ProductCardListElement_Fragment: PageData_ProductCardListElement_Fragment;
          };
        })
      | ({ __typename?: "ProductCardListSection" } & {
          " $fragmentRefs"?: {
            IContentData_ProductCardListSection_Fragment: IContentData_ProductCardListSection_Fragment;
            PageData_ProductCardListSection_Fragment: PageData_ProductCardListSection_Fragment;
          };
        })
      | ({ __typename?: "ProductCarouselElement" } & {
          " $fragmentRefs"?: {
            IContentData_ProductCarouselElement_Fragment: IContentData_ProductCarouselElement_Fragment;
            PageData_ProductCarouselElement_Fragment: PageData_ProductCarouselElement_Fragment;
          };
        })
      | ({ __typename?: "ProductCarouselSection" } & {
          " $fragmentRefs"?: {
            IContentData_ProductCarouselSection_Fragment: IContentData_ProductCarouselSection_Fragment;
            PageData_ProductCarouselSection_Fragment: PageData_ProductCarouselSection_Fragment;
          };
        })
      | ({ __typename?: "ProductDetail" } & {
          " $fragmentRefs"?: {
            IContentData_ProductDetail_Fragment: IContentData_ProductDetail_Fragment;
            PageData_ProductDetail_Fragment: PageData_ProductDetail_Fragment;
          };
        })
      | ({ __typename?: "ProductDetailExperience" } & {
          " $fragmentRefs"?: {
            IContentData_ProductDetailExperience_Fragment: IContentData_ProductDetailExperience_Fragment;
            PageData_ProductDetailExperience_Fragment: PageData_ProductDetailExperience_Fragment;
            ProductDetailExperienceDataFragment: ProductDetailExperienceDataFragment;
          };
        })
      | ({ __typename?: "ProductList" } & {
          " $fragmentRefs"?: {
            IContentData_ProductList_Fragment: IContentData_ProductList_Fragment;
            PageData_ProductList_Fragment: PageData_ProductList_Fragment;
          };
        })
      | ({ __typename?: "ProductListingEPage" } & {
          " $fragmentRefs"?: {
            IContentData_ProductListingEPage_Fragment: IContentData_ProductListingEPage_Fragment;
            PageData_ProductListingEPage_Fragment: PageData_ProductListingEPage_Fragment;
            ProductListingEPageDataFragment: ProductListingEPageDataFragment;
          };
        })
      | ({ __typename?: "ProductVisibleElements" } & {
          " $fragmentRefs"?: {
            IContentData_ProductVisibleElements_Fragment: IContentData_ProductVisibleElements_Fragment;
            PageData_ProductVisibleElements_Fragment: PageData_ProductVisibleElements_Fragment;
          };
        })
      | ({ __typename?: "Section" } & {
          " $fragmentRefs"?: {
            IContentData_Section_Fragment: IContentData_Section_Fragment;
            PageData_Section_Fragment: PageData_Section_Fragment;
            SectionDataFragment: SectionDataFragment;
          };
        })
      | ({ __typename?: "SocialMediaBlock" } & {
          " $fragmentRefs"?: {
            IContentData_SocialMediaBlock_Fragment: IContentData_SocialMediaBlock_Fragment;
            PageData_SocialMediaBlock_Fragment: PageData_SocialMediaBlock_Fragment;
          };
        })
      | ({ __typename?: "SocialMediaBlocks" } & {
          " $fragmentRefs"?: {
            IContentData_SocialMediaBlocks_Fragment: IContentData_SocialMediaBlocks_Fragment;
            PageData_SocialMediaBlocks_Fragment: PageData_SocialMediaBlocks_Fragment;
          };
        })
      | ({ __typename?: "SysContentFolder" } & {
          " $fragmentRefs"?: {
            IContentData_SysContentFolder_Fragment: IContentData_SysContentFolder_Fragment;
            PageData_SysContentFolder_Fragment: PageData_SysContentFolder_Fragment;
          };
        })
      | ({ __typename?: "TopHeaderContainer" } & {
          " $fragmentRefs"?: {
            IContentData_TopHeaderContainer_Fragment: IContentData_TopHeaderContainer_Fragment;
            PageData_TopHeaderContainer_Fragment: PageData_TopHeaderContainer_Fragment;
          };
        })
      | ({ __typename?: "VideoElement" } & {
          " $fragmentRefs"?: {
            IContentData_VideoElement_Fragment: IContentData_VideoElement_Fragment;
            PageData_VideoElement_Fragment: PageData_VideoElement_Fragment;
          };
        })
      | ({ __typename?: "VideoMedia" } & {
          " $fragmentRefs"?: {
            IContentData_VideoMedia_Fragment: IContentData_VideoMedia_Fragment;
            PageData_VideoMedia_Fragment: PageData_VideoMedia_Fragment;
          };
        })
      | ({ __typename?: "WebFooterConfigrationBlock" } & {
          " $fragmentRefs"?: {
            IContentData_WebFooterConfigrationBlock_Fragment: IContentData_WebFooterConfigrationBlock_Fragment;
            PageData_WebFooterConfigrationBlock_Fragment: PageData_WebFooterConfigrationBlock_Fragment;
          };
        })
      | ({ __typename?: "WebHeaderConfigrationBlock" } & {
          " $fragmentRefs"?: {
            IContentData_WebHeaderConfigrationBlock_Fragment: IContentData_WebHeaderConfigrationBlock_Fragment;
            PageData_WebHeaderConfigrationBlock_Fragment: PageData_WebHeaderConfigrationBlock_Fragment;
          };
        })
      | ({ __typename?: "_Component" } & {
          " $fragmentRefs"?: {
            IContentData__Component_Fragment: IContentData__Component_Fragment;
            PageData__Component_Fragment: PageData__Component_Fragment;
          };
        })
      | ({ __typename?: "_Content" } & {
          " $fragmentRefs"?: {
            IContentData__Content_Fragment: IContentData__Content_Fragment;
            PageData__Content_Fragment: PageData__Content_Fragment;
          };
        })
      | ({ __typename?: "_Experience" } & {
          " $fragmentRefs"?: {
            IContentData__Experience_Fragment: IContentData__Experience_Fragment;
            PageData__Experience_Fragment: PageData__Experience_Fragment;
          };
        })
      | ({ __typename?: "_Folder" } & {
          " $fragmentRefs"?: {
            IContentData__Folder_Fragment: IContentData__Folder_Fragment;
            PageData__Folder_Fragment: PageData__Folder_Fragment;
          };
        })
      | ({ __typename?: "_Image" } & {
          " $fragmentRefs"?: {
            IContentData__Image_Fragment: IContentData__Image_Fragment;
            PageData__Image_Fragment: PageData__Image_Fragment;
          };
        })
      | ({ __typename?: "_Media" } & {
          " $fragmentRefs"?: {
            IContentData__Media_Fragment: IContentData__Media_Fragment;
            PageData__Media_Fragment: PageData__Media_Fragment;
          };
        })
      | ({ __typename?: "_Page" } & {
          " $fragmentRefs"?: {
            IContentData__Page_Fragment: IContentData__Page_Fragment;
            PageData__Page_Fragment: PageData__Page_Fragment;
          };
        })
      | ({ __typename?: "_Section" } & {
          " $fragmentRefs"?: {
            IContentData__Section_Fragment: IContentData__Section_Fragment;
            PageData__Section_Fragment: PageData__Section_Fragment;
          };
        })
      | ({ __typename?: "_Video" } & {
          " $fragmentRefs"?: {
            IContentData__Video_Fragment: IContentData__Video_Fragment;
            PageData__Video_Fragment: PageData__Video_Fragment;
          };
        })
      | ({ __typename?: "test" } & {
          " $fragmentRefs"?: {
            IContentData_test_Fragment: IContentData_test_Fragment;
            PageData_test_Fragment: PageData_test_Fragment;
          };
        })
      | null;
  } | null;
};

export type getContentTypeQueryVariables = Exact<{
  key: Scalars["String"]["input"];
  version?: InputMaybe<Scalars["String"]["input"]>;
  locale?: InputMaybe<Array<Locales> | Locales>;
  path?: InputMaybe<Scalars["String"]["input"]>;
  domain?: InputMaybe<Scalars["String"]["input"]>;
}>;

export type getContentTypeQuery = {
  __typename?: "Query";
  content?: {
    __typename?: "_ContentOutput";
    total?: number | null;
    items?:
      | {
          __typename?: "BannerItemElement";
          _metadata?:
            | {
                __typename?: "ContentMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "InstanceMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "ItemMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "MediaMetadata";
                types?: Array<string | null> | null;
              }
            | null;
        }
      | {
          __typename?: "BlankExperience";
          _metadata?:
            | {
                __typename?: "ContentMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "InstanceMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "ItemMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "MediaMetadata";
                types?: Array<string | null> | null;
              }
            | null;
        }
      | {
          __typename?: "BlankSection";
          _metadata?:
            | {
                __typename?: "ContentMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "InstanceMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "ItemMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "MediaMetadata";
                types?: Array<string | null> | null;
              }
            | null;
        }
      | {
          __typename?: "ButtonElement";
          _metadata?:
            | {
                __typename?: "ContentMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "InstanceMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "ItemMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "MediaMetadata";
                types?: Array<string | null> | null;
              }
            | null;
        }
      | {
          __typename?: "CTAElement";
          _metadata?:
            | {
                __typename?: "ContentMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "InstanceMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "ItemMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "MediaMetadata";
                types?: Array<string | null> | null;
              }
            | null;
        }
      | {
          __typename?: "Company";
          _metadata?:
            | {
                __typename?: "ContentMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "InstanceMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "ItemMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "MediaMetadata";
                types?: Array<string | null> | null;
              }
            | null;
        }
      | {
          __typename?: "ContainerElement";
          _metadata?:
            | {
                __typename?: "ContentMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "InstanceMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "ItemMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "MediaMetadata";
                types?: Array<string | null> | null;
              }
            | null;
        }
      | {
          __typename?: "ContentTextElement";
          _metadata?:
            | {
                __typename?: "ContentMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "InstanceMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "ItemMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "MediaMetadata";
                types?: Array<string | null> | null;
              }
            | null;
        }
      | {
          __typename?: "DefaultVideo";
          _metadata?:
            | {
                __typename?: "ContentMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "InstanceMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "ItemMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "MediaMetadata";
                types?: Array<string | null> | null;
              }
            | null;
        }
      | {
          __typename?: "Dictionary";
          _metadata?:
            | {
                __typename?: "ContentMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "InstanceMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "ItemMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "MediaMetadata";
                types?: Array<string | null> | null;
              }
            | null;
        }
      | {
          __typename?: "DictionaryItem";
          _metadata?:
            | {
                __typename?: "ContentMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "InstanceMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "ItemMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "MediaMetadata";
                types?: Array<string | null> | null;
              }
            | null;
        }
      | {
          __typename?: "ExpandableText";
          _metadata?:
            | {
                __typename?: "ContentMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "InstanceMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "ItemMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "MediaMetadata";
                types?: Array<string | null> | null;
              }
            | null;
        }
      | {
          __typename?: "FAQsSection";
          _metadata?:
            | {
                __typename?: "ContentMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "InstanceMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "ItemMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "MediaMetadata";
                types?: Array<string | null> | null;
              }
            | null;
        }
      | {
          __typename?: "GenericMedia";
          _metadata?:
            | {
                __typename?: "ContentMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "InstanceMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "ItemMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "MediaMetadata";
                types?: Array<string | null> | null;
              }
            | null;
        }
      | {
          __typename?: "HeadingElement";
          _metadata?:
            | {
                __typename?: "ContentMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "InstanceMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "ItemMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "MediaMetadata";
                types?: Array<string | null> | null;
              }
            | null;
        }
      | {
          __typename?: "Image";
          _metadata?:
            | {
                __typename?: "ContentMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "InstanceMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "ItemMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "MediaMetadata";
                types?: Array<string | null> | null;
              }
            | null;
        }
      | {
          __typename?: "ImageBackground";
          _metadata?:
            | {
                __typename?: "ContentMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "InstanceMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "ItemMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "MediaMetadata";
                types?: Array<string | null> | null;
              }
            | null;
        }
      | {
          __typename?: "ImageItemElement";
          _metadata?:
            | {
                __typename?: "ContentMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "InstanceMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "ItemMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "MediaMetadata";
                types?: Array<string | null> | null;
              }
            | null;
        }
      | {
          __typename?: "ImageMedia";
          _metadata?:
            | {
                __typename?: "ContentMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "InstanceMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "ItemMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "MediaMetadata";
                types?: Array<string | null> | null;
              }
            | null;
        }
      | {
          __typename?: "ImageTextItemElement";
          _metadata?:
            | {
                __typename?: "ContentMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "InstanceMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "ItemMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "MediaMetadata";
                types?: Array<string | null> | null;
              }
            | null;
        }
      | {
          __typename?: "LandingPage";
          _metadata?:
            | {
                __typename?: "ContentMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "InstanceMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "ItemMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "MediaMetadata";
                types?: Array<string | null> | null;
              }
            | null;
        }
      | {
          __typename?: "MegaMenuGroupBlock";
          _metadata?:
            | {
                __typename?: "ContentMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "InstanceMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "ItemMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "MediaMetadata";
                types?: Array<string | null> | null;
              }
            | null;
        }
      | {
          __typename?: "NavigationMenuBlock";
          _metadata?:
            | {
                __typename?: "ContentMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "InstanceMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "ItemMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "MediaMetadata";
                types?: Array<string | null> | null;
              }
            | null;
        }
      | {
          __typename?: "OfficeLocation";
          _metadata?:
            | {
                __typename?: "ContentMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "InstanceMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "ItemMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "MediaMetadata";
                types?: Array<string | null> | null;
              }
            | null;
        }
      | {
          __typename?: "PDPCarouselElement";
          _metadata?:
            | {
                __typename?: "ContentMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "InstanceMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "ItemMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "MediaMetadata";
                types?: Array<string | null> | null;
              }
            | null;
        }
      | {
          __typename?: "PDPGalleryElement";
          _metadata?:
            | {
                __typename?: "ContentMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "InstanceMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "ItemMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "MediaMetadata";
                types?: Array<string | null> | null;
              }
            | null;
        }
      | {
          __typename?: "PDPHeroElement";
          _metadata?:
            | {
                __typename?: "ContentMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "InstanceMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "ItemMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "MediaMetadata";
                types?: Array<string | null> | null;
              }
            | null;
        }
      | {
          __typename?: "PDPSpecificationsElement";
          _metadata?:
            | {
                __typename?: "ContentMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "InstanceMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "ItemMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "MediaMetadata";
                types?: Array<string | null> | null;
              }
            | null;
        }
      | {
          __typename?: "PageSeoSettings";
          _metadata?:
            | {
                __typename?: "ContentMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "InstanceMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "ItemMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "MediaMetadata";
                types?: Array<string | null> | null;
              }
            | null;
        }
      | {
          __typename?: "ParagraphElement";
          _metadata?:
            | {
                __typename?: "ContentMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "InstanceMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "ItemMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "MediaMetadata";
                types?: Array<string | null> | null;
              }
            | null;
        }
      | {
          __typename?: "ProductCardElement";
          _metadata?:
            | {
                __typename?: "ContentMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "InstanceMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "ItemMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "MediaMetadata";
                types?: Array<string | null> | null;
              }
            | null;
        }
      | {
          __typename?: "ProductCardListElement";
          _metadata?:
            | {
                __typename?: "ContentMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "InstanceMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "ItemMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "MediaMetadata";
                types?: Array<string | null> | null;
              }
            | null;
        }
      | {
          __typename?: "ProductCardListSection";
          _metadata?:
            | {
                __typename?: "ContentMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "InstanceMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "ItemMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "MediaMetadata";
                types?: Array<string | null> | null;
              }
            | null;
        }
      | {
          __typename?: "ProductCarouselElement";
          _metadata?:
            | {
                __typename?: "ContentMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "InstanceMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "ItemMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "MediaMetadata";
                types?: Array<string | null> | null;
              }
            | null;
        }
      | {
          __typename?: "ProductCarouselSection";
          _metadata?:
            | {
                __typename?: "ContentMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "InstanceMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "ItemMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "MediaMetadata";
                types?: Array<string | null> | null;
              }
            | null;
        }
      | {
          __typename?: "ProductDetail";
          _metadata?:
            | {
                __typename?: "ContentMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "InstanceMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "ItemMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "MediaMetadata";
                types?: Array<string | null> | null;
              }
            | null;
        }
      | {
          __typename?: "ProductDetailExperience";
          _metadata?:
            | {
                __typename?: "ContentMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "InstanceMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "ItemMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "MediaMetadata";
                types?: Array<string | null> | null;
              }
            | null;
        }
      | {
          __typename?: "ProductList";
          _metadata?:
            | {
                __typename?: "ContentMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "InstanceMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "ItemMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "MediaMetadata";
                types?: Array<string | null> | null;
              }
            | null;
        }
      | {
          __typename?: "ProductListingEPage";
          _metadata?:
            | {
                __typename?: "ContentMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "InstanceMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "ItemMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "MediaMetadata";
                types?: Array<string | null> | null;
              }
            | null;
        }
      | {
          __typename?: "ProductVisibleElements";
          _metadata?:
            | {
                __typename?: "ContentMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "InstanceMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "ItemMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "MediaMetadata";
                types?: Array<string | null> | null;
              }
            | null;
        }
      | {
          __typename?: "Section";
          _metadata?:
            | {
                __typename?: "ContentMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "InstanceMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "ItemMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "MediaMetadata";
                types?: Array<string | null> | null;
              }
            | null;
        }
      | {
          __typename?: "SocialMediaBlock";
          _metadata?:
            | {
                __typename?: "ContentMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "InstanceMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "ItemMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "MediaMetadata";
                types?: Array<string | null> | null;
              }
            | null;
        }
      | {
          __typename?: "SocialMediaBlocks";
          _metadata?:
            | {
                __typename?: "ContentMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "InstanceMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "ItemMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "MediaMetadata";
                types?: Array<string | null> | null;
              }
            | null;
        }
      | {
          __typename?: "SysContentFolder";
          _metadata?:
            | {
                __typename?: "ContentMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "InstanceMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "ItemMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "MediaMetadata";
                types?: Array<string | null> | null;
              }
            | null;
        }
      | {
          __typename?: "TopHeaderContainer";
          _metadata?:
            | {
                __typename?: "ContentMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "InstanceMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "ItemMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "MediaMetadata";
                types?: Array<string | null> | null;
              }
            | null;
        }
      | {
          __typename?: "VideoElement";
          _metadata?:
            | {
                __typename?: "ContentMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "InstanceMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "ItemMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "MediaMetadata";
                types?: Array<string | null> | null;
              }
            | null;
        }
      | {
          __typename?: "VideoMedia";
          _metadata?:
            | {
                __typename?: "ContentMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "InstanceMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "ItemMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "MediaMetadata";
                types?: Array<string | null> | null;
              }
            | null;
        }
      | {
          __typename?: "WebFooterConfigrationBlock";
          _metadata?:
            | {
                __typename?: "ContentMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "InstanceMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "ItemMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "MediaMetadata";
                types?: Array<string | null> | null;
              }
            | null;
        }
      | {
          __typename?: "WebHeaderConfigrationBlock";
          _metadata?:
            | {
                __typename?: "ContentMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "InstanceMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "ItemMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "MediaMetadata";
                types?: Array<string | null> | null;
              }
            | null;
        }
      | {
          __typename?: "_Component";
          _metadata?:
            | {
                __typename?: "ContentMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "InstanceMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "ItemMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "MediaMetadata";
                types?: Array<string | null> | null;
              }
            | null;
        }
      | {
          __typename?: "_Content";
          _metadata?:
            | {
                __typename?: "ContentMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "InstanceMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "ItemMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "MediaMetadata";
                types?: Array<string | null> | null;
              }
            | null;
        }
      | {
          __typename?: "_Experience";
          _metadata?:
            | {
                __typename?: "ContentMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "InstanceMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "ItemMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "MediaMetadata";
                types?: Array<string | null> | null;
              }
            | null;
        }
      | {
          __typename?: "_Folder";
          _metadata?:
            | {
                __typename?: "ContentMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "InstanceMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "ItemMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "MediaMetadata";
                types?: Array<string | null> | null;
              }
            | null;
        }
      | {
          __typename?: "_Image";
          _metadata?:
            | {
                __typename?: "ContentMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "InstanceMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "ItemMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "MediaMetadata";
                types?: Array<string | null> | null;
              }
            | null;
        }
      | {
          __typename?: "_Media";
          _metadata?:
            | {
                __typename?: "ContentMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "InstanceMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "ItemMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "MediaMetadata";
                types?: Array<string | null> | null;
              }
            | null;
        }
      | {
          __typename?: "_Page";
          _metadata?:
            | {
                __typename?: "ContentMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "InstanceMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "ItemMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "MediaMetadata";
                types?: Array<string | null> | null;
              }
            | null;
        }
      | {
          __typename?: "_Section";
          _metadata?:
            | {
                __typename?: "ContentMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "InstanceMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "ItemMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "MediaMetadata";
                types?: Array<string | null> | null;
              }
            | null;
        }
      | {
          __typename?: "_Video";
          _metadata?:
            | {
                __typename?: "ContentMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "InstanceMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "ItemMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "MediaMetadata";
                types?: Array<string | null> | null;
              }
            | null;
        }
      | {
          __typename?: "test";
          _metadata?:
            | {
                __typename?: "ContentMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "InstanceMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "ItemMetadata";
                types?: Array<string | null> | null;
              }
            | {
                __typename?: "MediaMetadata";
                types?: Array<string | null> | null;
              }
            | null;
        }
      | null;
  } | null;
};

export const CompositionNodeDataFragmentDoc = {
  kind: "Document",
  definitions: [
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "CompositionNodeData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ICompositionNode" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "name" },
            name: { kind: "Name", value: "displayName" },
          },
          {
            kind: "Field",
            alias: { kind: "Name", value: "layoutType" },
            name: { kind: "Name", value: "nodeType" },
          },
          { kind: "Field", name: { kind: "Name", value: "type" } },
          { kind: "Field", name: { kind: "Name", value: "key" } },
          {
            kind: "Field",
            alias: { kind: "Name", value: "template" },
            name: { kind: "Name", value: "displayTemplateKey" },
          },
          {
            kind: "Field",
            alias: { kind: "Name", value: "settings" },
            name: { kind: "Name", value: "displaySettings" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "key" } },
                { kind: "Field", name: { kind: "Name", value: "value" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<CompositionNodeDataFragment, unknown>;
export const LinkDataFragmentDoc = {
  kind: "Document",
  definitions: [
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentUrl" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "type" } },
          { kind: "Field", name: { kind: "Name", value: "base" } },
          { kind: "Field", name: { kind: "Name", value: "default" } },
        ],
      },
    },
  ],
} as unknown as DocumentNode<LinkDataFragment, unknown>;
export const IContentInfoFragmentDoc = {
  kind: "Document",
  definitions: [
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "IContentInfo" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "IContentMetadata" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "key" } },
          { kind: "Field", name: { kind: "Name", value: "locale" } },
          { kind: "Field", name: { kind: "Name", value: "types" } },
          { kind: "Field", name: { kind: "Name", value: "displayName" } },
          { kind: "Field", name: { kind: "Name", value: "version" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentUrl" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "type" } },
          { kind: "Field", name: { kind: "Name", value: "base" } },
          { kind: "Field", name: { kind: "Name", value: "default" } },
        ],
      },
    },
  ],
} as unknown as DocumentNode<IContentInfoFragment, unknown>;
export const IContentDataFragmentDoc = {
  kind: "Document",
  definitions: [
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "IContentData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "_IContent" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "_metadata" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "IContentInfo" },
                },
              ],
            },
          },
          {
            kind: "Field",
            alias: { kind: "Name", value: "_type" },
            name: { kind: "Name", value: "__typename" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentUrl" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "type" } },
          { kind: "Field", name: { kind: "Name", value: "base" } },
          { kind: "Field", name: { kind: "Name", value: "default" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "IContentInfo" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "IContentMetadata" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "key" } },
          { kind: "Field", name: { kind: "Name", value: "locale" } },
          { kind: "Field", name: { kind: "Name", value: "types" } },
          { kind: "Field", name: { kind: "Name", value: "displayName" } },
          { kind: "Field", name: { kind: "Name", value: "version" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<IContentDataFragment, unknown>;
export const BlockDataFragmentDoc = {
  kind: "Document",
  definitions: [
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "BlockData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "_IComponent" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "FragmentSpread",
            name: { kind: "Name", value: "IContentData" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentUrl" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "type" } },
          { kind: "Field", name: { kind: "Name", value: "base" } },
          { kind: "Field", name: { kind: "Name", value: "default" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "IContentInfo" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "IContentMetadata" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "key" } },
          { kind: "Field", name: { kind: "Name", value: "locale" } },
          { kind: "Field", name: { kind: "Name", value: "types" } },
          { kind: "Field", name: { kind: "Name", value: "displayName" } },
          { kind: "Field", name: { kind: "Name", value: "version" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "IContentData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "_IContent" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "_metadata" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "IContentInfo" },
                },
              ],
            },
          },
          {
            kind: "Field",
            alias: { kind: "Name", value: "_type" },
            name: { kind: "Name", value: "__typename" },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<BlockDataFragment, unknown>;
export const IElementDataFragmentDoc = {
  kind: "Document",
  definitions: [
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "IElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "_IComponent" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "_metadata" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "IContentInfo" },
                },
              ],
            },
          },
          {
            kind: "Field",
            alias: { kind: "Name", value: "_type" },
            name: { kind: "Name", value: "__typename" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentUrl" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "type" } },
          { kind: "Field", name: { kind: "Name", value: "base" } },
          { kind: "Field", name: { kind: "Name", value: "default" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "IContentInfo" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "IContentMetadata" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "key" } },
          { kind: "Field", name: { kind: "Name", value: "locale" } },
          { kind: "Field", name: { kind: "Name", value: "types" } },
          { kind: "Field", name: { kind: "Name", value: "displayName" } },
          { kind: "Field", name: { kind: "Name", value: "version" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<IElementDataFragment, unknown>;
export const ElementDataFragmentDoc = {
  kind: "Document",
  definitions: [
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "_IComponent" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "FragmentSpread",
            name: { kind: "Name", value: "IElementData" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentUrl" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "type" } },
          { kind: "Field", name: { kind: "Name", value: "base" } },
          { kind: "Field", name: { kind: "Name", value: "default" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "IContentInfo" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "IContentMetadata" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "key" } },
          { kind: "Field", name: { kind: "Name", value: "locale" } },
          { kind: "Field", name: { kind: "Name", value: "types" } },
          { kind: "Field", name: { kind: "Name", value: "displayName" } },
          { kind: "Field", name: { kind: "Name", value: "version" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "IElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "_IComponent" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "_metadata" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "IContentInfo" },
                },
              ],
            },
          },
          {
            kind: "Field",
            alias: { kind: "Name", value: "_type" },
            name: { kind: "Name", value: "__typename" },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<ElementDataFragment, unknown>;
export const ReferenceDataFragmentDoc = {
  kind: "Document",
  definitions: [
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ReferenceData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentReference" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "key" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentUrl" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "type" } },
          { kind: "Field", name: { kind: "Name", value: "base" } },
          { kind: "Field", name: { kind: "Name", value: "default" } },
        ],
      },
    },
  ],
} as unknown as DocumentNode<ReferenceDataFragment, unknown>;
export const BannerItemElementDataFragmentDoc = {
  kind: "Document",
  definitions: [
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "BannerItemElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "BannerItemElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "HeadingText" } },
          { kind: "Field", name: { kind: "Name", value: "SubHeading" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "RichText" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "BackgroundLink" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ImageDesktop" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ImageMobile" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "OverlayColor" } },
          { kind: "Field", name: { kind: "Name", value: "OverlayOpacity" } },
          { kind: "Field", name: { kind: "Name", value: "Alt" } },
          { kind: "Field", name: { kind: "Name", value: "IsFullWidthImage" } },
          { kind: "Field", name: { kind: "Name", value: "Loading" } },
          { kind: "Field", name: { kind: "Name", value: "ButtonText" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "ButtonLink" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "CssClass" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentUrl" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "type" } },
          { kind: "Field", name: { kind: "Name", value: "base" } },
          { kind: "Field", name: { kind: "Name", value: "default" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ReferenceData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentReference" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "key" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<BannerItemElementDataFragment, unknown>;
export const ButtonElementDataFragmentDoc = {
  kind: "Document",
  definitions: [
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ButtonElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ButtonElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "ButtonText" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "ButtonLink" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "className" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentUrl" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "type" } },
          { kind: "Field", name: { kind: "Name", value: "base" } },
          { kind: "Field", name: { kind: "Name", value: "default" } },
        ],
      },
    },
  ],
} as unknown as DocumentNode<ButtonElementDataFragment, unknown>;
export const CompanyDataFragmentDoc = {
  kind: "Document",
  definitions: [
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "CompanyData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "Company" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "Name" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "Logo" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentUrl" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "type" } },
          { kind: "Field", name: { kind: "Name", value: "base" } },
          { kind: "Field", name: { kind: "Name", value: "default" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ReferenceData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentReference" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "key" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<CompanyDataFragment, unknown>;
export const ContainerElementDataFragmentDoc = {
  kind: "Document",
  definitions: [
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ContainerElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContainerElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "Items" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "TypeOfItems" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentUrl" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "type" } },
          { kind: "Field", name: { kind: "Name", value: "base" } },
          { kind: "Field", name: { kind: "Name", value: "default" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ReferenceData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentReference" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "key" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<ContainerElementDataFragment, unknown>;
export const ContentTextElementDataFragmentDoc = {
  kind: "Document",
  definitions: [
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ContentTextElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentTextElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "HeadingText" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "Paragraph" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<ContentTextElementDataFragment, unknown>;
export const DictionaryItemPropertyDataFragmentDoc = {
  kind: "Document",
  definitions: [
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "DictionaryItemPropertyData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "DictionaryItemProperty" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "DictionaryItemKey" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "DictionaryItemValue" },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<DictionaryItemPropertyDataFragment, unknown>;
export const DictionaryDataFragmentDoc = {
  kind: "Document",
  definitions: [
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "DictionaryData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "Dictionary" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "DictionaryItems" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "DictionaryItemPropertyData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "DictionaryKey" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "DictionaryItemPropertyData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "DictionaryItemProperty" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "DictionaryItemKey" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "DictionaryItemValue" },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<DictionaryDataFragment, unknown>;
export const DictionaryItemDataFragmentDoc = {
  kind: "Document",
  definitions: [
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "DictionaryItemData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "DictionaryItem" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "DictionaryItemKey" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "DictionaryItemValue" },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<DictionaryItemDataFragment, unknown>;
export const ExpandableTextDataFragmentDoc = {
  kind: "Document",
  definitions: [
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ExpandableTextData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ExpandableText" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "ContentText" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "Threshold" } },
          { kind: "Field", name: { kind: "Name", value: "ShowLessText" } },
          { kind: "Field", name: { kind: "Name", value: "ReadMoreText" } },
          { kind: "Field", name: { kind: "Name", value: "MobileThreshold" } },
        ],
      },
    },
  ],
} as unknown as DocumentNode<ExpandableTextDataFragment, unknown>;
export const HeadingElementDataFragmentDoc = {
  kind: "Document",
  definitions: [
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "HeadingElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "HeadingElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "HeadingText" } },
        ],
      },
    },
  ],
} as unknown as DocumentNode<HeadingElementDataFragment, unknown>;
export const FAQsSectionDataFragmentDoc = {
  kind: "Document",
  definitions: [
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "FAQsSectionData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "FAQsSection" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "HeadingText" } },
          { kind: "Field", name: { kind: "Name", value: "allowMultiple" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "ListItem" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ContentTextElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "HeadingElementData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ContentTextElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentTextElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "HeadingText" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "Paragraph" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "HeadingElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "HeadingElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "HeadingText" } },
        ],
      },
    },
  ],
} as unknown as DocumentNode<FAQsSectionDataFragment, unknown>;
export const ImageBackgroundDataFragmentDoc = {
  kind: "Document",
  definitions: [
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ImageBackgroundData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ImageBackground" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "ImageDesktop" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ImageMobile" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "Alt" } },
          { kind: "Field", name: { kind: "Name", value: "IsFullIWidthImage" } },
          { kind: "Field", name: { kind: "Name", value: "Loading" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentUrl" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "type" } },
          { kind: "Field", name: { kind: "Name", value: "base" } },
          { kind: "Field", name: { kind: "Name", value: "default" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ReferenceData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentReference" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "key" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<ImageBackgroundDataFragment, unknown>;
export const ImageItemElementDataFragmentDoc = {
  kind: "Document",
  definitions: [
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ImageItemElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ImageItemElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "ImageDesktop" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ImageMobile" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "Loading" } },
          { kind: "Field", name: { kind: "Name", value: "Alt" } },
          { kind: "Field", name: { kind: "Name", value: "IsFullWidthImage" } },
          { kind: "Field", name: { kind: "Name", value: "IsBackground" } },
          { kind: "Field", name: { kind: "Name", value: "OverlayOpacity" } },
          { kind: "Field", name: { kind: "Name", value: "OverlayColor" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentUrl" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "type" } },
          { kind: "Field", name: { kind: "Name", value: "base" } },
          { kind: "Field", name: { kind: "Name", value: "default" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ReferenceData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentReference" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "key" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<ImageItemElementDataFragment, unknown>;
export const ImageTextItemElementDataFragmentDoc = {
  kind: "Document",
  definitions: [
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ImageTextItemElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ImageTextItemElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "Heading" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "RichText" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "Image" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ImageMobile" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "Alt" } },
          { kind: "Field", name: { kind: "Name", value: "IsFullWidthImage" } },
          { kind: "Field", name: { kind: "Name", value: "Loading" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "BackgroundLink" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ButtonLink" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "ButtonText" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "ContentImagePosition" },
          },
          { kind: "Field", name: { kind: "Name", value: "CssClass" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentUrl" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "type" } },
          { kind: "Field", name: { kind: "Name", value: "base" } },
          { kind: "Field", name: { kind: "Name", value: "default" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ReferenceData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentReference" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "key" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<ImageTextItemElementDataFragment, unknown>;
export const IContentListItemFragmentDoc = {
  kind: "Document",
  definitions: [
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "IContentListItem" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "_IContent" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "FragmentSpread",
            name: { kind: "Name", value: "IContentData" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentUrl" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "type" } },
          { kind: "Field", name: { kind: "Name", value: "base" } },
          { kind: "Field", name: { kind: "Name", value: "default" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "IContentInfo" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "IContentMetadata" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "key" } },
          { kind: "Field", name: { kind: "Name", value: "locale" } },
          { kind: "Field", name: { kind: "Name", value: "types" } },
          { kind: "Field", name: { kind: "Name", value: "displayName" } },
          { kind: "Field", name: { kind: "Name", value: "version" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "IContentData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "_IContent" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "_metadata" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "IContentInfo" },
                },
              ],
            },
          },
          {
            kind: "Field",
            alias: { kind: "Name", value: "_type" },
            name: { kind: "Name", value: "__typename" },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<IContentListItemFragment, unknown>;
export const LinkItemDataFragmentDoc = {
  kind: "Document",
  definitions: [
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkItemData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "Link" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "title" } },
          { kind: "Field", name: { kind: "Name", value: "text" } },
          { kind: "Field", name: { kind: "Name", value: "target" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentUrl" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "type" } },
          { kind: "Field", name: { kind: "Name", value: "base" } },
          { kind: "Field", name: { kind: "Name", value: "default" } },
        ],
      },
    },
  ],
} as unknown as DocumentNode<LinkItemDataFragment, unknown>;
export const NavigationMenuBlockFieldsFragmentDoc = {
  kind: "Document",
  definitions: [
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "NavigationMenuBlockFields" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "NavigationMenuBlock" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "FragmentSpread",
            name: { kind: "Name", value: "IElementData" },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "MenuNavigationHeading" },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "Link" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkItemData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ThumbnailBanner" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentUrl" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "type" } },
          { kind: "Field", name: { kind: "Name", value: "base" } },
          { kind: "Field", name: { kind: "Name", value: "default" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "IContentInfo" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "IContentMetadata" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "key" } },
          { kind: "Field", name: { kind: "Name", value: "locale" } },
          { kind: "Field", name: { kind: "Name", value: "types" } },
          { kind: "Field", name: { kind: "Name", value: "displayName" } },
          { kind: "Field", name: { kind: "Name", value: "version" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "IElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "_IComponent" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "_metadata" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "IContentInfo" },
                },
              ],
            },
          },
          {
            kind: "Field",
            alias: { kind: "Name", value: "_type" },
            name: { kind: "Name", value: "__typename" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkItemData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "Link" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "title" } },
          { kind: "Field", name: { kind: "Name", value: "text" } },
          { kind: "Field", name: { kind: "Name", value: "target" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ReferenceData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentReference" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "key" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<NavigationMenuBlockFieldsFragment, unknown>;
export const NavigationMenuBlockDataFragmentDoc = {
  kind: "Document",
  definitions: [
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "NavigationMenuBlockData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "NavigationMenuBlock" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "FragmentSpread",
            name: { kind: "Name", value: "NavigationMenuBlockFields" },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "SubMenuItem" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "NavigationMenuBlockFields" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentUrl" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "type" } },
          { kind: "Field", name: { kind: "Name", value: "base" } },
          { kind: "Field", name: { kind: "Name", value: "default" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "IContentInfo" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "IContentMetadata" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "key" } },
          { kind: "Field", name: { kind: "Name", value: "locale" } },
          { kind: "Field", name: { kind: "Name", value: "types" } },
          { kind: "Field", name: { kind: "Name", value: "displayName" } },
          { kind: "Field", name: { kind: "Name", value: "version" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "IElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "_IComponent" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "_metadata" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "IContentInfo" },
                },
              ],
            },
          },
          {
            kind: "Field",
            alias: { kind: "Name", value: "_type" },
            name: { kind: "Name", value: "__typename" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkItemData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "Link" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "title" } },
          { kind: "Field", name: { kind: "Name", value: "text" } },
          { kind: "Field", name: { kind: "Name", value: "target" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ReferenceData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentReference" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "key" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "NavigationMenuBlockFields" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "NavigationMenuBlock" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "FragmentSpread",
            name: { kind: "Name", value: "IElementData" },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "MenuNavigationHeading" },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "Link" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkItemData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ThumbnailBanner" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<NavigationMenuBlockDataFragment, unknown>;
export const LinkPropertyDataFragmentDoc = {
  kind: "Document",
  definitions: [
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkPropertyData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "Link" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "title" } },
          { kind: "Field", name: { kind: "Name", value: "text" } },
          { kind: "Field", name: { kind: "Name", value: "target" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentUrl" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "type" } },
          { kind: "Field", name: { kind: "Name", value: "base" } },
          { kind: "Field", name: { kind: "Name", value: "default" } },
        ],
      },
    },
  ],
} as unknown as DocumentNode<LinkPropertyDataFragment, unknown>;
export const SocialMediaBlockDataFragmentDoc = {
  kind: "Document",
  definitions: [
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "SocialMediaBlockData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "SocialMediaBlock" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "URLMedia" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkPropertyData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "imageIcon" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  name: { kind: "Name", value: "ImageDesktop" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "FragmentSpread",
                        name: { kind: "Name", value: "ReferenceData" },
                      },
                    ],
                  },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "ImageMobile" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "FragmentSpread",
                        name: { kind: "Name", value: "ReferenceData" },
                      },
                    ],
                  },
                },
                { kind: "Field", name: { kind: "Name", value: "Loading" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "OverlayColor" },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "OverlayOpacity" },
                },
                { kind: "Field", name: { kind: "Name", value: "Alt" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "IsFullWidthImage" },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "IsBackground" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentUrl" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "type" } },
          { kind: "Field", name: { kind: "Name", value: "base" } },
          { kind: "Field", name: { kind: "Name", value: "default" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkPropertyData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "Link" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "title" } },
          { kind: "Field", name: { kind: "Name", value: "text" } },
          { kind: "Field", name: { kind: "Name", value: "target" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ReferenceData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentReference" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "key" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<SocialMediaBlockDataFragment, unknown>;
export const SocialMediaBlocksDataFragmentDoc = {
  kind: "Document",
  definitions: [
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "SocialMediaBlocksData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "SocialMediaBlocks" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "ListItems" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "SocialMediaBlockData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentUrl" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "type" } },
          { kind: "Field", name: { kind: "Name", value: "base" } },
          { kind: "Field", name: { kind: "Name", value: "default" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkPropertyData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "Link" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "title" } },
          { kind: "Field", name: { kind: "Name", value: "text" } },
          { kind: "Field", name: { kind: "Name", value: "target" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ReferenceData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentReference" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "key" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "SocialMediaBlockData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "SocialMediaBlock" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "URLMedia" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkPropertyData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "imageIcon" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  name: { kind: "Name", value: "ImageDesktop" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "FragmentSpread",
                        name: { kind: "Name", value: "ReferenceData" },
                      },
                    ],
                  },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "ImageMobile" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "FragmentSpread",
                        name: { kind: "Name", value: "ReferenceData" },
                      },
                    ],
                  },
                },
                { kind: "Field", name: { kind: "Name", value: "Loading" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "OverlayColor" },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "OverlayOpacity" },
                },
                { kind: "Field", name: { kind: "Name", value: "Alt" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "IsFullWidthImage" },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "IsBackground" },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<SocialMediaBlocksDataFragment, unknown>;
export const MegaMenuGroupBlockDataFragmentDoc = {
  kind: "Document",
  definitions: [
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "MegaMenuGroupBlockData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "MegaMenuGroupBlock" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "MenuMenuHeading" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "MegaMenuUrl" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "MegaMenuContentArea" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "IContentListItem" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "NavigationMenuBlockData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ButtonElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "SocialMediaBlockData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ContentTextElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "SocialMediaBlocksData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "ExpandableMobile" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentUrl" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "type" } },
          { kind: "Field", name: { kind: "Name", value: "base" } },
          { kind: "Field", name: { kind: "Name", value: "default" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "IContentInfo" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "IContentMetadata" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "key" } },
          { kind: "Field", name: { kind: "Name", value: "locale" } },
          { kind: "Field", name: { kind: "Name", value: "types" } },
          { kind: "Field", name: { kind: "Name", value: "displayName" } },
          { kind: "Field", name: { kind: "Name", value: "version" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "IContentData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "_IContent" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "_metadata" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "IContentInfo" },
                },
              ],
            },
          },
          {
            kind: "Field",
            alias: { kind: "Name", value: "_type" },
            name: { kind: "Name", value: "__typename" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "IElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "_IComponent" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "_metadata" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "IContentInfo" },
                },
              ],
            },
          },
          {
            kind: "Field",
            alias: { kind: "Name", value: "_type" },
            name: { kind: "Name", value: "__typename" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkItemData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "Link" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "title" } },
          { kind: "Field", name: { kind: "Name", value: "text" } },
          { kind: "Field", name: { kind: "Name", value: "target" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ReferenceData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentReference" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "key" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "NavigationMenuBlockFields" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "NavigationMenuBlock" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "FragmentSpread",
            name: { kind: "Name", value: "IElementData" },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "MenuNavigationHeading" },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "Link" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkItemData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ThumbnailBanner" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkPropertyData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "Link" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "title" } },
          { kind: "Field", name: { kind: "Name", value: "text" } },
          { kind: "Field", name: { kind: "Name", value: "target" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "SocialMediaBlockData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "SocialMediaBlock" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "URLMedia" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkPropertyData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "imageIcon" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  name: { kind: "Name", value: "ImageDesktop" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "FragmentSpread",
                        name: { kind: "Name", value: "ReferenceData" },
                      },
                    ],
                  },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "ImageMobile" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "FragmentSpread",
                        name: { kind: "Name", value: "ReferenceData" },
                      },
                    ],
                  },
                },
                { kind: "Field", name: { kind: "Name", value: "Loading" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "OverlayColor" },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "OverlayOpacity" },
                },
                { kind: "Field", name: { kind: "Name", value: "Alt" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "IsFullWidthImage" },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "IsBackground" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "IContentListItem" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "_IContent" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "FragmentSpread",
            name: { kind: "Name", value: "IContentData" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "NavigationMenuBlockData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "NavigationMenuBlock" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "FragmentSpread",
            name: { kind: "Name", value: "NavigationMenuBlockFields" },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "SubMenuItem" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "NavigationMenuBlockFields" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ButtonElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ButtonElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "ButtonText" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "ButtonLink" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "className" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ContentTextElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentTextElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "HeadingText" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "Paragraph" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "SocialMediaBlocksData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "SocialMediaBlocks" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "ListItems" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "SocialMediaBlockData" },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<MegaMenuGroupBlockDataFragment, unknown>;
export const OfficeLocationDataFragmentDoc = {
  kind: "Document",
  definitions: [
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "OfficeLocationData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "OfficeLocation" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "OfficeTitle" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "OfficeAddressStreet1" },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "OfficeAddressStreet2" },
          },
          { kind: "Field", name: { kind: "Name", value: "OfficeAddressCity" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "OfficeAddressPostalCode" },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "OfficeAddressCountry" },
          },
          { kind: "Field", name: { kind: "Name", value: "OfficePhone" } },
          { kind: "Field", name: { kind: "Name", value: "OfficeEmail" } },
        ],
      },
    },
  ],
} as unknown as DocumentNode<OfficeLocationDataFragment, unknown>;
export const PageSeoSettingsDataFragmentDoc = {
  kind: "Document",
  definitions: [
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "PageSeoSettingsData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "PageSeoSettings" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "MetaTitle" } },
          { kind: "Field", name: { kind: "Name", value: "MetaDescription" } },
          { kind: "Field", name: { kind: "Name", value: "MetaKeywords" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "ThumbnailImage" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentUrl" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "type" } },
          { kind: "Field", name: { kind: "Name", value: "base" } },
          { kind: "Field", name: { kind: "Name", value: "default" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ReferenceData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentReference" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "key" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<PageSeoSettingsDataFragment, unknown>;
export const ParagraphElementDataFragmentDoc = {
  kind: "Document",
  definitions: [
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ParagraphElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ParagraphElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "text" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<ParagraphElementDataFragment, unknown>;
export const ProductCardElementDataFragmentDoc = {
  kind: "Document",
  definitions: [
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ProductCardElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ProductCardElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "ProductName" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "Image" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ShortDescription" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "InventoryStatus" } },
          { kind: "Field", name: { kind: "Name", value: "inventory" } },
          { kind: "Field", name: { kind: "Name", value: "CanBuy" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentUrl" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "type" } },
          { kind: "Field", name: { kind: "Name", value: "base" } },
          { kind: "Field", name: { kind: "Name", value: "default" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ReferenceData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentReference" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "key" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<ProductCardElementDataFragment, unknown>;
export const ProductCardListElementDataFragmentDoc = {
  kind: "Document",
  definitions: [
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ProductCardListElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ProductCardListElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "CategoryID" } },
          { kind: "Field", name: { kind: "Name", value: "EnableFilter" } },
          { kind: "Field", name: { kind: "Name", value: "EnableSorting" } },
          { kind: "Field", name: { kind: "Name", value: "DefaultView" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "EnableProductCount" },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "VisibleElements" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "PagingSize" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentUrl" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "type" } },
          { kind: "Field", name: { kind: "Name", value: "base" } },
          { kind: "Field", name: { kind: "Name", value: "default" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ReferenceData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentReference" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "key" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<ProductCardListElementDataFragment, unknown>;
export const TopHeaderContainerDataFragmentDoc = {
  kind: "Document",
  definitions: [
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "TopHeaderContainerData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "TopHeaderContainer" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "description" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "Links" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkItemData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentUrl" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "type" } },
          { kind: "Field", name: { kind: "Name", value: "base" } },
          { kind: "Field", name: { kind: "Name", value: "default" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkItemData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "Link" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "title" } },
          { kind: "Field", name: { kind: "Name", value: "text" } },
          { kind: "Field", name: { kind: "Name", value: "target" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<TopHeaderContainerDataFragment, unknown>;
export const VideoElementDataFragmentDoc = {
  kind: "Document",
  definitions: [
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "VideoElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "VideoElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "Video" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "Placeholder" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "VideoUrl" } },
          { kind: "Field", name: { kind: "Name", value: "Autoplay" } },
          { kind: "Field", name: { kind: "Name", value: "PlayOnPopup" } },
          { kind: "Field", name: { kind: "Name", value: "Loading" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentUrl" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "type" } },
          { kind: "Field", name: { kind: "Name", value: "base" } },
          { kind: "Field", name: { kind: "Name", value: "default" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ReferenceData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentReference" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "key" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<VideoElementDataFragment, unknown>;
export const WebFooterConfigrationBlockDataFragmentDoc = {
  kind: "Document",
  definitions: [
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "WebFooterConfigrationBlockData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "WebFooterConfigrationBlock" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "SiteLogoFooter" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "LogoAltText" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "LocationDetails" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ButtonURLFooter" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkItemData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "FooterNavigation" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "IContentListItem" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "MegaMenuGroupBlockData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "SocialMediaArea" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "IContentListItem" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "SocialMediaBlockData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "CopyrightText" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "TermsAndConditionsArea" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkItemData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "paymentmethodarea" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "IContentListItem" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ImageItemElementData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentUrl" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "type" } },
          { kind: "Field", name: { kind: "Name", value: "base" } },
          { kind: "Field", name: { kind: "Name", value: "default" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "IContentInfo" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "IContentMetadata" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "key" } },
          { kind: "Field", name: { kind: "Name", value: "locale" } },
          { kind: "Field", name: { kind: "Name", value: "types" } },
          { kind: "Field", name: { kind: "Name", value: "displayName" } },
          { kind: "Field", name: { kind: "Name", value: "version" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "IContentData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "_IContent" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "_metadata" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "IContentInfo" },
                },
              ],
            },
          },
          {
            kind: "Field",
            alias: { kind: "Name", value: "_type" },
            name: { kind: "Name", value: "__typename" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "IContentListItem" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "_IContent" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "FragmentSpread",
            name: { kind: "Name", value: "IContentData" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "IElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "_IComponent" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "_metadata" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "IContentInfo" },
                },
              ],
            },
          },
          {
            kind: "Field",
            alias: { kind: "Name", value: "_type" },
            name: { kind: "Name", value: "__typename" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkItemData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "Link" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "title" } },
          { kind: "Field", name: { kind: "Name", value: "text" } },
          { kind: "Field", name: { kind: "Name", value: "target" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ReferenceData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentReference" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "key" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "NavigationMenuBlockFields" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "NavigationMenuBlock" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "FragmentSpread",
            name: { kind: "Name", value: "IElementData" },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "MenuNavigationHeading" },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "Link" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkItemData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ThumbnailBanner" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "NavigationMenuBlockData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "NavigationMenuBlock" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "FragmentSpread",
            name: { kind: "Name", value: "NavigationMenuBlockFields" },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "SubMenuItem" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "NavigationMenuBlockFields" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ButtonElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ButtonElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "ButtonText" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "ButtonLink" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "className" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkPropertyData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "Link" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "title" } },
          { kind: "Field", name: { kind: "Name", value: "text" } },
          { kind: "Field", name: { kind: "Name", value: "target" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "SocialMediaBlockData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "SocialMediaBlock" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "URLMedia" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkPropertyData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "imageIcon" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  name: { kind: "Name", value: "ImageDesktop" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "FragmentSpread",
                        name: { kind: "Name", value: "ReferenceData" },
                      },
                    ],
                  },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "ImageMobile" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "FragmentSpread",
                        name: { kind: "Name", value: "ReferenceData" },
                      },
                    ],
                  },
                },
                { kind: "Field", name: { kind: "Name", value: "Loading" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "OverlayColor" },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "OverlayOpacity" },
                },
                { kind: "Field", name: { kind: "Name", value: "Alt" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "IsFullWidthImage" },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "IsBackground" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ContentTextElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentTextElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "HeadingText" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "Paragraph" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "SocialMediaBlocksData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "SocialMediaBlocks" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "ListItems" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "SocialMediaBlockData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "MegaMenuGroupBlockData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "MegaMenuGroupBlock" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "MenuMenuHeading" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "MegaMenuUrl" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "MegaMenuContentArea" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "IContentListItem" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "NavigationMenuBlockData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ButtonElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "SocialMediaBlockData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ContentTextElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "SocialMediaBlocksData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "ExpandableMobile" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ImageItemElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ImageItemElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "ImageDesktop" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ImageMobile" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "Loading" } },
          { kind: "Field", name: { kind: "Name", value: "Alt" } },
          { kind: "Field", name: { kind: "Name", value: "IsFullWidthImage" } },
          { kind: "Field", name: { kind: "Name", value: "IsBackground" } },
          { kind: "Field", name: { kind: "Name", value: "OverlayOpacity" } },
          { kind: "Field", name: { kind: "Name", value: "OverlayColor" } },
        ],
      },
    },
  ],
} as unknown as DocumentNode<WebFooterConfigrationBlockDataFragment, unknown>;
export const WebHeaderConfigrationBlockDataFragmentDoc = {
  kind: "Document",
  definitions: [
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "WebHeaderConfigrationBlockData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "WebHeaderConfigrationBlock" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "HeaderCTA" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "TopNavigationHeader" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "MegaMenuGroupBlockData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "TopHeaderContainerData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "MainNavigationHeader" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "MegaMenuGroupBlockData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "SearchBarText" } },
          { kind: "Field", name: { kind: "Name", value: "SiteLogoAltText" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "SiteLogoIcon" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "SiteSearchEnable" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentUrl" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "type" } },
          { kind: "Field", name: { kind: "Name", value: "base" } },
          { kind: "Field", name: { kind: "Name", value: "default" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "IContentInfo" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "IContentMetadata" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "key" } },
          { kind: "Field", name: { kind: "Name", value: "locale" } },
          { kind: "Field", name: { kind: "Name", value: "types" } },
          { kind: "Field", name: { kind: "Name", value: "displayName" } },
          { kind: "Field", name: { kind: "Name", value: "version" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "IContentData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "_IContent" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "_metadata" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "IContentInfo" },
                },
              ],
            },
          },
          {
            kind: "Field",
            alias: { kind: "Name", value: "_type" },
            name: { kind: "Name", value: "__typename" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "IContentListItem" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "_IContent" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "FragmentSpread",
            name: { kind: "Name", value: "IContentData" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "IElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "_IComponent" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "_metadata" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "IContentInfo" },
                },
              ],
            },
          },
          {
            kind: "Field",
            alias: { kind: "Name", value: "_type" },
            name: { kind: "Name", value: "__typename" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkItemData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "Link" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "title" } },
          { kind: "Field", name: { kind: "Name", value: "text" } },
          { kind: "Field", name: { kind: "Name", value: "target" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ReferenceData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentReference" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "key" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "NavigationMenuBlockFields" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "NavigationMenuBlock" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "FragmentSpread",
            name: { kind: "Name", value: "IElementData" },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "MenuNavigationHeading" },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "Link" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkItemData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ThumbnailBanner" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "NavigationMenuBlockData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "NavigationMenuBlock" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "FragmentSpread",
            name: { kind: "Name", value: "NavigationMenuBlockFields" },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "SubMenuItem" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "NavigationMenuBlockFields" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ButtonElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ButtonElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "ButtonText" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "ButtonLink" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "className" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkPropertyData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "Link" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "title" } },
          { kind: "Field", name: { kind: "Name", value: "text" } },
          { kind: "Field", name: { kind: "Name", value: "target" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "SocialMediaBlockData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "SocialMediaBlock" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "URLMedia" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkPropertyData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "imageIcon" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  name: { kind: "Name", value: "ImageDesktop" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "FragmentSpread",
                        name: { kind: "Name", value: "ReferenceData" },
                      },
                    ],
                  },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "ImageMobile" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "FragmentSpread",
                        name: { kind: "Name", value: "ReferenceData" },
                      },
                    ],
                  },
                },
                { kind: "Field", name: { kind: "Name", value: "Loading" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "OverlayColor" },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "OverlayOpacity" },
                },
                { kind: "Field", name: { kind: "Name", value: "Alt" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "IsFullWidthImage" },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "IsBackground" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ContentTextElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentTextElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "HeadingText" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "Paragraph" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "SocialMediaBlocksData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "SocialMediaBlocks" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "ListItems" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "SocialMediaBlockData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "MegaMenuGroupBlockData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "MegaMenuGroupBlock" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "MenuMenuHeading" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "MegaMenuUrl" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "MegaMenuContentArea" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "IContentListItem" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "NavigationMenuBlockData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ButtonElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "SocialMediaBlockData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ContentTextElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "SocialMediaBlocksData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "ExpandableMobile" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "TopHeaderContainerData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "TopHeaderContainer" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "description" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "Links" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkItemData" },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<WebHeaderConfigrationBlockDataFragment, unknown>;
export const PDPSpecificationsElementDataFragmentDoc = {
  kind: "Document",
  definitions: [
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "PDPSpecificationsElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "PDPSpecificationsElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "empty" },
            name: { kind: "Name", value: "_metadata" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "key" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<PDPSpecificationsElementDataFragment, unknown>;
export const ProductCarouselElementDataFragmentDoc = {
  kind: "Document",
  definitions: [
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ProductCarouselElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ProductCarouselElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "Heading" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "CarouselSource" } },
          { kind: "Field", name: { kind: "Name", value: "CategoryID" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "VisibleElements" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "productsofView" } },
          { kind: "Field", name: { kind: "Name", value: "PagingSize" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentUrl" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "type" } },
          { kind: "Field", name: { kind: "Name", value: "base" } },
          { kind: "Field", name: { kind: "Name", value: "default" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ReferenceData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentReference" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "key" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<ProductCarouselElementDataFragment, unknown>;
export const CompositionComponentNodeDataFragmentDoc = {
  kind: "Document",
  definitions: [
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "CompositionComponentNodeData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ICompositionComponentNode" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "component" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "BlockData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "BannerItemElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ButtonElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "CompanyData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ContainerElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ContentTextElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "DictionaryData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "DictionaryItemData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ExpandableTextData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "FAQsSectionData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "HeadingElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ImageBackgroundData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ImageItemElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ImageTextItemElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "MegaMenuGroupBlockData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "NavigationMenuBlockData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "NavigationMenuBlockFields" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "OfficeLocationData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "PageSeoSettingsData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ParagraphElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ProductCardElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ProductCardListElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "SocialMediaBlockData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "SocialMediaBlocksData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "TopHeaderContainerData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "VideoElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: {
                    kind: "Name",
                    value: "WebFooterConfigrationBlockData",
                  },
                },
                {
                  kind: "FragmentSpread",
                  name: {
                    kind: "Name",
                    value: "WebHeaderConfigrationBlockData",
                  },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "PDPSpecificationsElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ProductCarouselElementData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentUrl" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "type" } },
          { kind: "Field", name: { kind: "Name", value: "base" } },
          { kind: "Field", name: { kind: "Name", value: "default" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "IContentInfo" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "IContentMetadata" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "key" } },
          { kind: "Field", name: { kind: "Name", value: "locale" } },
          { kind: "Field", name: { kind: "Name", value: "types" } },
          { kind: "Field", name: { kind: "Name", value: "displayName" } },
          { kind: "Field", name: { kind: "Name", value: "version" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "IContentData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "_IContent" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "_metadata" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "IContentInfo" },
                },
              ],
            },
          },
          {
            kind: "Field",
            alias: { kind: "Name", value: "_type" },
            name: { kind: "Name", value: "__typename" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "IElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "_IComponent" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "_metadata" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "IContentInfo" },
                },
              ],
            },
          },
          {
            kind: "Field",
            alias: { kind: "Name", value: "_type" },
            name: { kind: "Name", value: "__typename" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ReferenceData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentReference" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "key" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "DictionaryItemPropertyData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "DictionaryItemProperty" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "DictionaryItemKey" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "DictionaryItemValue" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ContentTextElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentTextElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "HeadingText" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "Paragraph" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "HeadingElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "HeadingElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "HeadingText" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "IContentListItem" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "_IContent" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "FragmentSpread",
            name: { kind: "Name", value: "IContentData" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkItemData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "Link" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "title" } },
          { kind: "Field", name: { kind: "Name", value: "text" } },
          { kind: "Field", name: { kind: "Name", value: "target" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "NavigationMenuBlockFields" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "NavigationMenuBlock" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "FragmentSpread",
            name: { kind: "Name", value: "IElementData" },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "MenuNavigationHeading" },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "Link" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkItemData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ThumbnailBanner" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "NavigationMenuBlockData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "NavigationMenuBlock" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "FragmentSpread",
            name: { kind: "Name", value: "NavigationMenuBlockFields" },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "SubMenuItem" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "NavigationMenuBlockFields" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ButtonElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ButtonElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "ButtonText" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "ButtonLink" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "className" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkPropertyData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "Link" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "title" } },
          { kind: "Field", name: { kind: "Name", value: "text" } },
          { kind: "Field", name: { kind: "Name", value: "target" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "SocialMediaBlockData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "SocialMediaBlock" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "URLMedia" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkPropertyData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "imageIcon" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  name: { kind: "Name", value: "ImageDesktop" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "FragmentSpread",
                        name: { kind: "Name", value: "ReferenceData" },
                      },
                    ],
                  },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "ImageMobile" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "FragmentSpread",
                        name: { kind: "Name", value: "ReferenceData" },
                      },
                    ],
                  },
                },
                { kind: "Field", name: { kind: "Name", value: "Loading" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "OverlayColor" },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "OverlayOpacity" },
                },
                { kind: "Field", name: { kind: "Name", value: "Alt" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "IsFullWidthImage" },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "IsBackground" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "SocialMediaBlocksData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "SocialMediaBlocks" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "ListItems" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "SocialMediaBlockData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "MegaMenuGroupBlockData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "MegaMenuGroupBlock" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "MenuMenuHeading" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "MegaMenuUrl" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "MegaMenuContentArea" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "IContentListItem" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "NavigationMenuBlockData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ButtonElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "SocialMediaBlockData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ContentTextElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "SocialMediaBlocksData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "ExpandableMobile" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ImageItemElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ImageItemElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "ImageDesktop" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ImageMobile" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "Loading" } },
          { kind: "Field", name: { kind: "Name", value: "Alt" } },
          { kind: "Field", name: { kind: "Name", value: "IsFullWidthImage" } },
          { kind: "Field", name: { kind: "Name", value: "IsBackground" } },
          { kind: "Field", name: { kind: "Name", value: "OverlayOpacity" } },
          { kind: "Field", name: { kind: "Name", value: "OverlayColor" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "TopHeaderContainerData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "TopHeaderContainer" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "description" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "Links" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkItemData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "BlockData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "_IComponent" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "FragmentSpread",
            name: { kind: "Name", value: "IContentData" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "_IComponent" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "FragmentSpread",
            name: { kind: "Name", value: "IElementData" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "BannerItemElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "BannerItemElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "HeadingText" } },
          { kind: "Field", name: { kind: "Name", value: "SubHeading" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "RichText" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "BackgroundLink" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ImageDesktop" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ImageMobile" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "OverlayColor" } },
          { kind: "Field", name: { kind: "Name", value: "OverlayOpacity" } },
          { kind: "Field", name: { kind: "Name", value: "Alt" } },
          { kind: "Field", name: { kind: "Name", value: "IsFullWidthImage" } },
          { kind: "Field", name: { kind: "Name", value: "Loading" } },
          { kind: "Field", name: { kind: "Name", value: "ButtonText" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "ButtonLink" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "CssClass" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "CompanyData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "Company" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "Name" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "Logo" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ContainerElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContainerElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "Items" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "TypeOfItems" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "DictionaryData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "Dictionary" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "DictionaryItems" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "DictionaryItemPropertyData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "DictionaryKey" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "DictionaryItemData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "DictionaryItem" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "DictionaryItemKey" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "DictionaryItemValue" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ExpandableTextData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ExpandableText" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "ContentText" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "Threshold" } },
          { kind: "Field", name: { kind: "Name", value: "ShowLessText" } },
          { kind: "Field", name: { kind: "Name", value: "ReadMoreText" } },
          { kind: "Field", name: { kind: "Name", value: "MobileThreshold" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "FAQsSectionData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "FAQsSection" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "HeadingText" } },
          { kind: "Field", name: { kind: "Name", value: "allowMultiple" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "ListItem" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ContentTextElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "HeadingElementData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ImageBackgroundData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ImageBackground" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "ImageDesktop" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ImageMobile" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "Alt" } },
          { kind: "Field", name: { kind: "Name", value: "IsFullIWidthImage" } },
          { kind: "Field", name: { kind: "Name", value: "Loading" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ImageTextItemElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ImageTextItemElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "Heading" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "RichText" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "Image" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ImageMobile" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "Alt" } },
          { kind: "Field", name: { kind: "Name", value: "IsFullWidthImage" } },
          { kind: "Field", name: { kind: "Name", value: "Loading" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "BackgroundLink" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ButtonLink" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "ButtonText" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "ContentImagePosition" },
          },
          { kind: "Field", name: { kind: "Name", value: "CssClass" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "OfficeLocationData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "OfficeLocation" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "OfficeTitle" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "OfficeAddressStreet1" },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "OfficeAddressStreet2" },
          },
          { kind: "Field", name: { kind: "Name", value: "OfficeAddressCity" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "OfficeAddressPostalCode" },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "OfficeAddressCountry" },
          },
          { kind: "Field", name: { kind: "Name", value: "OfficePhone" } },
          { kind: "Field", name: { kind: "Name", value: "OfficeEmail" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "PageSeoSettingsData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "PageSeoSettings" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "MetaTitle" } },
          { kind: "Field", name: { kind: "Name", value: "MetaDescription" } },
          { kind: "Field", name: { kind: "Name", value: "MetaKeywords" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "ThumbnailImage" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ParagraphElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ParagraphElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "text" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ProductCardElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ProductCardElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "ProductName" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "Image" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ShortDescription" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "InventoryStatus" } },
          { kind: "Field", name: { kind: "Name", value: "inventory" } },
          { kind: "Field", name: { kind: "Name", value: "CanBuy" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ProductCardListElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ProductCardListElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "CategoryID" } },
          { kind: "Field", name: { kind: "Name", value: "EnableFilter" } },
          { kind: "Field", name: { kind: "Name", value: "EnableSorting" } },
          { kind: "Field", name: { kind: "Name", value: "DefaultView" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "EnableProductCount" },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "VisibleElements" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "PagingSize" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "VideoElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "VideoElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "Video" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "Placeholder" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "VideoUrl" } },
          { kind: "Field", name: { kind: "Name", value: "Autoplay" } },
          { kind: "Field", name: { kind: "Name", value: "PlayOnPopup" } },
          { kind: "Field", name: { kind: "Name", value: "Loading" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "WebFooterConfigrationBlockData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "WebFooterConfigrationBlock" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "SiteLogoFooter" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "LogoAltText" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "LocationDetails" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ButtonURLFooter" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkItemData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "FooterNavigation" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "IContentListItem" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "MegaMenuGroupBlockData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "SocialMediaArea" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "IContentListItem" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "SocialMediaBlockData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "CopyrightText" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "TermsAndConditionsArea" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkItemData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "paymentmethodarea" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "IContentListItem" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ImageItemElementData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "WebHeaderConfigrationBlockData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "WebHeaderConfigrationBlock" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "HeaderCTA" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "TopNavigationHeader" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "MegaMenuGroupBlockData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "TopHeaderContainerData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "MainNavigationHeader" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "MegaMenuGroupBlockData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "SearchBarText" } },
          { kind: "Field", name: { kind: "Name", value: "SiteLogoAltText" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "SiteLogoIcon" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "SiteSearchEnable" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "PDPSpecificationsElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "PDPSpecificationsElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "empty" },
            name: { kind: "Name", value: "_metadata" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "key" } },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ProductCarouselElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ProductCarouselElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "Heading" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "CarouselSource" } },
          { kind: "Field", name: { kind: "Name", value: "CategoryID" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "VisibleElements" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "productsofView" } },
          { kind: "Field", name: { kind: "Name", value: "PagingSize" } },
        ],
      },
    },
  ],
} as unknown as DocumentNode<CompositionComponentNodeDataFragment, unknown>;
export const ExperienceDataFragmentDoc = {
  kind: "Document",
  definitions: [
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ExperienceData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "_IExperience" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "composition" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "CompositionNodeData" },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "nodes" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "FragmentSpread",
                        name: { kind: "Name", value: "CompositionNodeData" },
                      },
                      {
                        kind: "InlineFragment",
                        typeCondition: {
                          kind: "NamedType",
                          name: {
                            kind: "Name",
                            value: "ICompositionStructureNode",
                          },
                        },
                        selectionSet: {
                          kind: "SelectionSet",
                          selections: [
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "nodes" },
                              selectionSet: {
                                kind: "SelectionSet",
                                selections: [
                                  {
                                    kind: "FragmentSpread",
                                    name: {
                                      kind: "Name",
                                      value: "CompositionNodeData",
                                    },
                                  },
                                  {
                                    kind: "InlineFragment",
                                    typeCondition: {
                                      kind: "NamedType",
                                      name: {
                                        kind: "Name",
                                        value: "ICompositionStructureNode",
                                      },
                                    },
                                    selectionSet: {
                                      kind: "SelectionSet",
                                      selections: [
                                        {
                                          kind: "Field",
                                          name: {
                                            kind: "Name",
                                            value: "nodes",
                                          },
                                          selectionSet: {
                                            kind: "SelectionSet",
                                            selections: [
                                              {
                                                kind: "FragmentSpread",
                                                name: {
                                                  kind: "Name",
                                                  value: "CompositionNodeData",
                                                },
                                              },
                                              {
                                                kind: "InlineFragment",
                                                typeCondition: {
                                                  kind: "NamedType",
                                                  name: {
                                                    kind: "Name",
                                                    value:
                                                      "ICompositionStructureNode",
                                                  },
                                                },
                                                selectionSet: {
                                                  kind: "SelectionSet",
                                                  selections: [
                                                    {
                                                      kind: "Field",
                                                      name: {
                                                        kind: "Name",
                                                        value: "nodes",
                                                      },
                                                      selectionSet: {
                                                        kind: "SelectionSet",
                                                        selections: [
                                                          {
                                                            kind: "FragmentSpread",
                                                            name: {
                                                              kind: "Name",
                                                              value:
                                                                "CompositionNodeData",
                                                            },
                                                          },
                                                          {
                                                            kind: "FragmentSpread",
                                                            name: {
                                                              kind: "Name",
                                                              value:
                                                                "CompositionComponentNodeData",
                                                            },
                                                          },
                                                        ],
                                                      },
                                                    },
                                                  ],
                                                },
                                              },
                                            ],
                                          },
                                        },
                                      ],
                                    },
                                  },
                                ],
                              },
                            },
                          ],
                        },
                      },
                      {
                        kind: "FragmentSpread",
                        name: {
                          kind: "Name",
                          value: "CompositionComponentNodeData",
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentUrl" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "type" } },
          { kind: "Field", name: { kind: "Name", value: "base" } },
          { kind: "Field", name: { kind: "Name", value: "default" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "IContentInfo" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "IContentMetadata" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "key" } },
          { kind: "Field", name: { kind: "Name", value: "locale" } },
          { kind: "Field", name: { kind: "Name", value: "types" } },
          { kind: "Field", name: { kind: "Name", value: "displayName" } },
          { kind: "Field", name: { kind: "Name", value: "version" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "IContentData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "_IContent" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "_metadata" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "IContentInfo" },
                },
              ],
            },
          },
          {
            kind: "Field",
            alias: { kind: "Name", value: "_type" },
            name: { kind: "Name", value: "__typename" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "BlockData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "_IComponent" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "FragmentSpread",
            name: { kind: "Name", value: "IContentData" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "IElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "_IComponent" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "_metadata" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "IContentInfo" },
                },
              ],
            },
          },
          {
            kind: "Field",
            alias: { kind: "Name", value: "_type" },
            name: { kind: "Name", value: "__typename" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "_IComponent" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "FragmentSpread",
            name: { kind: "Name", value: "IElementData" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ReferenceData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentReference" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "key" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "BannerItemElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "BannerItemElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "HeadingText" } },
          { kind: "Field", name: { kind: "Name", value: "SubHeading" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "RichText" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "BackgroundLink" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ImageDesktop" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ImageMobile" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "OverlayColor" } },
          { kind: "Field", name: { kind: "Name", value: "OverlayOpacity" } },
          { kind: "Field", name: { kind: "Name", value: "Alt" } },
          { kind: "Field", name: { kind: "Name", value: "IsFullWidthImage" } },
          { kind: "Field", name: { kind: "Name", value: "Loading" } },
          { kind: "Field", name: { kind: "Name", value: "ButtonText" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "ButtonLink" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "CssClass" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ButtonElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ButtonElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "ButtonText" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "ButtonLink" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "className" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "CompanyData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "Company" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "Name" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "Logo" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ContainerElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContainerElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "Items" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "TypeOfItems" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ContentTextElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentTextElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "HeadingText" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "Paragraph" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "DictionaryItemPropertyData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "DictionaryItemProperty" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "DictionaryItemKey" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "DictionaryItemValue" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "DictionaryData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "Dictionary" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "DictionaryItems" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "DictionaryItemPropertyData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "DictionaryKey" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "DictionaryItemData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "DictionaryItem" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "DictionaryItemKey" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "DictionaryItemValue" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ExpandableTextData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ExpandableText" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "ContentText" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "Threshold" } },
          { kind: "Field", name: { kind: "Name", value: "ShowLessText" } },
          { kind: "Field", name: { kind: "Name", value: "ReadMoreText" } },
          { kind: "Field", name: { kind: "Name", value: "MobileThreshold" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "HeadingElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "HeadingElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "HeadingText" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "FAQsSectionData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "FAQsSection" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "HeadingText" } },
          { kind: "Field", name: { kind: "Name", value: "allowMultiple" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "ListItem" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ContentTextElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "HeadingElementData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ImageBackgroundData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ImageBackground" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "ImageDesktop" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ImageMobile" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "Alt" } },
          { kind: "Field", name: { kind: "Name", value: "IsFullIWidthImage" } },
          { kind: "Field", name: { kind: "Name", value: "Loading" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ImageItemElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ImageItemElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "ImageDesktop" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ImageMobile" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "Loading" } },
          { kind: "Field", name: { kind: "Name", value: "Alt" } },
          { kind: "Field", name: { kind: "Name", value: "IsFullWidthImage" } },
          { kind: "Field", name: { kind: "Name", value: "IsBackground" } },
          { kind: "Field", name: { kind: "Name", value: "OverlayOpacity" } },
          { kind: "Field", name: { kind: "Name", value: "OverlayColor" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ImageTextItemElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ImageTextItemElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "Heading" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "RichText" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "Image" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ImageMobile" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "Alt" } },
          { kind: "Field", name: { kind: "Name", value: "IsFullWidthImage" } },
          { kind: "Field", name: { kind: "Name", value: "Loading" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "BackgroundLink" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ButtonLink" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "ButtonText" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "ContentImagePosition" },
          },
          { kind: "Field", name: { kind: "Name", value: "CssClass" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "IContentListItem" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "_IContent" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "FragmentSpread",
            name: { kind: "Name", value: "IContentData" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkItemData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "Link" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "title" } },
          { kind: "Field", name: { kind: "Name", value: "text" } },
          { kind: "Field", name: { kind: "Name", value: "target" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "NavigationMenuBlockFields" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "NavigationMenuBlock" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "FragmentSpread",
            name: { kind: "Name", value: "IElementData" },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "MenuNavigationHeading" },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "Link" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkItemData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ThumbnailBanner" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "NavigationMenuBlockData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "NavigationMenuBlock" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "FragmentSpread",
            name: { kind: "Name", value: "NavigationMenuBlockFields" },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "SubMenuItem" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "NavigationMenuBlockFields" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkPropertyData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "Link" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "title" } },
          { kind: "Field", name: { kind: "Name", value: "text" } },
          { kind: "Field", name: { kind: "Name", value: "target" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "SocialMediaBlockData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "SocialMediaBlock" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "URLMedia" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkPropertyData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "imageIcon" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  name: { kind: "Name", value: "ImageDesktop" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "FragmentSpread",
                        name: { kind: "Name", value: "ReferenceData" },
                      },
                    ],
                  },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "ImageMobile" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "FragmentSpread",
                        name: { kind: "Name", value: "ReferenceData" },
                      },
                    ],
                  },
                },
                { kind: "Field", name: { kind: "Name", value: "Loading" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "OverlayColor" },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "OverlayOpacity" },
                },
                { kind: "Field", name: { kind: "Name", value: "Alt" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "IsFullWidthImage" },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "IsBackground" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "SocialMediaBlocksData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "SocialMediaBlocks" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "ListItems" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "SocialMediaBlockData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "MegaMenuGroupBlockData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "MegaMenuGroupBlock" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "MenuMenuHeading" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "MegaMenuUrl" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "MegaMenuContentArea" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "IContentListItem" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "NavigationMenuBlockData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ButtonElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "SocialMediaBlockData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ContentTextElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "SocialMediaBlocksData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "ExpandableMobile" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "OfficeLocationData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "OfficeLocation" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "OfficeTitle" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "OfficeAddressStreet1" },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "OfficeAddressStreet2" },
          },
          { kind: "Field", name: { kind: "Name", value: "OfficeAddressCity" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "OfficeAddressPostalCode" },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "OfficeAddressCountry" },
          },
          { kind: "Field", name: { kind: "Name", value: "OfficePhone" } },
          { kind: "Field", name: { kind: "Name", value: "OfficeEmail" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "PageSeoSettingsData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "PageSeoSettings" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "MetaTitle" } },
          { kind: "Field", name: { kind: "Name", value: "MetaDescription" } },
          { kind: "Field", name: { kind: "Name", value: "MetaKeywords" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "ThumbnailImage" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ParagraphElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ParagraphElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "text" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ProductCardElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ProductCardElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "ProductName" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "Image" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ShortDescription" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "InventoryStatus" } },
          { kind: "Field", name: { kind: "Name", value: "inventory" } },
          { kind: "Field", name: { kind: "Name", value: "CanBuy" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ProductCardListElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ProductCardListElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "CategoryID" } },
          { kind: "Field", name: { kind: "Name", value: "EnableFilter" } },
          { kind: "Field", name: { kind: "Name", value: "EnableSorting" } },
          { kind: "Field", name: { kind: "Name", value: "DefaultView" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "EnableProductCount" },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "VisibleElements" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "PagingSize" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "TopHeaderContainerData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "TopHeaderContainer" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "description" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "Links" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkItemData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "VideoElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "VideoElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "Video" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "Placeholder" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "VideoUrl" } },
          { kind: "Field", name: { kind: "Name", value: "Autoplay" } },
          { kind: "Field", name: { kind: "Name", value: "PlayOnPopup" } },
          { kind: "Field", name: { kind: "Name", value: "Loading" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "WebFooterConfigrationBlockData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "WebFooterConfigrationBlock" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "SiteLogoFooter" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "LogoAltText" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "LocationDetails" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ButtonURLFooter" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkItemData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "FooterNavigation" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "IContentListItem" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "MegaMenuGroupBlockData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "SocialMediaArea" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "IContentListItem" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "SocialMediaBlockData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "CopyrightText" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "TermsAndConditionsArea" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkItemData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "paymentmethodarea" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "IContentListItem" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ImageItemElementData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "WebHeaderConfigrationBlockData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "WebHeaderConfigrationBlock" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "HeaderCTA" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "TopNavigationHeader" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "MegaMenuGroupBlockData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "TopHeaderContainerData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "MainNavigationHeader" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "MegaMenuGroupBlockData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "SearchBarText" } },
          { kind: "Field", name: { kind: "Name", value: "SiteLogoAltText" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "SiteLogoIcon" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "SiteSearchEnable" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "PDPSpecificationsElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "PDPSpecificationsElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "empty" },
            name: { kind: "Name", value: "_metadata" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "key" } },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ProductCarouselElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ProductCarouselElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "Heading" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "CarouselSource" } },
          { kind: "Field", name: { kind: "Name", value: "CategoryID" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "VisibleElements" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "productsofView" } },
          { kind: "Field", name: { kind: "Name", value: "PagingSize" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "CompositionNodeData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ICompositionNode" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "name" },
            name: { kind: "Name", value: "displayName" },
          },
          {
            kind: "Field",
            alias: { kind: "Name", value: "layoutType" },
            name: { kind: "Name", value: "nodeType" },
          },
          { kind: "Field", name: { kind: "Name", value: "type" } },
          { kind: "Field", name: { kind: "Name", value: "key" } },
          {
            kind: "Field",
            alias: { kind: "Name", value: "template" },
            name: { kind: "Name", value: "displayTemplateKey" },
          },
          {
            kind: "Field",
            alias: { kind: "Name", value: "settings" },
            name: { kind: "Name", value: "displaySettings" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "key" } },
                { kind: "Field", name: { kind: "Name", value: "value" } },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "CompositionComponentNodeData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ICompositionComponentNode" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "component" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "BlockData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "BannerItemElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ButtonElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "CompanyData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ContainerElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ContentTextElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "DictionaryData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "DictionaryItemData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ExpandableTextData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "FAQsSectionData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "HeadingElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ImageBackgroundData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ImageItemElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ImageTextItemElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "MegaMenuGroupBlockData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "NavigationMenuBlockData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "NavigationMenuBlockFields" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "OfficeLocationData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "PageSeoSettingsData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ParagraphElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ProductCardElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ProductCardListElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "SocialMediaBlockData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "SocialMediaBlocksData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "TopHeaderContainerData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "VideoElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: {
                    kind: "Name",
                    value: "WebFooterConfigrationBlockData",
                  },
                },
                {
                  kind: "FragmentSpread",
                  name: {
                    kind: "Name",
                    value: "WebHeaderConfigrationBlockData",
                  },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "PDPSpecificationsElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ProductCarouselElementData" },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<ExperienceDataFragment, unknown>;
export const BlankExperienceDataFragmentDoc = {
  kind: "Document",
  definitions: [
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "BlankExperienceData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "BlankExperience" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "FragmentSpread",
            name: { kind: "Name", value: "ExperienceData" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "CompositionNodeData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ICompositionNode" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "name" },
            name: { kind: "Name", value: "displayName" },
          },
          {
            kind: "Field",
            alias: { kind: "Name", value: "layoutType" },
            name: { kind: "Name", value: "nodeType" },
          },
          { kind: "Field", name: { kind: "Name", value: "type" } },
          { kind: "Field", name: { kind: "Name", value: "key" } },
          {
            kind: "Field",
            alias: { kind: "Name", value: "template" },
            name: { kind: "Name", value: "displayTemplateKey" },
          },
          {
            kind: "Field",
            alias: { kind: "Name", value: "settings" },
            name: { kind: "Name", value: "displaySettings" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "key" } },
                { kind: "Field", name: { kind: "Name", value: "value" } },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentUrl" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "type" } },
          { kind: "Field", name: { kind: "Name", value: "base" } },
          { kind: "Field", name: { kind: "Name", value: "default" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "IContentInfo" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "IContentMetadata" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "key" } },
          { kind: "Field", name: { kind: "Name", value: "locale" } },
          { kind: "Field", name: { kind: "Name", value: "types" } },
          { kind: "Field", name: { kind: "Name", value: "displayName" } },
          { kind: "Field", name: { kind: "Name", value: "version" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "IContentData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "_IContent" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "_metadata" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "IContentInfo" },
                },
              ],
            },
          },
          {
            kind: "Field",
            alias: { kind: "Name", value: "_type" },
            name: { kind: "Name", value: "__typename" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "BlockData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "_IComponent" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "FragmentSpread",
            name: { kind: "Name", value: "IContentData" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "IElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "_IComponent" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "_metadata" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "IContentInfo" },
                },
              ],
            },
          },
          {
            kind: "Field",
            alias: { kind: "Name", value: "_type" },
            name: { kind: "Name", value: "__typename" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "_IComponent" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "FragmentSpread",
            name: { kind: "Name", value: "IElementData" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ReferenceData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentReference" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "key" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "BannerItemElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "BannerItemElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "HeadingText" } },
          { kind: "Field", name: { kind: "Name", value: "SubHeading" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "RichText" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "BackgroundLink" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ImageDesktop" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ImageMobile" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "OverlayColor" } },
          { kind: "Field", name: { kind: "Name", value: "OverlayOpacity" } },
          { kind: "Field", name: { kind: "Name", value: "Alt" } },
          { kind: "Field", name: { kind: "Name", value: "IsFullWidthImage" } },
          { kind: "Field", name: { kind: "Name", value: "Loading" } },
          { kind: "Field", name: { kind: "Name", value: "ButtonText" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "ButtonLink" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "CssClass" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ButtonElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ButtonElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "ButtonText" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "ButtonLink" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "className" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "CompanyData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "Company" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "Name" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "Logo" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ContainerElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContainerElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "Items" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "TypeOfItems" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ContentTextElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentTextElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "HeadingText" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "Paragraph" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "DictionaryItemPropertyData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "DictionaryItemProperty" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "DictionaryItemKey" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "DictionaryItemValue" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "DictionaryData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "Dictionary" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "DictionaryItems" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "DictionaryItemPropertyData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "DictionaryKey" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "DictionaryItemData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "DictionaryItem" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "DictionaryItemKey" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "DictionaryItemValue" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ExpandableTextData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ExpandableText" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "ContentText" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "Threshold" } },
          { kind: "Field", name: { kind: "Name", value: "ShowLessText" } },
          { kind: "Field", name: { kind: "Name", value: "ReadMoreText" } },
          { kind: "Field", name: { kind: "Name", value: "MobileThreshold" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "HeadingElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "HeadingElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "HeadingText" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "FAQsSectionData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "FAQsSection" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "HeadingText" } },
          { kind: "Field", name: { kind: "Name", value: "allowMultiple" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "ListItem" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ContentTextElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "HeadingElementData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ImageBackgroundData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ImageBackground" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "ImageDesktop" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ImageMobile" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "Alt" } },
          { kind: "Field", name: { kind: "Name", value: "IsFullIWidthImage" } },
          { kind: "Field", name: { kind: "Name", value: "Loading" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ImageItemElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ImageItemElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "ImageDesktop" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ImageMobile" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "Loading" } },
          { kind: "Field", name: { kind: "Name", value: "Alt" } },
          { kind: "Field", name: { kind: "Name", value: "IsFullWidthImage" } },
          { kind: "Field", name: { kind: "Name", value: "IsBackground" } },
          { kind: "Field", name: { kind: "Name", value: "OverlayOpacity" } },
          { kind: "Field", name: { kind: "Name", value: "OverlayColor" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ImageTextItemElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ImageTextItemElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "Heading" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "RichText" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "Image" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ImageMobile" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "Alt" } },
          { kind: "Field", name: { kind: "Name", value: "IsFullWidthImage" } },
          { kind: "Field", name: { kind: "Name", value: "Loading" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "BackgroundLink" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ButtonLink" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "ButtonText" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "ContentImagePosition" },
          },
          { kind: "Field", name: { kind: "Name", value: "CssClass" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "IContentListItem" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "_IContent" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "FragmentSpread",
            name: { kind: "Name", value: "IContentData" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkItemData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "Link" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "title" } },
          { kind: "Field", name: { kind: "Name", value: "text" } },
          { kind: "Field", name: { kind: "Name", value: "target" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "NavigationMenuBlockFields" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "NavigationMenuBlock" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "FragmentSpread",
            name: { kind: "Name", value: "IElementData" },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "MenuNavigationHeading" },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "Link" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkItemData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ThumbnailBanner" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "NavigationMenuBlockData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "NavigationMenuBlock" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "FragmentSpread",
            name: { kind: "Name", value: "NavigationMenuBlockFields" },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "SubMenuItem" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "NavigationMenuBlockFields" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkPropertyData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "Link" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "title" } },
          { kind: "Field", name: { kind: "Name", value: "text" } },
          { kind: "Field", name: { kind: "Name", value: "target" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "SocialMediaBlockData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "SocialMediaBlock" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "URLMedia" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkPropertyData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "imageIcon" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  name: { kind: "Name", value: "ImageDesktop" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "FragmentSpread",
                        name: { kind: "Name", value: "ReferenceData" },
                      },
                    ],
                  },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "ImageMobile" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "FragmentSpread",
                        name: { kind: "Name", value: "ReferenceData" },
                      },
                    ],
                  },
                },
                { kind: "Field", name: { kind: "Name", value: "Loading" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "OverlayColor" },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "OverlayOpacity" },
                },
                { kind: "Field", name: { kind: "Name", value: "Alt" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "IsFullWidthImage" },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "IsBackground" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "SocialMediaBlocksData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "SocialMediaBlocks" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "ListItems" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "SocialMediaBlockData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "MegaMenuGroupBlockData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "MegaMenuGroupBlock" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "MenuMenuHeading" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "MegaMenuUrl" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "MegaMenuContentArea" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "IContentListItem" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "NavigationMenuBlockData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ButtonElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "SocialMediaBlockData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ContentTextElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "SocialMediaBlocksData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "ExpandableMobile" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "OfficeLocationData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "OfficeLocation" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "OfficeTitle" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "OfficeAddressStreet1" },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "OfficeAddressStreet2" },
          },
          { kind: "Field", name: { kind: "Name", value: "OfficeAddressCity" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "OfficeAddressPostalCode" },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "OfficeAddressCountry" },
          },
          { kind: "Field", name: { kind: "Name", value: "OfficePhone" } },
          { kind: "Field", name: { kind: "Name", value: "OfficeEmail" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "PageSeoSettingsData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "PageSeoSettings" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "MetaTitle" } },
          { kind: "Field", name: { kind: "Name", value: "MetaDescription" } },
          { kind: "Field", name: { kind: "Name", value: "MetaKeywords" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "ThumbnailImage" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ParagraphElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ParagraphElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "text" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ProductCardElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ProductCardElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "ProductName" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "Image" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ShortDescription" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "InventoryStatus" } },
          { kind: "Field", name: { kind: "Name", value: "inventory" } },
          { kind: "Field", name: { kind: "Name", value: "CanBuy" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ProductCardListElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ProductCardListElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "CategoryID" } },
          { kind: "Field", name: { kind: "Name", value: "EnableFilter" } },
          { kind: "Field", name: { kind: "Name", value: "EnableSorting" } },
          { kind: "Field", name: { kind: "Name", value: "DefaultView" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "EnableProductCount" },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "VisibleElements" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "PagingSize" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "TopHeaderContainerData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "TopHeaderContainer" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "description" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "Links" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkItemData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "VideoElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "VideoElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "Video" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "Placeholder" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "VideoUrl" } },
          { kind: "Field", name: { kind: "Name", value: "Autoplay" } },
          { kind: "Field", name: { kind: "Name", value: "PlayOnPopup" } },
          { kind: "Field", name: { kind: "Name", value: "Loading" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "WebFooterConfigrationBlockData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "WebFooterConfigrationBlock" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "SiteLogoFooter" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "LogoAltText" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "LocationDetails" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ButtonURLFooter" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkItemData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "FooterNavigation" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "IContentListItem" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "MegaMenuGroupBlockData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "SocialMediaArea" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "IContentListItem" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "SocialMediaBlockData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "CopyrightText" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "TermsAndConditionsArea" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkItemData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "paymentmethodarea" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "IContentListItem" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ImageItemElementData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "WebHeaderConfigrationBlockData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "WebHeaderConfigrationBlock" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "HeaderCTA" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "TopNavigationHeader" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "MegaMenuGroupBlockData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "TopHeaderContainerData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "MainNavigationHeader" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "MegaMenuGroupBlockData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "SearchBarText" } },
          { kind: "Field", name: { kind: "Name", value: "SiteLogoAltText" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "SiteLogoIcon" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "SiteSearchEnable" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "PDPSpecificationsElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "PDPSpecificationsElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "empty" },
            name: { kind: "Name", value: "_metadata" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "key" } },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ProductCarouselElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ProductCarouselElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "Heading" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "CarouselSource" } },
          { kind: "Field", name: { kind: "Name", value: "CategoryID" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "VisibleElements" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "productsofView" } },
          { kind: "Field", name: { kind: "Name", value: "PagingSize" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "CompositionComponentNodeData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ICompositionComponentNode" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "component" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "BlockData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "BannerItemElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ButtonElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "CompanyData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ContainerElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ContentTextElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "DictionaryData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "DictionaryItemData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ExpandableTextData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "FAQsSectionData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "HeadingElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ImageBackgroundData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ImageItemElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ImageTextItemElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "MegaMenuGroupBlockData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "NavigationMenuBlockData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "NavigationMenuBlockFields" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "OfficeLocationData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "PageSeoSettingsData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ParagraphElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ProductCardElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ProductCardListElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "SocialMediaBlockData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "SocialMediaBlocksData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "TopHeaderContainerData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "VideoElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: {
                    kind: "Name",
                    value: "WebFooterConfigrationBlockData",
                  },
                },
                {
                  kind: "FragmentSpread",
                  name: {
                    kind: "Name",
                    value: "WebHeaderConfigrationBlockData",
                  },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "PDPSpecificationsElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ProductCarouselElementData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ExperienceData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "_IExperience" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "composition" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "CompositionNodeData" },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "nodes" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "FragmentSpread",
                        name: { kind: "Name", value: "CompositionNodeData" },
                      },
                      {
                        kind: "InlineFragment",
                        typeCondition: {
                          kind: "NamedType",
                          name: {
                            kind: "Name",
                            value: "ICompositionStructureNode",
                          },
                        },
                        selectionSet: {
                          kind: "SelectionSet",
                          selections: [
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "nodes" },
                              selectionSet: {
                                kind: "SelectionSet",
                                selections: [
                                  {
                                    kind: "FragmentSpread",
                                    name: {
                                      kind: "Name",
                                      value: "CompositionNodeData",
                                    },
                                  },
                                  {
                                    kind: "InlineFragment",
                                    typeCondition: {
                                      kind: "NamedType",
                                      name: {
                                        kind: "Name",
                                        value: "ICompositionStructureNode",
                                      },
                                    },
                                    selectionSet: {
                                      kind: "SelectionSet",
                                      selections: [
                                        {
                                          kind: "Field",
                                          name: {
                                            kind: "Name",
                                            value: "nodes",
                                          },
                                          selectionSet: {
                                            kind: "SelectionSet",
                                            selections: [
                                              {
                                                kind: "FragmentSpread",
                                                name: {
                                                  kind: "Name",
                                                  value: "CompositionNodeData",
                                                },
                                              },
                                              {
                                                kind: "InlineFragment",
                                                typeCondition: {
                                                  kind: "NamedType",
                                                  name: {
                                                    kind: "Name",
                                                    value:
                                                      "ICompositionStructureNode",
                                                  },
                                                },
                                                selectionSet: {
                                                  kind: "SelectionSet",
                                                  selections: [
                                                    {
                                                      kind: "Field",
                                                      name: {
                                                        kind: "Name",
                                                        value: "nodes",
                                                      },
                                                      selectionSet: {
                                                        kind: "SelectionSet",
                                                        selections: [
                                                          {
                                                            kind: "FragmentSpread",
                                                            name: {
                                                              kind: "Name",
                                                              value:
                                                                "CompositionNodeData",
                                                            },
                                                          },
                                                          {
                                                            kind: "FragmentSpread",
                                                            name: {
                                                              kind: "Name",
                                                              value:
                                                                "CompositionComponentNodeData",
                                                            },
                                                          },
                                                        ],
                                                      },
                                                    },
                                                  ],
                                                },
                                              },
                                            ],
                                          },
                                        },
                                      ],
                                    },
                                  },
                                ],
                              },
                            },
                          ],
                        },
                      },
                      {
                        kind: "FragmentSpread",
                        name: {
                          kind: "Name",
                          value: "CompositionComponentNodeData",
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<BlankExperienceDataFragment, unknown>;
export const ProductDetailExperienceDataFragmentDoc = {
  kind: "Document",
  definitions: [
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ProductDetailExperienceData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ProductDetailExperience" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "SEOsettings" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "PageSeoSettingsData" },
                },
              ],
            },
          },
          {
            kind: "FragmentSpread",
            name: { kind: "Name", value: "ExperienceData" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentUrl" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "type" } },
          { kind: "Field", name: { kind: "Name", value: "base" } },
          { kind: "Field", name: { kind: "Name", value: "default" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ReferenceData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentReference" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "key" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "CompositionNodeData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ICompositionNode" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "name" },
            name: { kind: "Name", value: "displayName" },
          },
          {
            kind: "Field",
            alias: { kind: "Name", value: "layoutType" },
            name: { kind: "Name", value: "nodeType" },
          },
          { kind: "Field", name: { kind: "Name", value: "type" } },
          { kind: "Field", name: { kind: "Name", value: "key" } },
          {
            kind: "Field",
            alias: { kind: "Name", value: "template" },
            name: { kind: "Name", value: "displayTemplateKey" },
          },
          {
            kind: "Field",
            alias: { kind: "Name", value: "settings" },
            name: { kind: "Name", value: "displaySettings" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "key" } },
                { kind: "Field", name: { kind: "Name", value: "value" } },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "IContentInfo" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "IContentMetadata" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "key" } },
          { kind: "Field", name: { kind: "Name", value: "locale" } },
          { kind: "Field", name: { kind: "Name", value: "types" } },
          { kind: "Field", name: { kind: "Name", value: "displayName" } },
          { kind: "Field", name: { kind: "Name", value: "version" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "IContentData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "_IContent" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "_metadata" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "IContentInfo" },
                },
              ],
            },
          },
          {
            kind: "Field",
            alias: { kind: "Name", value: "_type" },
            name: { kind: "Name", value: "__typename" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "BlockData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "_IComponent" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "FragmentSpread",
            name: { kind: "Name", value: "IContentData" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "IElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "_IComponent" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "_metadata" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "IContentInfo" },
                },
              ],
            },
          },
          {
            kind: "Field",
            alias: { kind: "Name", value: "_type" },
            name: { kind: "Name", value: "__typename" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "_IComponent" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "FragmentSpread",
            name: { kind: "Name", value: "IElementData" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "BannerItemElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "BannerItemElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "HeadingText" } },
          { kind: "Field", name: { kind: "Name", value: "SubHeading" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "RichText" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "BackgroundLink" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ImageDesktop" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ImageMobile" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "OverlayColor" } },
          { kind: "Field", name: { kind: "Name", value: "OverlayOpacity" } },
          { kind: "Field", name: { kind: "Name", value: "Alt" } },
          { kind: "Field", name: { kind: "Name", value: "IsFullWidthImage" } },
          { kind: "Field", name: { kind: "Name", value: "Loading" } },
          { kind: "Field", name: { kind: "Name", value: "ButtonText" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "ButtonLink" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "CssClass" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ButtonElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ButtonElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "ButtonText" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "ButtonLink" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "className" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "CompanyData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "Company" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "Name" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "Logo" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ContainerElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContainerElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "Items" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "TypeOfItems" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ContentTextElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentTextElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "HeadingText" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "Paragraph" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "DictionaryItemPropertyData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "DictionaryItemProperty" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "DictionaryItemKey" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "DictionaryItemValue" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "DictionaryData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "Dictionary" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "DictionaryItems" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "DictionaryItemPropertyData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "DictionaryKey" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "DictionaryItemData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "DictionaryItem" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "DictionaryItemKey" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "DictionaryItemValue" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ExpandableTextData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ExpandableText" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "ContentText" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "Threshold" } },
          { kind: "Field", name: { kind: "Name", value: "ShowLessText" } },
          { kind: "Field", name: { kind: "Name", value: "ReadMoreText" } },
          { kind: "Field", name: { kind: "Name", value: "MobileThreshold" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "HeadingElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "HeadingElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "HeadingText" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "FAQsSectionData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "FAQsSection" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "HeadingText" } },
          { kind: "Field", name: { kind: "Name", value: "allowMultiple" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "ListItem" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ContentTextElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "HeadingElementData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ImageBackgroundData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ImageBackground" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "ImageDesktop" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ImageMobile" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "Alt" } },
          { kind: "Field", name: { kind: "Name", value: "IsFullIWidthImage" } },
          { kind: "Field", name: { kind: "Name", value: "Loading" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ImageItemElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ImageItemElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "ImageDesktop" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ImageMobile" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "Loading" } },
          { kind: "Field", name: { kind: "Name", value: "Alt" } },
          { kind: "Field", name: { kind: "Name", value: "IsFullWidthImage" } },
          { kind: "Field", name: { kind: "Name", value: "IsBackground" } },
          { kind: "Field", name: { kind: "Name", value: "OverlayOpacity" } },
          { kind: "Field", name: { kind: "Name", value: "OverlayColor" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ImageTextItemElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ImageTextItemElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "Heading" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "RichText" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "Image" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ImageMobile" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "Alt" } },
          { kind: "Field", name: { kind: "Name", value: "IsFullWidthImage" } },
          { kind: "Field", name: { kind: "Name", value: "Loading" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "BackgroundLink" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ButtonLink" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "ButtonText" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "ContentImagePosition" },
          },
          { kind: "Field", name: { kind: "Name", value: "CssClass" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "IContentListItem" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "_IContent" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "FragmentSpread",
            name: { kind: "Name", value: "IContentData" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkItemData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "Link" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "title" } },
          { kind: "Field", name: { kind: "Name", value: "text" } },
          { kind: "Field", name: { kind: "Name", value: "target" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "NavigationMenuBlockFields" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "NavigationMenuBlock" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "FragmentSpread",
            name: { kind: "Name", value: "IElementData" },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "MenuNavigationHeading" },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "Link" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkItemData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ThumbnailBanner" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "NavigationMenuBlockData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "NavigationMenuBlock" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "FragmentSpread",
            name: { kind: "Name", value: "NavigationMenuBlockFields" },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "SubMenuItem" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "NavigationMenuBlockFields" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkPropertyData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "Link" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "title" } },
          { kind: "Field", name: { kind: "Name", value: "text" } },
          { kind: "Field", name: { kind: "Name", value: "target" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "SocialMediaBlockData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "SocialMediaBlock" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "URLMedia" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkPropertyData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "imageIcon" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  name: { kind: "Name", value: "ImageDesktop" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "FragmentSpread",
                        name: { kind: "Name", value: "ReferenceData" },
                      },
                    ],
                  },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "ImageMobile" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "FragmentSpread",
                        name: { kind: "Name", value: "ReferenceData" },
                      },
                    ],
                  },
                },
                { kind: "Field", name: { kind: "Name", value: "Loading" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "OverlayColor" },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "OverlayOpacity" },
                },
                { kind: "Field", name: { kind: "Name", value: "Alt" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "IsFullWidthImage" },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "IsBackground" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "SocialMediaBlocksData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "SocialMediaBlocks" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "ListItems" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "SocialMediaBlockData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "MegaMenuGroupBlockData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "MegaMenuGroupBlock" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "MenuMenuHeading" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "MegaMenuUrl" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "MegaMenuContentArea" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "IContentListItem" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "NavigationMenuBlockData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ButtonElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "SocialMediaBlockData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ContentTextElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "SocialMediaBlocksData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "ExpandableMobile" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "OfficeLocationData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "OfficeLocation" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "OfficeTitle" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "OfficeAddressStreet1" },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "OfficeAddressStreet2" },
          },
          { kind: "Field", name: { kind: "Name", value: "OfficeAddressCity" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "OfficeAddressPostalCode" },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "OfficeAddressCountry" },
          },
          { kind: "Field", name: { kind: "Name", value: "OfficePhone" } },
          { kind: "Field", name: { kind: "Name", value: "OfficeEmail" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "PageSeoSettingsData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "PageSeoSettings" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "MetaTitle" } },
          { kind: "Field", name: { kind: "Name", value: "MetaDescription" } },
          { kind: "Field", name: { kind: "Name", value: "MetaKeywords" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "ThumbnailImage" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ParagraphElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ParagraphElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "text" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ProductCardElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ProductCardElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "ProductName" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "Image" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ShortDescription" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "InventoryStatus" } },
          { kind: "Field", name: { kind: "Name", value: "inventory" } },
          { kind: "Field", name: { kind: "Name", value: "CanBuy" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ProductCardListElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ProductCardListElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "CategoryID" } },
          { kind: "Field", name: { kind: "Name", value: "EnableFilter" } },
          { kind: "Field", name: { kind: "Name", value: "EnableSorting" } },
          { kind: "Field", name: { kind: "Name", value: "DefaultView" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "EnableProductCount" },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "VisibleElements" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "PagingSize" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "TopHeaderContainerData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "TopHeaderContainer" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "description" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "Links" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkItemData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "VideoElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "VideoElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "Video" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "Placeholder" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "VideoUrl" } },
          { kind: "Field", name: { kind: "Name", value: "Autoplay" } },
          { kind: "Field", name: { kind: "Name", value: "PlayOnPopup" } },
          { kind: "Field", name: { kind: "Name", value: "Loading" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "WebFooterConfigrationBlockData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "WebFooterConfigrationBlock" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "SiteLogoFooter" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "LogoAltText" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "LocationDetails" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ButtonURLFooter" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkItemData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "FooterNavigation" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "IContentListItem" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "MegaMenuGroupBlockData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "SocialMediaArea" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "IContentListItem" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "SocialMediaBlockData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "CopyrightText" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "TermsAndConditionsArea" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkItemData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "paymentmethodarea" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "IContentListItem" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ImageItemElementData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "WebHeaderConfigrationBlockData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "WebHeaderConfigrationBlock" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "HeaderCTA" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "TopNavigationHeader" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "MegaMenuGroupBlockData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "TopHeaderContainerData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "MainNavigationHeader" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "MegaMenuGroupBlockData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "SearchBarText" } },
          { kind: "Field", name: { kind: "Name", value: "SiteLogoAltText" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "SiteLogoIcon" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "SiteSearchEnable" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "PDPSpecificationsElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "PDPSpecificationsElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "empty" },
            name: { kind: "Name", value: "_metadata" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "key" } },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ProductCarouselElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ProductCarouselElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "Heading" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "CarouselSource" } },
          { kind: "Field", name: { kind: "Name", value: "CategoryID" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "VisibleElements" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "productsofView" } },
          { kind: "Field", name: { kind: "Name", value: "PagingSize" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "CompositionComponentNodeData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ICompositionComponentNode" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "component" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "BlockData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "BannerItemElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ButtonElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "CompanyData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ContainerElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ContentTextElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "DictionaryData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "DictionaryItemData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ExpandableTextData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "FAQsSectionData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "HeadingElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ImageBackgroundData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ImageItemElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ImageTextItemElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "MegaMenuGroupBlockData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "NavigationMenuBlockData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "NavigationMenuBlockFields" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "OfficeLocationData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "PageSeoSettingsData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ParagraphElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ProductCardElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ProductCardListElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "SocialMediaBlockData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "SocialMediaBlocksData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "TopHeaderContainerData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "VideoElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: {
                    kind: "Name",
                    value: "WebFooterConfigrationBlockData",
                  },
                },
                {
                  kind: "FragmentSpread",
                  name: {
                    kind: "Name",
                    value: "WebHeaderConfigrationBlockData",
                  },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "PDPSpecificationsElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ProductCarouselElementData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ExperienceData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "_IExperience" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "composition" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "CompositionNodeData" },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "nodes" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "FragmentSpread",
                        name: { kind: "Name", value: "CompositionNodeData" },
                      },
                      {
                        kind: "InlineFragment",
                        typeCondition: {
                          kind: "NamedType",
                          name: {
                            kind: "Name",
                            value: "ICompositionStructureNode",
                          },
                        },
                        selectionSet: {
                          kind: "SelectionSet",
                          selections: [
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "nodes" },
                              selectionSet: {
                                kind: "SelectionSet",
                                selections: [
                                  {
                                    kind: "FragmentSpread",
                                    name: {
                                      kind: "Name",
                                      value: "CompositionNodeData",
                                    },
                                  },
                                  {
                                    kind: "InlineFragment",
                                    typeCondition: {
                                      kind: "NamedType",
                                      name: {
                                        kind: "Name",
                                        value: "ICompositionStructureNode",
                                      },
                                    },
                                    selectionSet: {
                                      kind: "SelectionSet",
                                      selections: [
                                        {
                                          kind: "Field",
                                          name: {
                                            kind: "Name",
                                            value: "nodes",
                                          },
                                          selectionSet: {
                                            kind: "SelectionSet",
                                            selections: [
                                              {
                                                kind: "FragmentSpread",
                                                name: {
                                                  kind: "Name",
                                                  value: "CompositionNodeData",
                                                },
                                              },
                                              {
                                                kind: "InlineFragment",
                                                typeCondition: {
                                                  kind: "NamedType",
                                                  name: {
                                                    kind: "Name",
                                                    value:
                                                      "ICompositionStructureNode",
                                                  },
                                                },
                                                selectionSet: {
                                                  kind: "SelectionSet",
                                                  selections: [
                                                    {
                                                      kind: "Field",
                                                      name: {
                                                        kind: "Name",
                                                        value: "nodes",
                                                      },
                                                      selectionSet: {
                                                        kind: "SelectionSet",
                                                        selections: [
                                                          {
                                                            kind: "FragmentSpread",
                                                            name: {
                                                              kind: "Name",
                                                              value:
                                                                "CompositionNodeData",
                                                            },
                                                          },
                                                          {
                                                            kind: "FragmentSpread",
                                                            name: {
                                                              kind: "Name",
                                                              value:
                                                                "CompositionComponentNodeData",
                                                            },
                                                          },
                                                        ],
                                                      },
                                                    },
                                                  ],
                                                },
                                              },
                                            ],
                                          },
                                        },
                                      ],
                                    },
                                  },
                                ],
                              },
                            },
                          ],
                        },
                      },
                      {
                        kind: "FragmentSpread",
                        name: {
                          kind: "Name",
                          value: "CompositionComponentNodeData",
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<ProductDetailExperienceDataFragment, unknown>;
export const ProductListingEPageDataFragmentDoc = {
  kind: "Document",
  definitions: [
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ProductListingEPageData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ProductListingEPage" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "FragmentSpread",
            name: { kind: "Name", value: "ExperienceData" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "CompositionNodeData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ICompositionNode" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "name" },
            name: { kind: "Name", value: "displayName" },
          },
          {
            kind: "Field",
            alias: { kind: "Name", value: "layoutType" },
            name: { kind: "Name", value: "nodeType" },
          },
          { kind: "Field", name: { kind: "Name", value: "type" } },
          { kind: "Field", name: { kind: "Name", value: "key" } },
          {
            kind: "Field",
            alias: { kind: "Name", value: "template" },
            name: { kind: "Name", value: "displayTemplateKey" },
          },
          {
            kind: "Field",
            alias: { kind: "Name", value: "settings" },
            name: { kind: "Name", value: "displaySettings" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "key" } },
                { kind: "Field", name: { kind: "Name", value: "value" } },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentUrl" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "type" } },
          { kind: "Field", name: { kind: "Name", value: "base" } },
          { kind: "Field", name: { kind: "Name", value: "default" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "IContentInfo" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "IContentMetadata" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "key" } },
          { kind: "Field", name: { kind: "Name", value: "locale" } },
          { kind: "Field", name: { kind: "Name", value: "types" } },
          { kind: "Field", name: { kind: "Name", value: "displayName" } },
          { kind: "Field", name: { kind: "Name", value: "version" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "IContentData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "_IContent" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "_metadata" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "IContentInfo" },
                },
              ],
            },
          },
          {
            kind: "Field",
            alias: { kind: "Name", value: "_type" },
            name: { kind: "Name", value: "__typename" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "BlockData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "_IComponent" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "FragmentSpread",
            name: { kind: "Name", value: "IContentData" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "IElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "_IComponent" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "_metadata" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "IContentInfo" },
                },
              ],
            },
          },
          {
            kind: "Field",
            alias: { kind: "Name", value: "_type" },
            name: { kind: "Name", value: "__typename" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "_IComponent" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "FragmentSpread",
            name: { kind: "Name", value: "IElementData" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ReferenceData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentReference" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "key" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "BannerItemElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "BannerItemElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "HeadingText" } },
          { kind: "Field", name: { kind: "Name", value: "SubHeading" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "RichText" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "BackgroundLink" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ImageDesktop" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ImageMobile" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "OverlayColor" } },
          { kind: "Field", name: { kind: "Name", value: "OverlayOpacity" } },
          { kind: "Field", name: { kind: "Name", value: "Alt" } },
          { kind: "Field", name: { kind: "Name", value: "IsFullWidthImage" } },
          { kind: "Field", name: { kind: "Name", value: "Loading" } },
          { kind: "Field", name: { kind: "Name", value: "ButtonText" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "ButtonLink" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "CssClass" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ButtonElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ButtonElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "ButtonText" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "ButtonLink" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "className" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "CompanyData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "Company" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "Name" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "Logo" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ContainerElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContainerElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "Items" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "TypeOfItems" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ContentTextElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentTextElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "HeadingText" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "Paragraph" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "DictionaryItemPropertyData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "DictionaryItemProperty" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "DictionaryItemKey" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "DictionaryItemValue" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "DictionaryData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "Dictionary" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "DictionaryItems" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "DictionaryItemPropertyData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "DictionaryKey" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "DictionaryItemData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "DictionaryItem" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "DictionaryItemKey" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "DictionaryItemValue" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ExpandableTextData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ExpandableText" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "ContentText" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "Threshold" } },
          { kind: "Field", name: { kind: "Name", value: "ShowLessText" } },
          { kind: "Field", name: { kind: "Name", value: "ReadMoreText" } },
          { kind: "Field", name: { kind: "Name", value: "MobileThreshold" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "HeadingElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "HeadingElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "HeadingText" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "FAQsSectionData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "FAQsSection" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "HeadingText" } },
          { kind: "Field", name: { kind: "Name", value: "allowMultiple" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "ListItem" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ContentTextElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "HeadingElementData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ImageBackgroundData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ImageBackground" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "ImageDesktop" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ImageMobile" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "Alt" } },
          { kind: "Field", name: { kind: "Name", value: "IsFullIWidthImage" } },
          { kind: "Field", name: { kind: "Name", value: "Loading" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ImageItemElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ImageItemElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "ImageDesktop" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ImageMobile" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "Loading" } },
          { kind: "Field", name: { kind: "Name", value: "Alt" } },
          { kind: "Field", name: { kind: "Name", value: "IsFullWidthImage" } },
          { kind: "Field", name: { kind: "Name", value: "IsBackground" } },
          { kind: "Field", name: { kind: "Name", value: "OverlayOpacity" } },
          { kind: "Field", name: { kind: "Name", value: "OverlayColor" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ImageTextItemElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ImageTextItemElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "Heading" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "RichText" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "Image" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ImageMobile" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "Alt" } },
          { kind: "Field", name: { kind: "Name", value: "IsFullWidthImage" } },
          { kind: "Field", name: { kind: "Name", value: "Loading" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "BackgroundLink" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ButtonLink" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "ButtonText" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "ContentImagePosition" },
          },
          { kind: "Field", name: { kind: "Name", value: "CssClass" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "IContentListItem" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "_IContent" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "FragmentSpread",
            name: { kind: "Name", value: "IContentData" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkItemData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "Link" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "title" } },
          { kind: "Field", name: { kind: "Name", value: "text" } },
          { kind: "Field", name: { kind: "Name", value: "target" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "NavigationMenuBlockFields" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "NavigationMenuBlock" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "FragmentSpread",
            name: { kind: "Name", value: "IElementData" },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "MenuNavigationHeading" },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "Link" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkItemData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ThumbnailBanner" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "NavigationMenuBlockData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "NavigationMenuBlock" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "FragmentSpread",
            name: { kind: "Name", value: "NavigationMenuBlockFields" },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "SubMenuItem" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "NavigationMenuBlockFields" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkPropertyData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "Link" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "title" } },
          { kind: "Field", name: { kind: "Name", value: "text" } },
          { kind: "Field", name: { kind: "Name", value: "target" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "SocialMediaBlockData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "SocialMediaBlock" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "URLMedia" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkPropertyData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "imageIcon" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  name: { kind: "Name", value: "ImageDesktop" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "FragmentSpread",
                        name: { kind: "Name", value: "ReferenceData" },
                      },
                    ],
                  },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "ImageMobile" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "FragmentSpread",
                        name: { kind: "Name", value: "ReferenceData" },
                      },
                    ],
                  },
                },
                { kind: "Field", name: { kind: "Name", value: "Loading" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "OverlayColor" },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "OverlayOpacity" },
                },
                { kind: "Field", name: { kind: "Name", value: "Alt" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "IsFullWidthImage" },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "IsBackground" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "SocialMediaBlocksData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "SocialMediaBlocks" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "ListItems" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "SocialMediaBlockData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "MegaMenuGroupBlockData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "MegaMenuGroupBlock" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "MenuMenuHeading" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "MegaMenuUrl" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "MegaMenuContentArea" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "IContentListItem" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "NavigationMenuBlockData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ButtonElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "SocialMediaBlockData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ContentTextElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "SocialMediaBlocksData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "ExpandableMobile" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "OfficeLocationData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "OfficeLocation" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "OfficeTitle" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "OfficeAddressStreet1" },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "OfficeAddressStreet2" },
          },
          { kind: "Field", name: { kind: "Name", value: "OfficeAddressCity" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "OfficeAddressPostalCode" },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "OfficeAddressCountry" },
          },
          { kind: "Field", name: { kind: "Name", value: "OfficePhone" } },
          { kind: "Field", name: { kind: "Name", value: "OfficeEmail" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "PageSeoSettingsData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "PageSeoSettings" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "MetaTitle" } },
          { kind: "Field", name: { kind: "Name", value: "MetaDescription" } },
          { kind: "Field", name: { kind: "Name", value: "MetaKeywords" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "ThumbnailImage" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ParagraphElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ParagraphElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "text" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ProductCardElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ProductCardElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "ProductName" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "Image" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ShortDescription" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "InventoryStatus" } },
          { kind: "Field", name: { kind: "Name", value: "inventory" } },
          { kind: "Field", name: { kind: "Name", value: "CanBuy" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ProductCardListElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ProductCardListElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "CategoryID" } },
          { kind: "Field", name: { kind: "Name", value: "EnableFilter" } },
          { kind: "Field", name: { kind: "Name", value: "EnableSorting" } },
          { kind: "Field", name: { kind: "Name", value: "DefaultView" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "EnableProductCount" },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "VisibleElements" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "PagingSize" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "TopHeaderContainerData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "TopHeaderContainer" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "description" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "Links" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkItemData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "VideoElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "VideoElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "Video" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "Placeholder" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "VideoUrl" } },
          { kind: "Field", name: { kind: "Name", value: "Autoplay" } },
          { kind: "Field", name: { kind: "Name", value: "PlayOnPopup" } },
          { kind: "Field", name: { kind: "Name", value: "Loading" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "WebFooterConfigrationBlockData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "WebFooterConfigrationBlock" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "SiteLogoFooter" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "LogoAltText" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "LocationDetails" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ButtonURLFooter" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkItemData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "FooterNavigation" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "IContentListItem" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "MegaMenuGroupBlockData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "SocialMediaArea" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "IContentListItem" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "SocialMediaBlockData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "CopyrightText" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "TermsAndConditionsArea" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkItemData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "paymentmethodarea" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "IContentListItem" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ImageItemElementData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "WebHeaderConfigrationBlockData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "WebHeaderConfigrationBlock" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "HeaderCTA" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "TopNavigationHeader" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "MegaMenuGroupBlockData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "TopHeaderContainerData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "MainNavigationHeader" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "MegaMenuGroupBlockData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "SearchBarText" } },
          { kind: "Field", name: { kind: "Name", value: "SiteLogoAltText" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "SiteLogoIcon" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "SiteSearchEnable" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "PDPSpecificationsElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "PDPSpecificationsElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "empty" },
            name: { kind: "Name", value: "_metadata" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "key" } },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ProductCarouselElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ProductCarouselElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "Heading" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "CarouselSource" } },
          { kind: "Field", name: { kind: "Name", value: "CategoryID" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "VisibleElements" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "productsofView" } },
          { kind: "Field", name: { kind: "Name", value: "PagingSize" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "CompositionComponentNodeData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ICompositionComponentNode" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "component" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "BlockData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "BannerItemElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ButtonElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "CompanyData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ContainerElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ContentTextElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "DictionaryData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "DictionaryItemData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ExpandableTextData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "FAQsSectionData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "HeadingElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ImageBackgroundData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ImageItemElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ImageTextItemElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "MegaMenuGroupBlockData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "NavigationMenuBlockData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "NavigationMenuBlockFields" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "OfficeLocationData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "PageSeoSettingsData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ParagraphElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ProductCardElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ProductCardListElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "SocialMediaBlockData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "SocialMediaBlocksData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "TopHeaderContainerData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "VideoElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: {
                    kind: "Name",
                    value: "WebFooterConfigrationBlockData",
                  },
                },
                {
                  kind: "FragmentSpread",
                  name: {
                    kind: "Name",
                    value: "WebHeaderConfigrationBlockData",
                  },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "PDPSpecificationsElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ProductCarouselElementData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ExperienceData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "_IExperience" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "composition" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "CompositionNodeData" },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "nodes" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "FragmentSpread",
                        name: { kind: "Name", value: "CompositionNodeData" },
                      },
                      {
                        kind: "InlineFragment",
                        typeCondition: {
                          kind: "NamedType",
                          name: {
                            kind: "Name",
                            value: "ICompositionStructureNode",
                          },
                        },
                        selectionSet: {
                          kind: "SelectionSet",
                          selections: [
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "nodes" },
                              selectionSet: {
                                kind: "SelectionSet",
                                selections: [
                                  {
                                    kind: "FragmentSpread",
                                    name: {
                                      kind: "Name",
                                      value: "CompositionNodeData",
                                    },
                                  },
                                  {
                                    kind: "InlineFragment",
                                    typeCondition: {
                                      kind: "NamedType",
                                      name: {
                                        kind: "Name",
                                        value: "ICompositionStructureNode",
                                      },
                                    },
                                    selectionSet: {
                                      kind: "SelectionSet",
                                      selections: [
                                        {
                                          kind: "Field",
                                          name: {
                                            kind: "Name",
                                            value: "nodes",
                                          },
                                          selectionSet: {
                                            kind: "SelectionSet",
                                            selections: [
                                              {
                                                kind: "FragmentSpread",
                                                name: {
                                                  kind: "Name",
                                                  value: "CompositionNodeData",
                                                },
                                              },
                                              {
                                                kind: "InlineFragment",
                                                typeCondition: {
                                                  kind: "NamedType",
                                                  name: {
                                                    kind: "Name",
                                                    value:
                                                      "ICompositionStructureNode",
                                                  },
                                                },
                                                selectionSet: {
                                                  kind: "SelectionSet",
                                                  selections: [
                                                    {
                                                      kind: "Field",
                                                      name: {
                                                        kind: "Name",
                                                        value: "nodes",
                                                      },
                                                      selectionSet: {
                                                        kind: "SelectionSet",
                                                        selections: [
                                                          {
                                                            kind: "FragmentSpread",
                                                            name: {
                                                              kind: "Name",
                                                              value:
                                                                "CompositionNodeData",
                                                            },
                                                          },
                                                          {
                                                            kind: "FragmentSpread",
                                                            name: {
                                                              kind: "Name",
                                                              value:
                                                                "CompositionComponentNodeData",
                                                            },
                                                          },
                                                        ],
                                                      },
                                                    },
                                                  ],
                                                },
                                              },
                                            ],
                                          },
                                        },
                                      ],
                                    },
                                  },
                                ],
                              },
                            },
                          ],
                        },
                      },
                      {
                        kind: "FragmentSpread",
                        name: {
                          kind: "Name",
                          value: "CompositionComponentNodeData",
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<ProductListingEPageDataFragment, unknown>;
export const SectionDataFragmentDoc = {
  kind: "Document",
  definitions: [
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "SectionData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "Section" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "empty" },
            name: { kind: "Name", value: "_metadata" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "key" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<SectionDataFragment, unknown>;
export const PageDataFragmentDoc = {
  kind: "Document",
  definitions: [
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "PageData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "_IContent" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "FragmentSpread",
            name: { kind: "Name", value: "IContentData" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentUrl" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "type" } },
          { kind: "Field", name: { kind: "Name", value: "base" } },
          { kind: "Field", name: { kind: "Name", value: "default" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "IContentInfo" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "IContentMetadata" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "key" } },
          { kind: "Field", name: { kind: "Name", value: "locale" } },
          { kind: "Field", name: { kind: "Name", value: "types" } },
          { kind: "Field", name: { kind: "Name", value: "displayName" } },
          { kind: "Field", name: { kind: "Name", value: "version" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "IContentData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "_IContent" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "_metadata" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "IContentInfo" },
                },
              ],
            },
          },
          {
            kind: "Field",
            alias: { kind: "Name", value: "_type" },
            name: { kind: "Name", value: "__typename" },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<PageDataFragment, unknown>;
export const getFooterDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "getFooter" },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "footer" },
            name: { kind: "Name", value: "WebFooterConfigrationBlock" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "where" },
                value: {
                  kind: "ObjectValue",
                  fields: [
                    {
                      kind: "ObjectField",
                      name: { kind: "Name", value: "_metadata" },
                      value: {
                        kind: "ObjectValue",
                        fields: [
                          {
                            kind: "ObjectField",
                            name: { kind: "Name", value: "status" },
                            value: {
                              kind: "ObjectValue",
                              fields: [
                                {
                                  kind: "ObjectField",
                                  name: { kind: "Name", value: "eq" },
                                  value: {
                                    kind: "StringValue",
                                    value: "Published",
                                    block: false,
                                  },
                                },
                              ],
                            },
                          },
                        ],
                      },
                    },
                  ],
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  name: { kind: "Name", value: "item" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "FragmentSpread",
                        name: {
                          kind: "Name",
                          value: "WebFooterConfigrationBlockData",
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentUrl" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "type" } },
          { kind: "Field", name: { kind: "Name", value: "base" } },
          { kind: "Field", name: { kind: "Name", value: "default" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ReferenceData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentReference" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "key" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkItemData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "Link" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "title" } },
          { kind: "Field", name: { kind: "Name", value: "text" } },
          { kind: "Field", name: { kind: "Name", value: "target" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "IContentInfo" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "IContentMetadata" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "key" } },
          { kind: "Field", name: { kind: "Name", value: "locale" } },
          { kind: "Field", name: { kind: "Name", value: "types" } },
          { kind: "Field", name: { kind: "Name", value: "displayName" } },
          { kind: "Field", name: { kind: "Name", value: "version" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "IContentData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "_IContent" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "_metadata" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "IContentInfo" },
                },
              ],
            },
          },
          {
            kind: "Field",
            alias: { kind: "Name", value: "_type" },
            name: { kind: "Name", value: "__typename" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "IContentListItem" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "_IContent" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "FragmentSpread",
            name: { kind: "Name", value: "IContentData" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "IElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "_IComponent" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "_metadata" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "IContentInfo" },
                },
              ],
            },
          },
          {
            kind: "Field",
            alias: { kind: "Name", value: "_type" },
            name: { kind: "Name", value: "__typename" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "NavigationMenuBlockFields" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "NavigationMenuBlock" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "FragmentSpread",
            name: { kind: "Name", value: "IElementData" },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "MenuNavigationHeading" },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "Link" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkItemData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ThumbnailBanner" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "NavigationMenuBlockData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "NavigationMenuBlock" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "FragmentSpread",
            name: { kind: "Name", value: "NavigationMenuBlockFields" },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "SubMenuItem" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "NavigationMenuBlockFields" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ButtonElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ButtonElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "ButtonText" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "ButtonLink" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "className" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkPropertyData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "Link" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "title" } },
          { kind: "Field", name: { kind: "Name", value: "text" } },
          { kind: "Field", name: { kind: "Name", value: "target" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "SocialMediaBlockData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "SocialMediaBlock" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "URLMedia" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkPropertyData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "imageIcon" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  name: { kind: "Name", value: "ImageDesktop" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "FragmentSpread",
                        name: { kind: "Name", value: "ReferenceData" },
                      },
                    ],
                  },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "ImageMobile" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "FragmentSpread",
                        name: { kind: "Name", value: "ReferenceData" },
                      },
                    ],
                  },
                },
                { kind: "Field", name: { kind: "Name", value: "Loading" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "OverlayColor" },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "OverlayOpacity" },
                },
                { kind: "Field", name: { kind: "Name", value: "Alt" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "IsFullWidthImage" },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "IsBackground" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ContentTextElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentTextElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "HeadingText" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "Paragraph" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "SocialMediaBlocksData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "SocialMediaBlocks" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "ListItems" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "SocialMediaBlockData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "MegaMenuGroupBlockData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "MegaMenuGroupBlock" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "MenuMenuHeading" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "MegaMenuUrl" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "MegaMenuContentArea" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "IContentListItem" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "NavigationMenuBlockData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ButtonElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "SocialMediaBlockData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ContentTextElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "SocialMediaBlocksData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "ExpandableMobile" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ImageItemElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ImageItemElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "ImageDesktop" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ImageMobile" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "Loading" } },
          { kind: "Field", name: { kind: "Name", value: "Alt" } },
          { kind: "Field", name: { kind: "Name", value: "IsFullWidthImage" } },
          { kind: "Field", name: { kind: "Name", value: "IsBackground" } },
          { kind: "Field", name: { kind: "Name", value: "OverlayOpacity" } },
          { kind: "Field", name: { kind: "Name", value: "OverlayColor" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "WebFooterConfigrationBlockData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "WebFooterConfigrationBlock" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "SiteLogoFooter" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "LogoAltText" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "LocationDetails" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ButtonURLFooter" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkItemData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "FooterNavigation" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "IContentListItem" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "MegaMenuGroupBlockData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "SocialMediaArea" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "IContentListItem" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "SocialMediaBlockData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "CopyrightText" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "TermsAndConditionsArea" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkItemData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "paymentmethodarea" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "IContentListItem" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ImageItemElementData" },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<getFooterQuery, getFooterQueryVariables>;
export const getBannerDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "getBanner" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "key" } },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "String" },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "version" },
          },
          type: { kind: "NamedType", name: { kind: "Name", value: "String" } },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "locale" },
          },
          type: {
            kind: "ListType",
            type: {
              kind: "NonNullType",
              type: {
                kind: "NamedType",
                name: { kind: "Name", value: "Locales" },
              },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "path" } },
          type: { kind: "NamedType", name: { kind: "Name", value: "String" } },
          defaultValue: { kind: "StringValue", value: "-", block: false },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "domain" },
          },
          type: { kind: "NamedType", name: { kind: "Name", value: "String" } },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "changeset" },
          },
          type: { kind: "NamedType", name: { kind: "Name", value: "String" } },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "banner" },
            name: { kind: "Name", value: "BannerItemElement" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "where" },
                value: {
                  kind: "ObjectValue",
                  fields: [
                    {
                      kind: "ObjectField",
                      name: { kind: "Name", value: "_or" },
                      value: {
                        kind: "ListValue",
                        values: [
                          {
                            kind: "ObjectValue",
                            fields: [
                              {
                                kind: "ObjectField",
                                name: { kind: "Name", value: "_metadata" },
                                value: {
                                  kind: "ObjectValue",
                                  fields: [
                                    {
                                      kind: "ObjectField",
                                      name: { kind: "Name", value: "key" },
                                      value: {
                                        kind: "ObjectValue",
                                        fields: [
                                          {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "eq" },
                                            value: {
                                              kind: "Variable",
                                              name: {
                                                kind: "Name",
                                                value: "key",
                                              },
                                            },
                                          },
                                        ],
                                      },
                                    },
                                    {
                                      kind: "ObjectField",
                                      name: { kind: "Name", value: "version" },
                                      value: {
                                        kind: "ObjectValue",
                                        fields: [
                                          {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "eq" },
                                            value: {
                                              kind: "Variable",
                                              name: {
                                                kind: "Name",
                                                value: "version",
                                              },
                                            },
                                          },
                                        ],
                                      },
                                    },
                                  ],
                                },
                              },
                            ],
                          },
                          {
                            kind: "ObjectValue",
                            fields: [
                              {
                                kind: "ObjectField",
                                name: { kind: "Name", value: "_metadata" },
                                value: {
                                  kind: "ObjectValue",
                                  fields: [
                                    {
                                      kind: "ObjectField",
                                      name: { kind: "Name", value: "url" },
                                      value: {
                                        kind: "ObjectValue",
                                        fields: [
                                          {
                                            kind: "ObjectField",
                                            name: {
                                              kind: "Name",
                                              value: "default",
                                            },
                                            value: {
                                              kind: "ObjectValue",
                                              fields: [
                                                {
                                                  kind: "ObjectField",
                                                  name: {
                                                    kind: "Name",
                                                    value: "eq",
                                                  },
                                                  value: {
                                                    kind: "Variable",
                                                    name: {
                                                      kind: "Name",
                                                      value: "path",
                                                    },
                                                  },
                                                },
                                              ],
                                            },
                                          },
                                          {
                                            kind: "ObjectField",
                                            name: {
                                              kind: "Name",
                                              value: "base",
                                            },
                                            value: {
                                              kind: "ObjectValue",
                                              fields: [
                                                {
                                                  kind: "ObjectField",
                                                  name: {
                                                    kind: "Name",
                                                    value: "eq",
                                                  },
                                                  value: {
                                                    kind: "Variable",
                                                    name: {
                                                      kind: "Name",
                                                      value: "domain",
                                                    },
                                                  },
                                                },
                                              ],
                                            },
                                          },
                                        ],
                                      },
                                    },
                                    {
                                      kind: "ObjectField",
                                      name: { kind: "Name", value: "version" },
                                      value: {
                                        kind: "ObjectValue",
                                        fields: [
                                          {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "eq" },
                                            value: {
                                              kind: "Variable",
                                              name: {
                                                kind: "Name",
                                                value: "version",
                                              },
                                            },
                                          },
                                        ],
                                      },
                                    },
                                  ],
                                },
                              },
                            ],
                          },
                        ],
                      },
                    },
                    {
                      kind: "ObjectField",
                      name: { kind: "Name", value: "_metadata" },
                      value: {
                        kind: "ObjectValue",
                        fields: [
                          {
                            kind: "ObjectField",
                            name: { kind: "Name", value: "changeset" },
                            value: {
                              kind: "ObjectValue",
                              fields: [
                                {
                                  kind: "ObjectField",
                                  name: { kind: "Name", value: "eq" },
                                  value: {
                                    kind: "Variable",
                                    name: { kind: "Name", value: "changeset" },
                                  },
                                },
                              ],
                            },
                          },
                        ],
                      },
                    },
                  ],
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "locale" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "locale" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  name: { kind: "Name", value: "item" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "FragmentSpread",
                        name: { kind: "Name", value: "BannerItemElementData" },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentUrl" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "type" } },
          { kind: "Field", name: { kind: "Name", value: "base" } },
          { kind: "Field", name: { kind: "Name", value: "default" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ReferenceData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentReference" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "key" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "BannerItemElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "BannerItemElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "HeadingText" } },
          { kind: "Field", name: { kind: "Name", value: "SubHeading" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "RichText" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "BackgroundLink" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ImageDesktop" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ImageMobile" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "OverlayColor" } },
          { kind: "Field", name: { kind: "Name", value: "OverlayOpacity" } },
          { kind: "Field", name: { kind: "Name", value: "Alt" } },
          { kind: "Field", name: { kind: "Name", value: "IsFullWidthImage" } },
          { kind: "Field", name: { kind: "Name", value: "Loading" } },
          { kind: "Field", name: { kind: "Name", value: "ButtonText" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "ButtonLink" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "CssClass" } },
        ],
      },
    },
  ],
} as unknown as DocumentNode<getBannerQuery, getBannerQueryVariables>;
export const getHeaderDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "getHeader" },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "header" },
            name: { kind: "Name", value: "WebHeaderConfigrationBlock" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "where" },
                value: {
                  kind: "ObjectValue",
                  fields: [
                    {
                      kind: "ObjectField",
                      name: { kind: "Name", value: "_metadata" },
                      value: {
                        kind: "ObjectValue",
                        fields: [
                          {
                            kind: "ObjectField",
                            name: { kind: "Name", value: "status" },
                            value: {
                              kind: "ObjectValue",
                              fields: [
                                {
                                  kind: "ObjectField",
                                  name: { kind: "Name", value: "eq" },
                                  value: {
                                    kind: "StringValue",
                                    value: "Published",
                                    block: false,
                                  },
                                },
                              ],
                            },
                          },
                        ],
                      },
                    },
                  ],
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  name: { kind: "Name", value: "item" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "FragmentSpread",
                        name: {
                          kind: "Name",
                          value: "WebHeaderConfigrationBlockData",
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentUrl" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "type" } },
          { kind: "Field", name: { kind: "Name", value: "base" } },
          { kind: "Field", name: { kind: "Name", value: "default" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "IContentInfo" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "IContentMetadata" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "key" } },
          { kind: "Field", name: { kind: "Name", value: "locale" } },
          { kind: "Field", name: { kind: "Name", value: "types" } },
          { kind: "Field", name: { kind: "Name", value: "displayName" } },
          { kind: "Field", name: { kind: "Name", value: "version" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "IContentData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "_IContent" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "_metadata" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "IContentInfo" },
                },
              ],
            },
          },
          {
            kind: "Field",
            alias: { kind: "Name", value: "_type" },
            name: { kind: "Name", value: "__typename" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "IContentListItem" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "_IContent" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "FragmentSpread",
            name: { kind: "Name", value: "IContentData" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "IElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "_IComponent" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "_metadata" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "IContentInfo" },
                },
              ],
            },
          },
          {
            kind: "Field",
            alias: { kind: "Name", value: "_type" },
            name: { kind: "Name", value: "__typename" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkItemData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "Link" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "title" } },
          { kind: "Field", name: { kind: "Name", value: "text" } },
          { kind: "Field", name: { kind: "Name", value: "target" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ReferenceData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentReference" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "key" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "NavigationMenuBlockFields" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "NavigationMenuBlock" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "FragmentSpread",
            name: { kind: "Name", value: "IElementData" },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "MenuNavigationHeading" },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "Link" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkItemData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ThumbnailBanner" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "NavigationMenuBlockData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "NavigationMenuBlock" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "FragmentSpread",
            name: { kind: "Name", value: "NavigationMenuBlockFields" },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "SubMenuItem" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "NavigationMenuBlockFields" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ButtonElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ButtonElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "ButtonText" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "ButtonLink" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "className" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkPropertyData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "Link" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "title" } },
          { kind: "Field", name: { kind: "Name", value: "text" } },
          { kind: "Field", name: { kind: "Name", value: "target" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "SocialMediaBlockData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "SocialMediaBlock" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "URLMedia" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkPropertyData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "imageIcon" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  name: { kind: "Name", value: "ImageDesktop" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "FragmentSpread",
                        name: { kind: "Name", value: "ReferenceData" },
                      },
                    ],
                  },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "ImageMobile" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "FragmentSpread",
                        name: { kind: "Name", value: "ReferenceData" },
                      },
                    ],
                  },
                },
                { kind: "Field", name: { kind: "Name", value: "Loading" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "OverlayColor" },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "OverlayOpacity" },
                },
                { kind: "Field", name: { kind: "Name", value: "Alt" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "IsFullWidthImage" },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "IsBackground" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ContentTextElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentTextElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "HeadingText" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "Paragraph" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "SocialMediaBlocksData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "SocialMediaBlocks" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "ListItems" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "SocialMediaBlockData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "MegaMenuGroupBlockData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "MegaMenuGroupBlock" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "MenuMenuHeading" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "MegaMenuUrl" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "MegaMenuContentArea" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "IContentListItem" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "NavigationMenuBlockData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ButtonElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "SocialMediaBlockData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ContentTextElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "SocialMediaBlocksData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "ExpandableMobile" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "TopHeaderContainerData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "TopHeaderContainer" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "description" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "Links" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkItemData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "WebHeaderConfigrationBlockData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "WebHeaderConfigrationBlock" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "HeaderCTA" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "TopNavigationHeader" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "MegaMenuGroupBlockData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "TopHeaderContainerData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "MainNavigationHeader" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "MegaMenuGroupBlockData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "SearchBarText" } },
          { kind: "Field", name: { kind: "Name", value: "SiteLogoAltText" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "SiteLogoIcon" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "SiteSearchEnable" } },
        ],
      },
    },
  ],
} as unknown as DocumentNode<getHeaderQuery, getHeaderQueryVariables>;
export const getContentByIdDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "getContentById" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "key" } },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "String" },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "version" },
          },
          type: { kind: "NamedType", name: { kind: "Name", value: "String" } },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "locale" },
          },
          type: {
            kind: "ListType",
            type: {
              kind: "NonNullType",
              type: {
                kind: "NamedType",
                name: { kind: "Name", value: "Locales" },
              },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "path" } },
          type: { kind: "NamedType", name: { kind: "Name", value: "String" } },
          defaultValue: { kind: "StringValue", value: "-", block: false },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "domain" },
          },
          type: { kind: "NamedType", name: { kind: "Name", value: "String" } },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "changeset" },
          },
          type: { kind: "NamedType", name: { kind: "Name", value: "String" } },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "content" },
            name: { kind: "Name", value: "_Content" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "variation" },
                value: {
                  kind: "ObjectValue",
                  fields: [
                    {
                      kind: "ObjectField",
                      name: { kind: "Name", value: "include" },
                      value: { kind: "EnumValue", value: "ALL" },
                    },
                  ],
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "where" },
                value: {
                  kind: "ObjectValue",
                  fields: [
                    {
                      kind: "ObjectField",
                      name: { kind: "Name", value: "_or" },
                      value: {
                        kind: "ListValue",
                        values: [
                          {
                            kind: "ObjectValue",
                            fields: [
                              {
                                kind: "ObjectField",
                                name: { kind: "Name", value: "_metadata" },
                                value: {
                                  kind: "ObjectValue",
                                  fields: [
                                    {
                                      kind: "ObjectField",
                                      name: { kind: "Name", value: "key" },
                                      value: {
                                        kind: "ObjectValue",
                                        fields: [
                                          {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "eq" },
                                            value: {
                                              kind: "Variable",
                                              name: {
                                                kind: "Name",
                                                value: "key",
                                              },
                                            },
                                          },
                                        ],
                                      },
                                    },
                                    {
                                      kind: "ObjectField",
                                      name: { kind: "Name", value: "version" },
                                      value: {
                                        kind: "ObjectValue",
                                        fields: [
                                          {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "eq" },
                                            value: {
                                              kind: "Variable",
                                              name: {
                                                kind: "Name",
                                                value: "version",
                                              },
                                            },
                                          },
                                        ],
                                      },
                                    },
                                  ],
                                },
                              },
                            ],
                          },
                          {
                            kind: "ObjectValue",
                            fields: [
                              {
                                kind: "ObjectField",
                                name: { kind: "Name", value: "_metadata" },
                                value: {
                                  kind: "ObjectValue",
                                  fields: [
                                    {
                                      kind: "ObjectField",
                                      name: { kind: "Name", value: "url" },
                                      value: {
                                        kind: "ObjectValue",
                                        fields: [
                                          {
                                            kind: "ObjectField",
                                            name: {
                                              kind: "Name",
                                              value: "default",
                                            },
                                            value: {
                                              kind: "ObjectValue",
                                              fields: [
                                                {
                                                  kind: "ObjectField",
                                                  name: {
                                                    kind: "Name",
                                                    value: "eq",
                                                  },
                                                  value: {
                                                    kind: "Variable",
                                                    name: {
                                                      kind: "Name",
                                                      value: "path",
                                                    },
                                                  },
                                                },
                                              ],
                                            },
                                          },
                                          {
                                            kind: "ObjectField",
                                            name: {
                                              kind: "Name",
                                              value: "base",
                                            },
                                            value: {
                                              kind: "ObjectValue",
                                              fields: [
                                                {
                                                  kind: "ObjectField",
                                                  name: {
                                                    kind: "Name",
                                                    value: "eq",
                                                  },
                                                  value: {
                                                    kind: "Variable",
                                                    name: {
                                                      kind: "Name",
                                                      value: "domain",
                                                    },
                                                  },
                                                },
                                              ],
                                            },
                                          },
                                        ],
                                      },
                                    },
                                    {
                                      kind: "ObjectField",
                                      name: { kind: "Name", value: "version" },
                                      value: {
                                        kind: "ObjectValue",
                                        fields: [
                                          {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "eq" },
                                            value: {
                                              kind: "Variable",
                                              name: {
                                                kind: "Name",
                                                value: "version",
                                              },
                                            },
                                          },
                                        ],
                                      },
                                    },
                                  ],
                                },
                              },
                            ],
                          },
                        ],
                      },
                    },
                    {
                      kind: "ObjectField",
                      name: { kind: "Name", value: "_metadata" },
                      value: {
                        kind: "ObjectValue",
                        fields: [
                          {
                            kind: "ObjectField",
                            name: { kind: "Name", value: "changeset" },
                            value: {
                              kind: "ObjectValue",
                              fields: [
                                {
                                  kind: "ObjectField",
                                  name: { kind: "Name", value: "eq" },
                                  value: {
                                    kind: "Variable",
                                    name: { kind: "Name", value: "changeset" },
                                  },
                                },
                              ],
                            },
                          },
                        ],
                      },
                    },
                  ],
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "locale" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "locale" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "total" } },
                {
                  kind: "Field",
                  alias: { kind: "Name", value: "items" },
                  name: { kind: "Name", value: "item" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "FragmentSpread",
                        name: { kind: "Name", value: "IContentData" },
                      },
                      {
                        kind: "FragmentSpread",
                        name: { kind: "Name", value: "BlockData" },
                      },
                      {
                        kind: "FragmentSpread",
                        name: { kind: "Name", value: "PageData" },
                      },
                      {
                        kind: "FragmentSpread",
                        name: { kind: "Name", value: "BannerItemElementData" },
                      },
                      {
                        kind: "FragmentSpread",
                        name: { kind: "Name", value: "ButtonElementData" },
                      },
                      {
                        kind: "FragmentSpread",
                        name: { kind: "Name", value: "CompanyData" },
                      },
                      {
                        kind: "FragmentSpread",
                        name: { kind: "Name", value: "ContainerElementData" },
                      },
                      {
                        kind: "FragmentSpread",
                        name: { kind: "Name", value: "ContentTextElementData" },
                      },
                      {
                        kind: "FragmentSpread",
                        name: { kind: "Name", value: "DictionaryData" },
                      },
                      {
                        kind: "FragmentSpread",
                        name: { kind: "Name", value: "DictionaryItemData" },
                      },
                      {
                        kind: "FragmentSpread",
                        name: { kind: "Name", value: "ExpandableTextData" },
                      },
                      {
                        kind: "FragmentSpread",
                        name: { kind: "Name", value: "FAQsSectionData" },
                      },
                      {
                        kind: "FragmentSpread",
                        name: { kind: "Name", value: "HeadingElementData" },
                      },
                      {
                        kind: "FragmentSpread",
                        name: { kind: "Name", value: "ImageBackgroundData" },
                      },
                      {
                        kind: "FragmentSpread",
                        name: { kind: "Name", value: "ImageItemElementData" },
                      },
                      {
                        kind: "FragmentSpread",
                        name: {
                          kind: "Name",
                          value: "ImageTextItemElementData",
                        },
                      },
                      {
                        kind: "FragmentSpread",
                        name: { kind: "Name", value: "MegaMenuGroupBlockData" },
                      },
                      {
                        kind: "FragmentSpread",
                        name: {
                          kind: "Name",
                          value: "NavigationMenuBlockData",
                        },
                      },
                      {
                        kind: "FragmentSpread",
                        name: {
                          kind: "Name",
                          value: "NavigationMenuBlockFields",
                        },
                      },
                      {
                        kind: "FragmentSpread",
                        name: { kind: "Name", value: "OfficeLocationData" },
                      },
                      {
                        kind: "FragmentSpread",
                        name: { kind: "Name", value: "PageSeoSettingsData" },
                      },
                      {
                        kind: "FragmentSpread",
                        name: { kind: "Name", value: "ParagraphElementData" },
                      },
                      {
                        kind: "FragmentSpread",
                        name: { kind: "Name", value: "ProductCardElementData" },
                      },
                      {
                        kind: "FragmentSpread",
                        name: {
                          kind: "Name",
                          value: "ProductCardListElementData",
                        },
                      },
                      {
                        kind: "FragmentSpread",
                        name: { kind: "Name", value: "SocialMediaBlockData" },
                      },
                      {
                        kind: "FragmentSpread",
                        name: { kind: "Name", value: "SocialMediaBlocksData" },
                      },
                      {
                        kind: "FragmentSpread",
                        name: { kind: "Name", value: "TopHeaderContainerData" },
                      },
                      {
                        kind: "FragmentSpread",
                        name: { kind: "Name", value: "VideoElementData" },
                      },
                      {
                        kind: "FragmentSpread",
                        name: {
                          kind: "Name",
                          value: "WebFooterConfigrationBlockData",
                        },
                      },
                      {
                        kind: "FragmentSpread",
                        name: {
                          kind: "Name",
                          value: "WebHeaderConfigrationBlockData",
                        },
                      },
                      {
                        kind: "FragmentSpread",
                        name: {
                          kind: "Name",
                          value: "PDPSpecificationsElementData",
                        },
                      },
                      {
                        kind: "FragmentSpread",
                        name: {
                          kind: "Name",
                          value: "ProductCarouselElementData",
                        },
                      },
                      {
                        kind: "FragmentSpread",
                        name: { kind: "Name", value: "BlankExperienceData" },
                      },
                      {
                        kind: "FragmentSpread",
                        name: {
                          kind: "Name",
                          value: "ProductDetailExperienceData",
                        },
                      },
                      {
                        kind: "FragmentSpread",
                        name: {
                          kind: "Name",
                          value: "ProductListingEPageData",
                        },
                      },
                      {
                        kind: "FragmentSpread",
                        name: { kind: "Name", value: "SectionData" },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentUrl" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "type" } },
          { kind: "Field", name: { kind: "Name", value: "base" } },
          { kind: "Field", name: { kind: "Name", value: "default" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "IContentInfo" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "IContentMetadata" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "key" } },
          { kind: "Field", name: { kind: "Name", value: "locale" } },
          { kind: "Field", name: { kind: "Name", value: "types" } },
          { kind: "Field", name: { kind: "Name", value: "displayName" } },
          { kind: "Field", name: { kind: "Name", value: "version" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "IContentData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "_IContent" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "_metadata" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "IContentInfo" },
                },
              ],
            },
          },
          {
            kind: "Field",
            alias: { kind: "Name", value: "_type" },
            name: { kind: "Name", value: "__typename" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ReferenceData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentReference" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "key" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "DictionaryItemPropertyData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "DictionaryItemProperty" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "DictionaryItemKey" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "DictionaryItemValue" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ContentTextElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentTextElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "HeadingText" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "Paragraph" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "HeadingElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "HeadingElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "HeadingText" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "IContentListItem" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "_IContent" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "FragmentSpread",
            name: { kind: "Name", value: "IContentData" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "IElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "_IComponent" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "_metadata" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "IContentInfo" },
                },
              ],
            },
          },
          {
            kind: "Field",
            alias: { kind: "Name", value: "_type" },
            name: { kind: "Name", value: "__typename" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkItemData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "Link" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "title" } },
          { kind: "Field", name: { kind: "Name", value: "text" } },
          { kind: "Field", name: { kind: "Name", value: "target" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "NavigationMenuBlockFields" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "NavigationMenuBlock" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "FragmentSpread",
            name: { kind: "Name", value: "IElementData" },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "MenuNavigationHeading" },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "Link" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkItemData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ThumbnailBanner" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "NavigationMenuBlockData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "NavigationMenuBlock" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "FragmentSpread",
            name: { kind: "Name", value: "NavigationMenuBlockFields" },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "SubMenuItem" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "NavigationMenuBlockFields" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ButtonElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ButtonElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "ButtonText" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "ButtonLink" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "className" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkPropertyData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "Link" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "title" } },
          { kind: "Field", name: { kind: "Name", value: "text" } },
          { kind: "Field", name: { kind: "Name", value: "target" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "SocialMediaBlockData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "SocialMediaBlock" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "URLMedia" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkPropertyData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "imageIcon" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  name: { kind: "Name", value: "ImageDesktop" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "FragmentSpread",
                        name: { kind: "Name", value: "ReferenceData" },
                      },
                    ],
                  },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "ImageMobile" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "FragmentSpread",
                        name: { kind: "Name", value: "ReferenceData" },
                      },
                    ],
                  },
                },
                { kind: "Field", name: { kind: "Name", value: "Loading" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "OverlayColor" },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "OverlayOpacity" },
                },
                { kind: "Field", name: { kind: "Name", value: "Alt" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "IsFullWidthImage" },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "IsBackground" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "SocialMediaBlocksData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "SocialMediaBlocks" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "ListItems" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "SocialMediaBlockData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "MegaMenuGroupBlockData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "MegaMenuGroupBlock" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "MenuMenuHeading" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "MegaMenuUrl" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "MegaMenuContentArea" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "IContentListItem" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "NavigationMenuBlockData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ButtonElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "SocialMediaBlockData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ContentTextElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "SocialMediaBlocksData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "ExpandableMobile" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ImageItemElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ImageItemElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "ImageDesktop" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ImageMobile" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "Loading" } },
          { kind: "Field", name: { kind: "Name", value: "Alt" } },
          { kind: "Field", name: { kind: "Name", value: "IsFullWidthImage" } },
          { kind: "Field", name: { kind: "Name", value: "IsBackground" } },
          { kind: "Field", name: { kind: "Name", value: "OverlayOpacity" } },
          { kind: "Field", name: { kind: "Name", value: "OverlayColor" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "TopHeaderContainerData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "TopHeaderContainer" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "description" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "Links" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkItemData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "CompositionNodeData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ICompositionNode" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "name" },
            name: { kind: "Name", value: "displayName" },
          },
          {
            kind: "Field",
            alias: { kind: "Name", value: "layoutType" },
            name: { kind: "Name", value: "nodeType" },
          },
          { kind: "Field", name: { kind: "Name", value: "type" } },
          { kind: "Field", name: { kind: "Name", value: "key" } },
          {
            kind: "Field",
            alias: { kind: "Name", value: "template" },
            name: { kind: "Name", value: "displayTemplateKey" },
          },
          {
            kind: "Field",
            alias: { kind: "Name", value: "settings" },
            name: { kind: "Name", value: "displaySettings" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "key" } },
                { kind: "Field", name: { kind: "Name", value: "value" } },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "BlockData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "_IComponent" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "FragmentSpread",
            name: { kind: "Name", value: "IContentData" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "_IComponent" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "FragmentSpread",
            name: { kind: "Name", value: "IElementData" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "BannerItemElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "BannerItemElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "HeadingText" } },
          { kind: "Field", name: { kind: "Name", value: "SubHeading" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "RichText" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "BackgroundLink" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ImageDesktop" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ImageMobile" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "OverlayColor" } },
          { kind: "Field", name: { kind: "Name", value: "OverlayOpacity" } },
          { kind: "Field", name: { kind: "Name", value: "Alt" } },
          { kind: "Field", name: { kind: "Name", value: "IsFullWidthImage" } },
          { kind: "Field", name: { kind: "Name", value: "Loading" } },
          { kind: "Field", name: { kind: "Name", value: "ButtonText" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "ButtonLink" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "CssClass" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "CompanyData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "Company" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "Name" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "Logo" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ContainerElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContainerElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "Items" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "TypeOfItems" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "DictionaryData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "Dictionary" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "DictionaryItems" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "DictionaryItemPropertyData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "DictionaryKey" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "DictionaryItemData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "DictionaryItem" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "DictionaryItemKey" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "DictionaryItemValue" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ExpandableTextData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ExpandableText" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "ContentText" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "Threshold" } },
          { kind: "Field", name: { kind: "Name", value: "ShowLessText" } },
          { kind: "Field", name: { kind: "Name", value: "ReadMoreText" } },
          { kind: "Field", name: { kind: "Name", value: "MobileThreshold" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "FAQsSectionData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "FAQsSection" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "HeadingText" } },
          { kind: "Field", name: { kind: "Name", value: "allowMultiple" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "ListItem" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ContentTextElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "HeadingElementData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ImageBackgroundData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ImageBackground" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "ImageDesktop" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ImageMobile" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "Alt" } },
          { kind: "Field", name: { kind: "Name", value: "IsFullIWidthImage" } },
          { kind: "Field", name: { kind: "Name", value: "Loading" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ImageTextItemElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ImageTextItemElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "Heading" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "RichText" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "Image" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ImageMobile" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "Alt" } },
          { kind: "Field", name: { kind: "Name", value: "IsFullWidthImage" } },
          { kind: "Field", name: { kind: "Name", value: "Loading" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "BackgroundLink" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ButtonLink" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "ButtonText" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "ContentImagePosition" },
          },
          { kind: "Field", name: { kind: "Name", value: "CssClass" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "OfficeLocationData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "OfficeLocation" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "OfficeTitle" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "OfficeAddressStreet1" },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "OfficeAddressStreet2" },
          },
          { kind: "Field", name: { kind: "Name", value: "OfficeAddressCity" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "OfficeAddressPostalCode" },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "OfficeAddressCountry" },
          },
          { kind: "Field", name: { kind: "Name", value: "OfficePhone" } },
          { kind: "Field", name: { kind: "Name", value: "OfficeEmail" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "PageSeoSettingsData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "PageSeoSettings" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "MetaTitle" } },
          { kind: "Field", name: { kind: "Name", value: "MetaDescription" } },
          { kind: "Field", name: { kind: "Name", value: "MetaKeywords" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "ThumbnailImage" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ParagraphElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ParagraphElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "text" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ProductCardElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ProductCardElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "ProductName" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "Image" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ShortDescription" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "InventoryStatus" } },
          { kind: "Field", name: { kind: "Name", value: "inventory" } },
          { kind: "Field", name: { kind: "Name", value: "CanBuy" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ProductCardListElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ProductCardListElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "CategoryID" } },
          { kind: "Field", name: { kind: "Name", value: "EnableFilter" } },
          { kind: "Field", name: { kind: "Name", value: "EnableSorting" } },
          { kind: "Field", name: { kind: "Name", value: "DefaultView" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "EnableProductCount" },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "VisibleElements" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "PagingSize" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "VideoElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "VideoElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "Video" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "Placeholder" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "VideoUrl" } },
          { kind: "Field", name: { kind: "Name", value: "Autoplay" } },
          { kind: "Field", name: { kind: "Name", value: "PlayOnPopup" } },
          { kind: "Field", name: { kind: "Name", value: "Loading" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "WebFooterConfigrationBlockData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "WebFooterConfigrationBlock" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "SiteLogoFooter" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "LogoAltText" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "LocationDetails" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ButtonURLFooter" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkItemData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "FooterNavigation" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "IContentListItem" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "MegaMenuGroupBlockData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "SocialMediaArea" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "IContentListItem" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "SocialMediaBlockData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "CopyrightText" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "TermsAndConditionsArea" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkItemData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "paymentmethodarea" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "IContentListItem" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ImageItemElementData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "WebHeaderConfigrationBlockData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "WebHeaderConfigrationBlock" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "HeaderCTA" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "TopNavigationHeader" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "MegaMenuGroupBlockData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "TopHeaderContainerData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "MainNavigationHeader" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "MegaMenuGroupBlockData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "SearchBarText" } },
          { kind: "Field", name: { kind: "Name", value: "SiteLogoAltText" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "SiteLogoIcon" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "SiteSearchEnable" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "PDPSpecificationsElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "PDPSpecificationsElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "empty" },
            name: { kind: "Name", value: "_metadata" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "key" } },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ProductCarouselElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ProductCarouselElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "Heading" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "CarouselSource" } },
          { kind: "Field", name: { kind: "Name", value: "CategoryID" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "VisibleElements" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "productsofView" } },
          { kind: "Field", name: { kind: "Name", value: "PagingSize" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "CompositionComponentNodeData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ICompositionComponentNode" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "component" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "BlockData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "BannerItemElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ButtonElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "CompanyData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ContainerElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ContentTextElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "DictionaryData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "DictionaryItemData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ExpandableTextData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "FAQsSectionData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "HeadingElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ImageBackgroundData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ImageItemElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ImageTextItemElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "MegaMenuGroupBlockData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "NavigationMenuBlockData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "NavigationMenuBlockFields" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "OfficeLocationData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "PageSeoSettingsData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ParagraphElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ProductCardElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ProductCardListElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "SocialMediaBlockData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "SocialMediaBlocksData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "TopHeaderContainerData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "VideoElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: {
                    kind: "Name",
                    value: "WebFooterConfigrationBlockData",
                  },
                },
                {
                  kind: "FragmentSpread",
                  name: {
                    kind: "Name",
                    value: "WebHeaderConfigrationBlockData",
                  },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "PDPSpecificationsElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ProductCarouselElementData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ExperienceData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "_IExperience" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "composition" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "CompositionNodeData" },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "nodes" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "FragmentSpread",
                        name: { kind: "Name", value: "CompositionNodeData" },
                      },
                      {
                        kind: "InlineFragment",
                        typeCondition: {
                          kind: "NamedType",
                          name: {
                            kind: "Name",
                            value: "ICompositionStructureNode",
                          },
                        },
                        selectionSet: {
                          kind: "SelectionSet",
                          selections: [
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "nodes" },
                              selectionSet: {
                                kind: "SelectionSet",
                                selections: [
                                  {
                                    kind: "FragmentSpread",
                                    name: {
                                      kind: "Name",
                                      value: "CompositionNodeData",
                                    },
                                  },
                                  {
                                    kind: "InlineFragment",
                                    typeCondition: {
                                      kind: "NamedType",
                                      name: {
                                        kind: "Name",
                                        value: "ICompositionStructureNode",
                                      },
                                    },
                                    selectionSet: {
                                      kind: "SelectionSet",
                                      selections: [
                                        {
                                          kind: "Field",
                                          name: {
                                            kind: "Name",
                                            value: "nodes",
                                          },
                                          selectionSet: {
                                            kind: "SelectionSet",
                                            selections: [
                                              {
                                                kind: "FragmentSpread",
                                                name: {
                                                  kind: "Name",
                                                  value: "CompositionNodeData",
                                                },
                                              },
                                              {
                                                kind: "InlineFragment",
                                                typeCondition: {
                                                  kind: "NamedType",
                                                  name: {
                                                    kind: "Name",
                                                    value:
                                                      "ICompositionStructureNode",
                                                  },
                                                },
                                                selectionSet: {
                                                  kind: "SelectionSet",
                                                  selections: [
                                                    {
                                                      kind: "Field",
                                                      name: {
                                                        kind: "Name",
                                                        value: "nodes",
                                                      },
                                                      selectionSet: {
                                                        kind: "SelectionSet",
                                                        selections: [
                                                          {
                                                            kind: "FragmentSpread",
                                                            name: {
                                                              kind: "Name",
                                                              value:
                                                                "CompositionNodeData",
                                                            },
                                                          },
                                                          {
                                                            kind: "FragmentSpread",
                                                            name: {
                                                              kind: "Name",
                                                              value:
                                                                "CompositionComponentNodeData",
                                                            },
                                                          },
                                                        ],
                                                      },
                                                    },
                                                  ],
                                                },
                                              },
                                            ],
                                          },
                                        },
                                      ],
                                    },
                                  },
                                ],
                              },
                            },
                          ],
                        },
                      },
                      {
                        kind: "FragmentSpread",
                        name: {
                          kind: "Name",
                          value: "CompositionComponentNodeData",
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "PageData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "_IContent" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "FragmentSpread",
            name: { kind: "Name", value: "IContentData" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "BlankExperienceData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "BlankExperience" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "FragmentSpread",
            name: { kind: "Name", value: "ExperienceData" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ProductDetailExperienceData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ProductDetailExperience" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "SEOsettings" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "PageSeoSettingsData" },
                },
              ],
            },
          },
          {
            kind: "FragmentSpread",
            name: { kind: "Name", value: "ExperienceData" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ProductListingEPageData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ProductListingEPage" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "FragmentSpread",
            name: { kind: "Name", value: "ExperienceData" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "SectionData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "Section" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "empty" },
            name: { kind: "Name", value: "_metadata" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "key" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<getContentByIdQuery, getContentByIdQueryVariables>;
export const getContentByPathDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "getContentByPath" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "path" } },
          type: {
            kind: "NonNullType",
            type: {
              kind: "ListType",
              type: {
                kind: "NonNullType",
                type: {
                  kind: "NamedType",
                  name: { kind: "Name", value: "String" },
                },
              },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "locale" },
          },
          type: {
            kind: "ListType",
            type: {
              kind: "NonNullType",
              type: {
                kind: "NamedType",
                name: { kind: "Name", value: "Locales" },
              },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "siteId" },
          },
          type: { kind: "NamedType", name: { kind: "Name", value: "String" } },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "changeset" },
          },
          type: { kind: "NamedType", name: { kind: "Name", value: "String" } },
          defaultValue: { kind: "NullValue" },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "content" },
            name: { kind: "Name", value: "_Content" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "where" },
                value: {
                  kind: "ObjectValue",
                  fields: [
                    {
                      kind: "ObjectField",
                      name: { kind: "Name", value: "_metadata" },
                      value: {
                        kind: "ObjectValue",
                        fields: [
                          {
                            kind: "ObjectField",
                            name: { kind: "Name", value: "url" },
                            value: {
                              kind: "ObjectValue",
                              fields: [
                                {
                                  kind: "ObjectField",
                                  name: { kind: "Name", value: "default" },
                                  value: {
                                    kind: "ObjectValue",
                                    fields: [
                                      {
                                        kind: "ObjectField",
                                        name: { kind: "Name", value: "in" },
                                        value: {
                                          kind: "Variable",
                                          name: { kind: "Name", value: "path" },
                                        },
                                      },
                                    ],
                                  },
                                },
                                {
                                  kind: "ObjectField",
                                  name: { kind: "Name", value: "base" },
                                  value: {
                                    kind: "ObjectValue",
                                    fields: [
                                      {
                                        kind: "ObjectField",
                                        name: { kind: "Name", value: "eq" },
                                        value: {
                                          kind: "Variable",
                                          name: {
                                            kind: "Name",
                                            value: "siteId",
                                          },
                                        },
                                      },
                                    ],
                                  },
                                },
                              ],
                            },
                          },
                          {
                            kind: "ObjectField",
                            name: { kind: "Name", value: "changeset" },
                            value: {
                              kind: "ObjectValue",
                              fields: [
                                {
                                  kind: "ObjectField",
                                  name: { kind: "Name", value: "eq" },
                                  value: {
                                    kind: "Variable",
                                    name: { kind: "Name", value: "changeset" },
                                  },
                                },
                              ],
                            },
                          },
                        ],
                      },
                    },
                  ],
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "locale" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "locale" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "total" } },
                {
                  kind: "Field",
                  alias: { kind: "Name", value: "items" },
                  name: { kind: "Name", value: "item" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "FragmentSpread",
                        name: { kind: "Name", value: "IContentData" },
                      },
                      {
                        kind: "FragmentSpread",
                        name: { kind: "Name", value: "PageData" },
                      },
                      {
                        kind: "FragmentSpread",
                        name: { kind: "Name", value: "BlankExperienceData" },
                      },
                      {
                        kind: "FragmentSpread",
                        name: {
                          kind: "Name",
                          value: "ProductDetailExperienceData",
                        },
                      },
                      {
                        kind: "FragmentSpread",
                        name: {
                          kind: "Name",
                          value: "ProductListingEPageData",
                        },
                      },
                      {
                        kind: "FragmentSpread",
                        name: { kind: "Name", value: "SectionData" },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentUrl" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "type" } },
          { kind: "Field", name: { kind: "Name", value: "base" } },
          { kind: "Field", name: { kind: "Name", value: "default" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "IContentInfo" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "IContentMetadata" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "key" } },
          { kind: "Field", name: { kind: "Name", value: "locale" } },
          { kind: "Field", name: { kind: "Name", value: "types" } },
          { kind: "Field", name: { kind: "Name", value: "displayName" } },
          { kind: "Field", name: { kind: "Name", value: "version" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "IContentData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "_IContent" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "_metadata" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "IContentInfo" },
                },
              ],
            },
          },
          {
            kind: "Field",
            alias: { kind: "Name", value: "_type" },
            name: { kind: "Name", value: "__typename" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "CompositionNodeData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ICompositionNode" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "name" },
            name: { kind: "Name", value: "displayName" },
          },
          {
            kind: "Field",
            alias: { kind: "Name", value: "layoutType" },
            name: { kind: "Name", value: "nodeType" },
          },
          { kind: "Field", name: { kind: "Name", value: "type" } },
          { kind: "Field", name: { kind: "Name", value: "key" } },
          {
            kind: "Field",
            alias: { kind: "Name", value: "template" },
            name: { kind: "Name", value: "displayTemplateKey" },
          },
          {
            kind: "Field",
            alias: { kind: "Name", value: "settings" },
            name: { kind: "Name", value: "displaySettings" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "key" } },
                { kind: "Field", name: { kind: "Name", value: "value" } },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "BlockData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "_IComponent" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "FragmentSpread",
            name: { kind: "Name", value: "IContentData" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "IElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "_IComponent" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "_metadata" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "IContentInfo" },
                },
              ],
            },
          },
          {
            kind: "Field",
            alias: { kind: "Name", value: "_type" },
            name: { kind: "Name", value: "__typename" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "_IComponent" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "FragmentSpread",
            name: { kind: "Name", value: "IElementData" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ReferenceData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentReference" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "key" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "BannerItemElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "BannerItemElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "HeadingText" } },
          { kind: "Field", name: { kind: "Name", value: "SubHeading" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "RichText" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "BackgroundLink" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ImageDesktop" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ImageMobile" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "OverlayColor" } },
          { kind: "Field", name: { kind: "Name", value: "OverlayOpacity" } },
          { kind: "Field", name: { kind: "Name", value: "Alt" } },
          { kind: "Field", name: { kind: "Name", value: "IsFullWidthImage" } },
          { kind: "Field", name: { kind: "Name", value: "Loading" } },
          { kind: "Field", name: { kind: "Name", value: "ButtonText" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "ButtonLink" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "CssClass" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ButtonElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ButtonElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "ButtonText" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "ButtonLink" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "className" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "CompanyData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "Company" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "Name" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "Logo" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ContainerElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContainerElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "Items" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "TypeOfItems" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ContentTextElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ContentTextElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "HeadingText" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "Paragraph" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "DictionaryItemPropertyData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "DictionaryItemProperty" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "DictionaryItemKey" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "DictionaryItemValue" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "DictionaryData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "Dictionary" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "DictionaryItems" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "DictionaryItemPropertyData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "DictionaryKey" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "DictionaryItemData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "DictionaryItem" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "DictionaryItemKey" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "DictionaryItemValue" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ExpandableTextData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ExpandableText" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "ContentText" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "Threshold" } },
          { kind: "Field", name: { kind: "Name", value: "ShowLessText" } },
          { kind: "Field", name: { kind: "Name", value: "ReadMoreText" } },
          { kind: "Field", name: { kind: "Name", value: "MobileThreshold" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "HeadingElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "HeadingElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "HeadingText" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "FAQsSectionData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "FAQsSection" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "HeadingText" } },
          { kind: "Field", name: { kind: "Name", value: "allowMultiple" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "ListItem" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ContentTextElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "HeadingElementData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ImageBackgroundData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ImageBackground" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "ImageDesktop" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ImageMobile" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "Alt" } },
          { kind: "Field", name: { kind: "Name", value: "IsFullIWidthImage" } },
          { kind: "Field", name: { kind: "Name", value: "Loading" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ImageItemElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ImageItemElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "ImageDesktop" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ImageMobile" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "Loading" } },
          { kind: "Field", name: { kind: "Name", value: "Alt" } },
          { kind: "Field", name: { kind: "Name", value: "IsFullWidthImage" } },
          { kind: "Field", name: { kind: "Name", value: "IsBackground" } },
          { kind: "Field", name: { kind: "Name", value: "OverlayOpacity" } },
          { kind: "Field", name: { kind: "Name", value: "OverlayColor" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ImageTextItemElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ImageTextItemElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "Heading" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "RichText" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "Image" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ImageMobile" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "Alt" } },
          { kind: "Field", name: { kind: "Name", value: "IsFullWidthImage" } },
          { kind: "Field", name: { kind: "Name", value: "Loading" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "BackgroundLink" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ButtonLink" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "ButtonText" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "ContentImagePosition" },
          },
          { kind: "Field", name: { kind: "Name", value: "CssClass" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "IContentListItem" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "_IContent" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "FragmentSpread",
            name: { kind: "Name", value: "IContentData" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkItemData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "Link" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "title" } },
          { kind: "Field", name: { kind: "Name", value: "text" } },
          { kind: "Field", name: { kind: "Name", value: "target" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "NavigationMenuBlockFields" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "NavigationMenuBlock" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "FragmentSpread",
            name: { kind: "Name", value: "IElementData" },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "MenuNavigationHeading" },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "Link" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkItemData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ThumbnailBanner" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "NavigationMenuBlockData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "NavigationMenuBlock" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "FragmentSpread",
            name: { kind: "Name", value: "NavigationMenuBlockFields" },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "SubMenuItem" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "NavigationMenuBlockFields" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "LinkPropertyData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "Link" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "url" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "title" } },
          { kind: "Field", name: { kind: "Name", value: "text" } },
          { kind: "Field", name: { kind: "Name", value: "target" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "SocialMediaBlockData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "SocialMediaBlock" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "URLMedia" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkPropertyData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "imageIcon" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  name: { kind: "Name", value: "ImageDesktop" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "FragmentSpread",
                        name: { kind: "Name", value: "ReferenceData" },
                      },
                    ],
                  },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "ImageMobile" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "FragmentSpread",
                        name: { kind: "Name", value: "ReferenceData" },
                      },
                    ],
                  },
                },
                { kind: "Field", name: { kind: "Name", value: "Loading" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "OverlayColor" },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "OverlayOpacity" },
                },
                { kind: "Field", name: { kind: "Name", value: "Alt" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "IsFullWidthImage" },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "IsBackground" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "SocialMediaBlocksData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "SocialMediaBlocks" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "ListItems" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "SocialMediaBlockData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "MegaMenuGroupBlockData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "MegaMenuGroupBlock" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "MenuMenuHeading" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "MegaMenuUrl" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "MegaMenuContentArea" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "IContentListItem" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "NavigationMenuBlockData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ButtonElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "SocialMediaBlockData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ContentTextElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "SocialMediaBlocksData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "ExpandableMobile" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "OfficeLocationData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "OfficeLocation" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "OfficeTitle" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "OfficeAddressStreet1" },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "OfficeAddressStreet2" },
          },
          { kind: "Field", name: { kind: "Name", value: "OfficeAddressCity" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "OfficeAddressPostalCode" },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "OfficeAddressCountry" },
          },
          { kind: "Field", name: { kind: "Name", value: "OfficePhone" } },
          { kind: "Field", name: { kind: "Name", value: "OfficeEmail" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "PageSeoSettingsData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "PageSeoSettings" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "MetaTitle" } },
          { kind: "Field", name: { kind: "Name", value: "MetaDescription" } },
          { kind: "Field", name: { kind: "Name", value: "MetaKeywords" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "ThumbnailImage" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ParagraphElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ParagraphElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "text" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ProductCardElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ProductCardElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "ProductName" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "Image" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ShortDescription" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "InventoryStatus" } },
          { kind: "Field", name: { kind: "Name", value: "inventory" } },
          { kind: "Field", name: { kind: "Name", value: "CanBuy" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ProductCardListElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ProductCardListElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "CategoryID" } },
          { kind: "Field", name: { kind: "Name", value: "EnableFilter" } },
          { kind: "Field", name: { kind: "Name", value: "EnableSorting" } },
          { kind: "Field", name: { kind: "Name", value: "DefaultView" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "EnableProductCount" },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "VisibleElements" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "PagingSize" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "TopHeaderContainerData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "TopHeaderContainer" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "description" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "Links" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkItemData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "VideoElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "VideoElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "Video" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "Placeholder" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "VideoUrl" } },
          { kind: "Field", name: { kind: "Name", value: "Autoplay" } },
          { kind: "Field", name: { kind: "Name", value: "PlayOnPopup" } },
          { kind: "Field", name: { kind: "Name", value: "Loading" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "WebFooterConfigrationBlockData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "WebFooterConfigrationBlock" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "SiteLogoFooter" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "LogoAltText" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "LocationDetails" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "ButtonURLFooter" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkItemData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "FooterNavigation" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "IContentListItem" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "MegaMenuGroupBlockData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "SocialMediaArea" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "IContentListItem" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "SocialMediaBlockData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "CopyrightText" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "TermsAndConditionsArea" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkItemData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "paymentmethodarea" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "IContentListItem" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ImageItemElementData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "WebHeaderConfigrationBlockData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "WebHeaderConfigrationBlock" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "HeaderCTA" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "LinkData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "TopNavigationHeader" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "MegaMenuGroupBlockData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "TopHeaderContainerData" },
                },
              ],
            },
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "MainNavigationHeader" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "MegaMenuGroupBlockData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "SearchBarText" } },
          { kind: "Field", name: { kind: "Name", value: "SiteLogoAltText" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "SiteLogoIcon" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "SiteSearchEnable" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "PDPSpecificationsElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "PDPSpecificationsElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "empty" },
            name: { kind: "Name", value: "_metadata" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "key" } },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ProductCarouselElementData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ProductCarouselElement" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "Heading" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "json" } },
                { kind: "Field", name: { kind: "Name", value: "html" } },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "CarouselSource" } },
          { kind: "Field", name: { kind: "Name", value: "CategoryID" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "VisibleElements" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ReferenceData" },
                },
              ],
            },
          },
          { kind: "Field", name: { kind: "Name", value: "productsofView" } },
          { kind: "Field", name: { kind: "Name", value: "PagingSize" } },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "CompositionComponentNodeData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ICompositionComponentNode" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "component" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "BlockData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "BannerItemElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ButtonElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "CompanyData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ContainerElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ContentTextElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "DictionaryData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "DictionaryItemData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ExpandableTextData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "FAQsSectionData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "HeadingElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ImageBackgroundData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ImageItemElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ImageTextItemElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "MegaMenuGroupBlockData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "NavigationMenuBlockData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "NavigationMenuBlockFields" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "OfficeLocationData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "PageSeoSettingsData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ParagraphElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ProductCardElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ProductCardListElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "SocialMediaBlockData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "SocialMediaBlocksData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "TopHeaderContainerData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "VideoElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: {
                    kind: "Name",
                    value: "WebFooterConfigrationBlockData",
                  },
                },
                {
                  kind: "FragmentSpread",
                  name: {
                    kind: "Name",
                    value: "WebHeaderConfigrationBlockData",
                  },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "PDPSpecificationsElementData" },
                },
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "ProductCarouselElementData" },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ExperienceData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "_IExperience" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "composition" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "CompositionNodeData" },
                },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "nodes" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "FragmentSpread",
                        name: { kind: "Name", value: "CompositionNodeData" },
                      },
                      {
                        kind: "InlineFragment",
                        typeCondition: {
                          kind: "NamedType",
                          name: {
                            kind: "Name",
                            value: "ICompositionStructureNode",
                          },
                        },
                        selectionSet: {
                          kind: "SelectionSet",
                          selections: [
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "nodes" },
                              selectionSet: {
                                kind: "SelectionSet",
                                selections: [
                                  {
                                    kind: "FragmentSpread",
                                    name: {
                                      kind: "Name",
                                      value: "CompositionNodeData",
                                    },
                                  },
                                  {
                                    kind: "InlineFragment",
                                    typeCondition: {
                                      kind: "NamedType",
                                      name: {
                                        kind: "Name",
                                        value: "ICompositionStructureNode",
                                      },
                                    },
                                    selectionSet: {
                                      kind: "SelectionSet",
                                      selections: [
                                        {
                                          kind: "Field",
                                          name: {
                                            kind: "Name",
                                            value: "nodes",
                                          },
                                          selectionSet: {
                                            kind: "SelectionSet",
                                            selections: [
                                              {
                                                kind: "FragmentSpread",
                                                name: {
                                                  kind: "Name",
                                                  value: "CompositionNodeData",
                                                },
                                              },
                                              {
                                                kind: "InlineFragment",
                                                typeCondition: {
                                                  kind: "NamedType",
                                                  name: {
                                                    kind: "Name",
                                                    value:
                                                      "ICompositionStructureNode",
                                                  },
                                                },
                                                selectionSet: {
                                                  kind: "SelectionSet",
                                                  selections: [
                                                    {
                                                      kind: "Field",
                                                      name: {
                                                        kind: "Name",
                                                        value: "nodes",
                                                      },
                                                      selectionSet: {
                                                        kind: "SelectionSet",
                                                        selections: [
                                                          {
                                                            kind: "FragmentSpread",
                                                            name: {
                                                              kind: "Name",
                                                              value:
                                                                "CompositionNodeData",
                                                            },
                                                          },
                                                          {
                                                            kind: "FragmentSpread",
                                                            name: {
                                                              kind: "Name",
                                                              value:
                                                                "CompositionComponentNodeData",
                                                            },
                                                          },
                                                        ],
                                                      },
                                                    },
                                                  ],
                                                },
                                              },
                                            ],
                                          },
                                        },
                                      ],
                                    },
                                  },
                                ],
                              },
                            },
                          ],
                        },
                      },
                      {
                        kind: "FragmentSpread",
                        name: {
                          kind: "Name",
                          value: "CompositionComponentNodeData",
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "PageData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "_IContent" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "FragmentSpread",
            name: { kind: "Name", value: "IContentData" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "BlankExperienceData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "BlankExperience" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "FragmentSpread",
            name: { kind: "Name", value: "ExperienceData" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ProductDetailExperienceData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ProductDetailExperience" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "SEOsettings" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "FragmentSpread",
                  name: { kind: "Name", value: "PageSeoSettingsData" },
                },
              ],
            },
          },
          {
            kind: "FragmentSpread",
            name: { kind: "Name", value: "ExperienceData" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "ProductListingEPageData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "ProductListingEPage" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "FragmentSpread",
            name: { kind: "Name", value: "ExperienceData" },
          },
        ],
      },
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "SectionData" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "Section" },
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "empty" },
            name: { kind: "Name", value: "_metadata" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "key" } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  getContentByPathQuery,
  getContentByPathQueryVariables
>;
export const getContentTypeDocument = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "getContentType" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "key" } },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "String" },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "version" },
          },
          type: { kind: "NamedType", name: { kind: "Name", value: "String" } },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "locale" },
          },
          type: {
            kind: "ListType",
            type: {
              kind: "NonNullType",
              type: {
                kind: "NamedType",
                name: { kind: "Name", value: "Locales" },
              },
            },
          },
        },
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "path" } },
          type: { kind: "NamedType", name: { kind: "Name", value: "String" } },
          defaultValue: { kind: "StringValue", value: "-", block: false },
        },
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "domain" },
          },
          type: { kind: "NamedType", name: { kind: "Name", value: "String" } },
        },
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            alias: { kind: "Name", value: "content" },
            name: { kind: "Name", value: "_Content" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "variation" },
                value: {
                  kind: "ObjectValue",
                  fields: [
                    {
                      kind: "ObjectField",
                      name: { kind: "Name", value: "include" },
                      value: { kind: "EnumValue", value: "ALL" },
                    },
                  ],
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "where" },
                value: {
                  kind: "ObjectValue",
                  fields: [
                    {
                      kind: "ObjectField",
                      name: { kind: "Name", value: "_or" },
                      value: {
                        kind: "ListValue",
                        values: [
                          {
                            kind: "ObjectValue",
                            fields: [
                              {
                                kind: "ObjectField",
                                name: { kind: "Name", value: "_metadata" },
                                value: {
                                  kind: "ObjectValue",
                                  fields: [
                                    {
                                      kind: "ObjectField",
                                      name: { kind: "Name", value: "key" },
                                      value: {
                                        kind: "ObjectValue",
                                        fields: [
                                          {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "eq" },
                                            value: {
                                              kind: "Variable",
                                              name: {
                                                kind: "Name",
                                                value: "key",
                                              },
                                            },
                                          },
                                        ],
                                      },
                                    },
                                    {
                                      kind: "ObjectField",
                                      name: { kind: "Name", value: "version" },
                                      value: {
                                        kind: "ObjectValue",
                                        fields: [
                                          {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "eq" },
                                            value: {
                                              kind: "Variable",
                                              name: {
                                                kind: "Name",
                                                value: "version",
                                              },
                                            },
                                          },
                                        ],
                                      },
                                    },
                                  ],
                                },
                              },
                            ],
                          },
                          {
                            kind: "ObjectValue",
                            fields: [
                              {
                                kind: "ObjectField",
                                name: { kind: "Name", value: "_metadata" },
                                value: {
                                  kind: "ObjectValue",
                                  fields: [
                                    {
                                      kind: "ObjectField",
                                      name: { kind: "Name", value: "url" },
                                      value: {
                                        kind: "ObjectValue",
                                        fields: [
                                          {
                                            kind: "ObjectField",
                                            name: {
                                              kind: "Name",
                                              value: "hierarchical",
                                            },
                                            value: {
                                              kind: "ObjectValue",
                                              fields: [
                                                {
                                                  kind: "ObjectField",
                                                  name: {
                                                    kind: "Name",
                                                    value: "eq",
                                                  },
                                                  value: {
                                                    kind: "Variable",
                                                    name: {
                                                      kind: "Name",
                                                      value: "path",
                                                    },
                                                  },
                                                },
                                              ],
                                            },
                                          },
                                          {
                                            kind: "ObjectField",
                                            name: {
                                              kind: "Name",
                                              value: "base",
                                            },
                                            value: {
                                              kind: "ObjectValue",
                                              fields: [
                                                {
                                                  kind: "ObjectField",
                                                  name: {
                                                    kind: "Name",
                                                    value: "eq",
                                                  },
                                                  value: {
                                                    kind: "Variable",
                                                    name: {
                                                      kind: "Name",
                                                      value: "domain",
                                                    },
                                                  },
                                                },
                                              ],
                                            },
                                          },
                                        ],
                                      },
                                    },
                                    {
                                      kind: "ObjectField",
                                      name: { kind: "Name", value: "version" },
                                      value: {
                                        kind: "ObjectValue",
                                        fields: [
                                          {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "eq" },
                                            value: {
                                              kind: "Variable",
                                              name: {
                                                kind: "Name",
                                                value: "version",
                                              },
                                            },
                                          },
                                        ],
                                      },
                                    },
                                  ],
                                },
                              },
                            ],
                          },
                        ],
                      },
                    },
                  ],
                },
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "locale" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "locale" },
                },
              },
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "total" } },
                {
                  kind: "Field",
                  alias: { kind: "Name", value: "items" },
                  name: { kind: "Name", value: "item" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "_metadata" },
                        selectionSet: {
                          kind: "SelectionSet",
                          selections: [
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "types" },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<getContentTypeQuery, getContentTypeQueryVariables>;
